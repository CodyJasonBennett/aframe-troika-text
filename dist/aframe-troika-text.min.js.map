{"version":3,"file":"aframe-troika-text.min.js","sources":["../node_modules/troika-worker-utils/dist/troika-worker-utils.esm.js","../node_modules/troika-three-utils/dist/troika-three-utils.esm.js","../node_modules/troika-3d-text/dist/textmesh-standalone.esm.js","../src/aframe-troika-text-component.js","../src/aframe-troika-text-primitive.js"],"sourcesContent":["/**\n * Lightweight thenable implementation that is entirely self-contained within a single\n * function with no external dependencies so it can be easily shipped across to a WorkerModule.\n *\n * This implementation conforms fully to the Promises/A+ spec so it can safely interoperate\n * with other thenable implementations. https://github.com/promises-aplus/promises-spec\n *\n * *However*, it is _not_ a full implementation of ES2015 Promises, e.g. it does not\n * have the same constructor signature and does not expose a `catch` method or the static\n * `resolve`/`reject`/`all`/`race` initializer methods. If you need to hand a Thenable\n * instance off to consuming code that may expect a true Promise, you'll want to wrap it\n * in a native-or-polyfilled Promise first.\n *\n * (Why yet another Promises/A+ implementation? Great question. We needed a polyfill-like\n * thing that was (a) wrapped in a single function for easy serialization across to a Worker,\n * and (b) was as small as possible -- at ~900B minified (~500B gzipped) this is the smallest\n * implementation I've found. And also, exercises like this are challenging and fun.)\n */\nfunction BespokeThenable() {\n  var state = 0; // 0=pending, 1=fulfilled, -1=rejected\n  var queue = [];\n  var value;\n  var scheduled = 0;\n  var completeCalled = 0;\n\n  function then(onResolve, onReject) {\n    var nextThenable = BespokeThenable();\n\n    function handleNext() {\n      var cb = state > 0 ? onResolve : onReject;\n      if (isFn(cb)) {\n        try {\n          var result = cb(value);\n          if (result === nextThenable) {\n            recursiveError();\n          }\n          var resultThen = getThenableThen(result);\n          if (resultThen) {\n            resultThen.call(result, nextThenable.resolve, nextThenable.reject);\n          } else {\n            nextThenable.resolve(result);\n          }\n        } catch (err) {\n          nextThenable.reject(err);\n        }\n      } else {\n        nextThenable[state > 0 ? 'resolve' : 'reject'](value);\n      }\n    }\n\n    queue.push(handleNext);\n    if (state) {\n      scheduleQueueFlush();\n    }\n    return nextThenable\n  }\n\n  var resolve = oneTime(function (val) {\n    if (!completeCalled) {\n      complete(1, val);\n    }\n  });\n\n  var reject = oneTime(function (reason) {\n    if (!completeCalled) {\n      complete(-1, reason);\n    }\n  });\n\n  function complete(st, val) {\n    completeCalled++;\n    var ignoreThrow = 0;\n    try {\n      if (val === thenableObj) {\n        recursiveError();\n      }\n      var valThen = st > 0 && getThenableThen(val);\n      if (valThen) {\n        valThen.call(val, oneTime(function (v) {\n          ignoreThrow++;\n          complete(1, v);\n        }), oneTime(function (v) {\n          ignoreThrow++;\n          complete(-1, v);\n        }));\n      } else {\n        state = st;\n        value = val;\n        scheduleQueueFlush();\n      }\n    } catch(e) {\n      if (!state && !ignoreThrow) {\n        complete(-1, e);\n      }\n    }\n  }\n\n  function scheduleQueueFlush() {\n    if (!scheduled) {\n      setTimeout(flushQueue, 0); //TODO setImmediate or postMessage approach if available?\n      scheduled = 1;\n    }\n  }\n\n  function flushQueue() {\n    var q = queue;\n    scheduled = 0;\n    queue = [];\n    q.forEach(callIt);\n  }\n\n  function callIt(fn) {\n    fn();\n  }\n\n  function getThenableThen(val) {\n    var valThen = val && (isFn(val) || typeof val === 'object') && val.then;\n    return isFn(valThen) && valThen\n  }\n\n  function oneTime(fn) {\n    var called = 0;\n    return function() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (!called++) {\n        fn.apply(this, args);\n      }\n    }\n  }\n\n  function recursiveError() {\n    throw new TypeError('Chaining cycle detected')\n  }\n\n  var isFn = function (v) { return typeof v === 'function'; };\n\n  var thenableObj = {\n    then: then,\n    resolve: resolve,\n    reject: reject\n  };\n  return thenableObj\n}\n\n\n/**\n * Thenable implementation that uses a native Promise under the covers. This implementation\n * is preferred if Promise is available, for better performance and dev tools integration.\n * @constructor\n */\nfunction NativePromiseThenable() {\n  var resolve, reject;\n  var promise = new Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    then: promise.then.bind(promise),\n    resolve: resolve,\n    reject: reject\n  }\n}\n\n\n/**\n * Choose the best Thenable implementation and export it as the default.\n */\nvar Thenable = (\n  typeof Promise === 'function' ? NativePromiseThenable : BespokeThenable\n);\n\nvar _workerModuleId = 0;\nvar _messageId = 0;\nvar workers = Object.create(null);\nvar openRequests = Object.create(null);\nopenRequests._count = 0;\n\n\n/**\n * Define a module of code that will be executed with a web worker. This provides a simple\n * interface for moving chunks of logic off the main thread, and managing their dependencies\n * among one another.\n *\n * @param {object} options\n * @param {function} options.init - The main function that initializes the module. This will be run\n *        within the worker, and will be passed the resolved dependencies as arguments. Its\n *        return value becomes the module's content, which can then be used by other modules\n *        that depend on it. This function can perform any logic using those dependencies, but\n *        must not depend on anything from its parent closures.\n * @param {array} [options.dependencies] - Provides any dependencies required by the init function:\n *        - Primitives like strings, numbers, booleans\n *        - Raw functions; these will be stringified and rehydrated within the worker so they\n *          must not depend on anything from their parent closures\n *        - Other worker modules; these will be resolved within the worker, and therefore modules\n *          that provide functions can be called without having to cross the worker/main thread\n *          boundary.\n * @param {function} [options.getTransferables] - An optional function that will be run in the worker\n *        just before posting the response value from a module call back to the main thread.\n *        It will be passed that response value, and if it returns an array then that will be\n *        used as the \"transferables\" parameter to `postMessage`. Use this if there are values\n *        in the response that can/should be transfered rather than cloned.\n * @param {string} [options.workerId] - By default all modules will run in the same dedicated worker,\n *        but if you want to use multiple workers you can pass a `workerId` to indicate a specific\n *        worker to spawn. Note that each worker is completely standalone and no data or state will\n *        be shared between them. If a worker module is used as a dependency by worker modules\n *        using different `workerId`s, then that dependency will be re-registered in each worker.\n * @return {function(...[*]): {then}}\n */\nfunction defineWorkerModule(options) {\n  if (!options || typeof options.init !== 'function') {\n    throw new Error('requires `options.init` function')\n  }\n  var dependencies = options.dependencies;\n  var init = options.init;\n  var getTransferables = options.getTransferables;\n  var workerId = options.workerId;\n  if (workerId == null) {\n    workerId = '#default';\n  }\n  var id = \"workerModule\" + (++_workerModuleId);\n  var registrationThenable = null;\n\n  dependencies = dependencies && dependencies.map(function (dep) {\n    // Wrap raw functions as worker modules with no dependencies\n    if (typeof dep === 'function' && !dep.workerModuleData) {\n      dep = defineWorkerModule({\n        workerId: workerId,\n        init: new Function((\"return function(){return (\" + (stringifyFunction(dep)) + \")}\"))()\n      });\n    }\n    // Grab postable data for worker modules\n    if (dep && dep.workerModuleData) {\n      dep = dep.workerModuleData;\n    }\n    return dep\n  });\n\n  function moduleFunc() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    // Register this module if needed\n    if (!registrationThenable) {\n      registrationThenable = callWorker(workerId,'registerModule', moduleFunc.workerModuleData);\n    }\n\n    // Invoke the module, returning a thenable\n    return registrationThenable.then(function (ref) {\n      var isCallable = ref.isCallable;\n\n      if (isCallable) {\n        return callWorker(workerId,'callModule', {id: id, args: args})\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  }\n  moduleFunc.workerModuleData = {\n    isWorkerModule: true,\n    id: id,\n    dependencies: dependencies,\n    init: stringifyFunction(init),\n    getTransferables: getTransferables && stringifyFunction(getTransferables)\n  };\n  return moduleFunc\n}\n\n/**\n * Stringifies a function into a form that can be deserialized in the worker\n * @param fn\n */\nfunction stringifyFunction(fn) {\n  var str = fn.toString();\n  // If it was defined in object method/property format, it needs to be modified\n  if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n    str = 'function ' + str;\n  }\n  return str\n}\n\n\nfunction getWorker(workerId) {\n  var worker = workers[workerId];\n  if (!worker) {\n    // Bootstrap the worker's content\n    var bootstrap = (function() {\n      var modules = Object.create(null);\n\n      // Handle messages for registering a module\n      function registerModule(ref, callback) {\n        var id = ref.id;\n        var dependencies = ref.dependencies; if ( dependencies === void 0 ) dependencies = [];\n        var init = ref.init; if ( init === void 0 ) init = function(){};\n        var getTransferables = ref.getTransferables; if ( getTransferables === void 0 ) getTransferables = null;\n\n        // Only register once\n        if (modules[id]) { return }\n\n        try {\n          // If any dependencies are modules, ensure they're registered and grab their value\n          dependencies = dependencies.map(function (dep) {\n            if (dep && dep.isWorkerModule) {\n              registerModule(dep, function (depResult) {\n                if (depResult instanceof Error) { throw depResult }\n              });\n              dep = modules[dep.id].value;\n            }\n            return dep\n          });\n\n          // Rehydrate functions\n          init = new Function((\"return (\" + init + \")\"))();\n          if (getTransferables) {\n            getTransferables = new Function((\"return (\" + getTransferables + \")\"))();\n          }\n\n          // Initialize the module and store its value\n          var value = init.apply(void 0, dependencies);\n          modules[id] = {\n            id: id,\n            value: value,\n            getTransferables: getTransferables\n          };\n          callback(value);\n        } catch(err) {\n          if (!(err && err.noLog)) {\n            console.error(err);\n          }\n          callback(err);\n        }\n      }\n\n      // Handle messages for calling a registered module's result function\n      function callModule(ref, callback) {\n        var ref$1;\n\n        var id = ref.id;\n        var args = ref.args;\n        if (!modules[id] || typeof modules[id].value !== 'function') {\n          callback(new Error((\"Worker module \" + id + \": not found or its 'init' did not return a function\")));\n        }\n        try {\n          var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n          if (result && typeof result.then === 'function') {\n            result.then(handleResult, function (rej) { return callback(rej instanceof Error ? rej : new Error('' + rej)); });\n          } else {\n            handleResult(result);\n          }\n        } catch(err) {\n          callback(err);\n        }\n        function handleResult(result) {\n          try {\n            var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n            if (!tx || !Array.isArray(tx) || !tx.length) {\n              tx = undefined; //postMessage is very picky about not passing null or empty transferables\n            }\n            callback(result, tx);\n          } catch(err) {\n            console.error(err);\n            callback(err);\n          }\n        }\n      }\n\n      // Handler for all messages within the worker\n      self.addEventListener('message', function (e) {\n        var ref = e.data;\n        var messageId = ref.messageId;\n        var action = ref.action;\n        var data = ref.data;\n        try {\n          // Module registration\n          if (action === 'registerModule') {\n            registerModule(data, function (result) {\n              if (result instanceof Error) {\n                postMessage({\n                  messageId: messageId,\n                  success: false,\n                  error: result.message\n                });\n              } else {\n                postMessage({\n                  messageId: messageId,\n                  success: true,\n                  result: {isCallable: typeof result === 'function'}\n                });\n              }\n            });\n          }\n          // Invocation\n          if (action === 'callModule') {\n            callModule(data, function (result, transferables) {\n              if (result instanceof Error) {\n                postMessage({\n                  messageId: messageId,\n                  success: false,\n                  error: result.message\n                });\n              } else {\n                postMessage({\n                  messageId: messageId,\n                  success: true,\n                  result: result\n                }, transferables || undefined);\n              }\n            });\n          }\n        } catch(err) {\n          postMessage({\n            messageId: messageId,\n            success: false,\n            error: err.stack\n          });\n        }\n      });\n    }).toString();\n\n    // Create the worker from the bootstrap function content\n    worker = workers[workerId] = new Worker(\n      URL.createObjectURL(\n        new Blob([(\";(\" + bootstrap + \")()\")], {type: 'application/javascript'})\n      )\n    );\n\n    // Single handler for response messages from the worker\n    worker.onmessage = function (e) {\n      var response = e.data;\n      var msgId = response.messageId;\n      var callback = openRequests[msgId];\n      if (!callback) {\n        throw new Error('WorkerModule response with empty or unknown messageId')\n      }\n      delete openRequests[msgId];\n      openRequests.count--;\n      callback(response);\n    };\n  }\n  return worker\n}\n\n// Issue a call to the worker with a callback to handle the response\nfunction callWorker(workerId, action, data) {\n  var thenable = Thenable();\n  var messageId = ++_messageId;\n  openRequests[messageId] = function (response) {\n    if (response.success) {\n      thenable.resolve(response.result);\n    } else {\n      thenable.reject(new Error((\"Error in worker \" + action + \" call: \" + (response.error))));\n    }\n  };\n  openRequests._count++;\n  if (openRequests.count > 1000) { //detect leaks\n    console.warn('Large number of open WorkerModule requests, some may not be returning');\n  }\n  getWorker(workerId).postMessage({\n    messageId: messageId,\n    action: action,\n    data: data\n  });\n  return thenable\n}\n\n/**\n * Just the {@link Thenable} function wrapped as a worker module. If another worker\n * module needs Thenable as a dependency, it's better to pass this module rather than\n * the raw function in its `dependencies` array so it only gets registered once.\n */\nvar ThenableWorkerModule = defineWorkerModule({\n  dependencies: [Thenable],\n  init: function(Thenable) {\n    return Thenable\n  }\n});\n\nexport { Thenable, ThenableWorkerModule, defineWorkerModule };\n","import { ShaderChunk, UniformsUtils, MeshDepthMaterial, RGBADepthPacking, MeshDistanceMaterial, ShaderLib, DataTexture, Vector3, MeshStandardMaterial, DoubleSide, Mesh, CylinderBufferGeometry, Vector2 } from 'three';\n\n/**\n * Regular expression for matching the `void main() {` opener line in GLSL.\n * @type {RegExp}\n */\nvar voidMainRegExp = /\\bvoid\\s+main\\s*\\(\\s*\\)\\s*{/g;\n\n/**\n * Recursively expands all `#include <xyz>` statements within string of shader code.\n * Copied from three's WebGLProgram#parseIncludes for external use.\n *\n * @param {string} source - The GLSL source code to evaluate\n * @return {string} The GLSL code with all includes expanded\n */\nfunction expandShaderIncludes( source ) {\n  var pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n  function replace(match, include) {\n    var chunk = ShaderChunk[include];\n    return chunk ? expandShaderIncludes(chunk) : match\n  }\n  return source.replace( pattern, replace )\n}\n\n// Local assign polyfill to avoid importing troika-core\nvar assign = Object.assign || function(/*target, ...sources*/) {\n  var arguments$1 = arguments;\n\n  var target = arguments[0];\n  for (var i = 1, len = arguments.length; i < len; i++) {\n    var source = arguments$1[i];\n    if (source) {\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          target[prop] = source[prop];\n        }\n      }\n    }\n  }\n  return target\n};\n\n\nvar idCtr = 0;\nvar epoch = Date.now();\nvar CACHE = new WeakMap(); //threejs requires WeakMap internally so should be safe to assume support\n\n\n/**\n * A utility for creating a custom shader material derived from another material's\n * shaders. This allows you to inject custom shader logic and transforms into the\n * builtin ThreeJS materials without having to recreate them from scratch.\n *\n * @param {THREE.Material} baseMaterial - the original material to derive from\n *\n * @param {Object} options - How the base material should be modified.\n * @param {Object} options.defines - Custom `defines` for the material\n * @param {Object} options.extensions - Custom `extensions` for the material, e.g. `{derivatives: true}`\n * @param {Object} options.uniforms - Custom `uniforms` for use in the modified shader. These can\n *        be accessed and manipulated via the resulting material's `uniforms` property, just like\n *        in a ShaderMaterial. You do not need to repeat the base material's own uniforms here.\n * @param {String} options.timeUniform - If specified, a uniform of this name will be injected into\n *        both shaders, and it will automatically be updated on each render frame with a number of\n *        elapsed milliseconds. The \"zero\" epoch time is not significant so don't rely on this as a\n *        true calendar time.\n * @param {String} options.vertexDefs - Custom GLSL code to inject into the vertex shader's top-level\n *        definitions, above the `void main()` function.\n * @param {String} options.vertexMainIntro - Custom GLSL code to inject at the top of the vertex\n *        shader's `void main` function.\n * @param {String} options.vertexTransform - Custom GLSL code to manipulate the `position`, `normal`,\n *        and/or `uv` vertex attributes. This code will be wrapped within a standalone function with\n *        those attributes exposed by their normal names as read/write values.\n * @param {String} options.fragmentDefs - Custom GLSL code to inject into the fragment shader's top-level\n *        definitions, above the `void main()` function.\n * @param {String} options.fragmentMainIntro - Custom GLSL code to inject at the top of the fragment\n *        shader's `void main` function.\n * @param {String} options.fragmentColorTransform - Custom GLSL code to manipulate the `gl_FragColor`\n *        output value. Will be injected after all other `void main` logic has executed.\n *        TODO allow injecting before base shader logic or elsewhere?\n *\n * @return {THREE.Material}\n *\n * The returned material will also have two new methods, `getDepthMaterial()` and `getDistanceMaterial()`,\n * which can be called to get a variant of the derived material for use in shadow casting. If the\n * target mesh is expected to cast shadows, then you can assign these to the mesh's `customDepthMaterial`\n * (for directional and spot lights) and/or `customDistanceMaterial` (for point lights) properties to\n * allow the cast shadow to honor your derived shader's vertex transforms and discarded fragments. These\n * will also set a custom `#define IS_DEPTH_MATERIAL` or `#define IS_DISTANCE_MATERIAL` that you can look\n * for in your derived shaders with `#ifdef` to customize their behavior for the depth or distance\n * scenarios, e.g. skipping antialiasing or expensive shader logic.\n */\nfunction createDerivedMaterial(baseMaterial, options) {\n  // First check the cache to see if we've already derived from this baseMaterial using\n  // this unique set of options, and if so just return a clone instead of a new subclass\n  // which is faster and allows their shader program to be shared when rendering.\n  var optionsHash = getOptionsHash(options);\n  var cached = CACHE.get(baseMaterial);\n  if (!cached) {\n    cached = Object.create(null);\n    CACHE.set(baseMaterial, cached);\n  }\n  if (cached[optionsHash]) {\n    return cached[optionsHash].clone()\n  }\n\n  var id = ++idCtr;\n  var privateDerivedShadersProp = \"_derivedShaders\" + id;\n  var privateBeforeCompileProp = \"_onBeforeCompile\" + id;\n  var distanceMaterialTpl, depthMaterialTpl;\n\n  // Private onBeforeCompile handler that injects the modified shaders and uniforms when\n  // the renderer switches to this material's program\n  function onBeforeCompile(shaderInfo) {\n    baseMaterial.onBeforeCompile.call(this, shaderInfo);\n\n    // Upgrade the shaders, caching the result\n    var ref = this[privateDerivedShadersProp] || (this[privateDerivedShadersProp] = {vertex: {}, fragment: {}});\n    var vertex = ref.vertex;\n    var fragment = ref.fragment;\n    if (vertex.source !== shaderInfo.vertexShader || fragment.source !== shaderInfo.fragmentShader) {\n      var upgraded = upgradeShaders(shaderInfo, options, id);\n      vertex.source = shaderInfo.vertexShader;\n      vertex.result = upgraded.vertexShader;\n      fragment.source = shaderInfo.fragmentShader;\n      fragment.result = upgraded.fragmentShader;\n    }\n\n    // Inject upgraded shaders and uniforms into the program\n    shaderInfo.vertexShader = vertex.result;\n    shaderInfo.fragmentShader = fragment.result;\n    assign(shaderInfo.uniforms, this.uniforms);\n\n    // Inject auto-updating time uniform if requested\n    if (options.timeUniform) {\n      shaderInfo.uniforms[options.timeUniform] = {\n        get value() {return Date.now() - epoch}\n      };\n    }\n\n    // Users can still add their own handlers on top of ours\n    if (this[privateBeforeCompileProp]) {\n      this[privateBeforeCompileProp](shaderInfo);\n    }\n  }\n\n  function DerivedMaterial() {\n    baseMaterial.constructor.apply(this, arguments);\n    this._listeners = undefined; //don't inherit EventDispatcher listeners\n  }\n  DerivedMaterial.prototype = Object.create(baseMaterial, {\n    constructor: {value: DerivedMaterial},\n    isDerivedMaterial: {value: true},\n    baseMaterial: {value: baseMaterial},\n\n    onBeforeCompile: {\n      get: function get() {\n        return onBeforeCompile\n      },\n      set: function set(fn) {\n        this[privateBeforeCompileProp] = fn;\n      }\n    },\n\n    copy: {\n      value: function (source) {\n        baseMaterial.copy.call(this, source);\n        if (!baseMaterial.isShaderMaterial && !baseMaterial.isDerivedMaterial) {\n          this.extensions = assign({}, source.extensions);\n          this.defines = assign({}, source.defines);\n          this.uniforms = UniformsUtils.clone(source.uniforms);\n        }\n        return this\n      }\n    },\n\n    /**\n     * Utility to get a MeshDepthMaterial that will honor this derived material's vertex\n     * transformations and discarded fragments.\n     */\n    getDepthMaterial: {value: function() {\n      var depthMaterial = this._depthMaterial;\n      if (!depthMaterial) {\n        if (!depthMaterialTpl) {\n          depthMaterialTpl = createDerivedMaterial(\n            baseMaterial.isDerivedMaterial\n              ? baseMaterial.getDepthMaterial()\n              : new MeshDepthMaterial({depthPacking: RGBADepthPacking}),\n            options\n          );\n          depthMaterialTpl.defines.IS_DEPTH_MATERIAL = '';\n        }\n        depthMaterial = this._depthMaterial = depthMaterialTpl.clone();\n      }\n      return depthMaterial\n    }},\n\n    /**\n     * Utility to get a MeshDistanceMaterial that will honor this derived material's vertex\n     * transformations and discarded fragments.\n     */\n    getDistanceMaterial: {value: function() {\n      var distanceMaterial = this._distanceMaterial;\n      if (!distanceMaterial) {\n        if (!distanceMaterialTpl) {\n          distanceMaterialTpl = createDerivedMaterial(\n            baseMaterial.isDerivedMaterial\n              ? baseMaterial.getDistanceMaterial()\n              : new MeshDistanceMaterial(),\n            options\n          );\n          distanceMaterialTpl.defines.IS_DISTANCE_MATERIAL = '';\n        }\n        distanceMaterial = this._distanceMaterial = distanceMaterialTpl.clone();\n      }\n      return distanceMaterial\n    }},\n\n    dispose: {value: function value() {\n      var ref = this;\n      var _depthMaterial = ref._depthMaterial;\n      var _distanceMaterial = ref._distanceMaterial;\n      if (_depthMaterial) { _depthMaterial.dispose(); }\n      if (_distanceMaterial) { _distanceMaterial.dispose(); }\n      baseMaterial.dispose.call(this);\n    }}\n  });\n\n  var material = new DerivedMaterial();\n  material.copy(baseMaterial);\n\n  // Merge uniforms, defines, and extensions\n  material.uniforms = assign(UniformsUtils.clone(baseMaterial.uniforms || {}), options.uniforms);\n  material.defines = assign({}, baseMaterial.defines, options.defines);\n  material.defines.TROIKA_DERIVED_MATERIAL = id; //force a program change from the base material\n  material.extensions = assign({}, baseMaterial.extensions, options.extensions);\n\n  cached[optionsHash] = material;\n  return material.clone() //return a clone so changes made to it don't affect the cached object\n}\n\n\nfunction upgradeShaders(ref, options, id) {\n  var vertexShader = ref.vertexShader;\n  var fragmentShader = ref.fragmentShader;\n\n  var vertexDefs = options.vertexDefs;\n  var vertexMainIntro = options.vertexMainIntro;\n  var vertexTransform = options.vertexTransform;\n  var fragmentDefs = options.fragmentDefs;\n  var fragmentMainIntro = options.fragmentMainIntro;\n  var fragmentColorTransform = options.fragmentColorTransform;\n  var timeUniform = options.timeUniform;\n\n  // Inject auto-updating time uniform if requested\n  if (timeUniform) {\n    var code = \"\\nuniform float \" + timeUniform + \";\\n\";\n    vertexDefs = (vertexDefs || '') + code;\n    fragmentDefs = (fragmentDefs || '') + code;\n  }\n\n  // Modify vertex shader\n  if (vertexDefs || vertexMainIntro || vertexTransform) {\n    // If there's a position transform, we need to:\n    // - expand all include statements\n    // - replace all usages of the `position` attribute with a mutable variable\n    // - inject the transform code into a function and call it to transform the position\n    if (vertexTransform) {\n      vertexShader = expandShaderIncludes(vertexShader);\n      vertexDefs = (vertexDefs || '') + \"\\nvoid troikaVertexTransform\" + id + \"(inout vec3 position, inout vec3 normal, inout vec2 uv) {\\n  \" + vertexTransform + \"\\n}\\n\";\n      vertexShader = vertexShader.replace(/\\b(position|normal|uv)\\b/g, function (match, match1, index, fullStr) {\n        return /\\battribute\\s+vec[23]\\s+$/.test(fullStr.substr(0, index)) ? match1 : (\"troika_\" + match1 + \"_\" + id)\n      });\n      vertexMainIntro = \"\\nvec3 troika_position_\" + id + \" = vec3(position);\\nvec3 troika_normal_\" + id + \" = vec3(normal);\\nvec2 troika_uv_\" + id + \" = vec2(uv);\\ntroikaVertexTransform\" + id + \"(troika_position_\" + id + \", troika_normal_\" + id + \", troika_uv_\" + id + \");\\n\" + (vertexMainIntro || '') + \"\\n\";\n    }\n\n    vertexShader = vertexShader.replace(\n      voidMainRegExp,\n      ((vertexDefs || '') + \"\\n\\n$&\\n\\n\" + (vertexMainIntro || '')));\n  }\n\n  // Modify fragment shader\n  if (fragmentDefs || fragmentMainIntro || fragmentColorTransform) {\n    fragmentShader = expandShaderIncludes(fragmentShader);\n    fragmentShader = fragmentShader.replace(voidMainRegExp, (\"\\n\" + (fragmentDefs || '') + \"\\nvoid troikaOrigMain\" + id + \"() {\\n\" + (fragmentMainIntro || '') + \"\\n\"));\n    fragmentShader += \"\\nvoid main() {\\n  troikaOrigMain\" + id + \"();\\n  \" + (fragmentColorTransform || '') + \"\\n}\";\n  }\n\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader\n  }\n}\n\n\nfunction getOptionsHash(options) {\n  return JSON.stringify(options, optionsJsonReplacer)\n}\nfunction optionsJsonReplacer(key, value) {\n  return key === 'uniforms' ? undefined : value\n}\n\n// Copied from threejs WebGLPrograms.js so we can resolve builtin materials to their shaders\n// TODO how can we keep this from getting stale?\nvar MATERIAL_TYPES_TO_SHADERS = {\n  MeshDepthMaterial: 'depth',\n  MeshDistanceMaterial: 'distanceRGBA',\n  MeshNormalMaterial: 'normal',\n  MeshBasicMaterial: 'basic',\n  MeshLambertMaterial: 'lambert',\n  MeshPhongMaterial: 'phong',\n  MeshToonMaterial: 'phong',\n  MeshStandardMaterial: 'physical',\n  MeshPhysicalMaterial: 'physical',\n  MeshMatcapMaterial: 'matcap',\n  LineBasicMaterial: 'basic',\n  LineDashedMaterial: 'dashed',\n  PointsMaterial: 'points',\n  ShadowMaterial: 'shadow',\n  SpriteMaterial: 'sprite'\n};\n\n/**\n * Given a Three.js `Material` instance, find the shaders/uniforms that will be\n * used to render that material.\n *\n * @param material - the Material instance\n * @return {object} - the material's shader info: `{uniforms:{}, fragmentShader:'', vertexShader:''}`\n */\nfunction getShadersForMaterial(material) {\n  var builtinType = MATERIAL_TYPES_TO_SHADERS[material.type];\n  return builtinType ? ShaderLib[builtinType] : material //TODO fallback for unknown type?\n}\n\n/**\n * Find all uniforms and their types within a shader code string.\n *\n * @param {string} shader - The shader code to parse\n * @return {object} mapping of uniform names to their glsl type\n */\nfunction getShaderUniformTypes(shader) {\n  var uniformRE = /\\buniform\\s+(int|float|vec[234])\\s+([A-Za-z_][\\w]*)/g;\n  var uniforms = Object.create(null);\n  var match;\n  while ((match = uniformRE.exec(shader)) !== null) {\n    uniforms[match[2]] = match[1];\n  }\n  return uniforms\n}\n\n/**\n * @class ShaderFloatArray\n *\n * When writing a custom WebGL shader, sometimes you need to pass it an array of floating\n * point numbers that it can read from. Unfortunately this is very difficult to do in WebGL,\n * because:\n *\n *   - GLSL \"array\" uniforms can only be of a constant length.\n *   - Textures can only hold floating point numbers in WebGL1 if the `OES_texture_float`\n *     extension is available.\n *\n * ShaderFloatArray is an array-like abstraction that encodes its floating point data into\n * an RGBA texture's four Uint8 components, and provides the corresponding ThreeJS uniforms\n * and GLSL code for you to put in your custom shader to query the float values by array index.\n *\n * This should generally only be used within a fragment shader, as some environments (e.g. iOS)\n * only allow texture lookups in fragment shaders.\n *\n * TODO:\n *   - Use a float texture if the extension is available so we can skip the encoding process\n */\nvar ShaderFloatArray = function ShaderFloatArray(name) {\n  this.name = name;\n  this.textureUniform = \"dataTex_\" + name;\n  this.textureSizeUniform = \"dataTexSize_\" + name;\n  this.multiplierUniform = \"dataMultiplier_\" + name;\n\n  /**\n   * @property dataSizeUniform - the name of the GLSL uniform that will hold the\n   * length of the data array.\n   * @type {string}\n   */\n  this.dataSizeUniform = \"dataSize_\" + name;\n\n  /**\n   * @property readFunction - the name of the GLSL function that should be called to\n   * read data out of the array by index.\n   * @type {string}\n   */\n  this.readFunction = \"readData_\" + name;\n\n  this._raw = new Float32Array(0);\n  this._texture = new DataTexture(new Uint8Array(0), 0, 1);\n  this._length = 0;\n  this._multiplier = 1;\n};\n\nvar prototypeAccessors = { length: { configurable: true } };\n\n/**\n * @property length - the current length of the data array\n * @type {number}\n */\nprototypeAccessors.length.set = function (value) {\n  if (value !== this._length) {\n    // Find nearest power-of-2 that holds the new length\n    var size = Math.pow(2, Math.ceil(Math.log2(value)));\n    var raw = this._raw;\n    if (size < raw.length) {\n      this._raw = raw.subarray(0, size);\n    }\n    else if(size > raw.length) {\n      this._raw = new Float32Array(size);\n      this._raw.set(raw);\n    }\n    this._length = value;\n  }\n};\nprototypeAccessors.length.get = function () {\n  return this._length\n};\n\n/**\n * Add a value to the end of the data array\n * @param {number} value\n */\nShaderFloatArray.prototype.push = function push (value) {\n  return this.set(this.length++, value)\n};\n\n/**\n * Replace the existing data with that from a new array\n * @param {ArrayLike<number>} array\n */\nShaderFloatArray.prototype.setArray = function setArray (array) {\n  this.length = array.length;\n  this._raw.set(array);\n  this._needsRepack = true;\n};\n\n/**\n * Get the current value at index\n * @param {number} index\n * @return {number}\n */\nShaderFloatArray.prototype.get = function get (index) {\n  return this._raw[index]\n};\n\nShaderFloatArray.prototype.set = function set (index, value) {\n  if (index + 1 > this._length) {\n    this.length = index + 1;\n  }\n  if (value !== this._raw[index]) {\n    this._raw[index] = value;\n    encodeFloatToFourInts(\n      value / this._multiplier,\n      this._texture.image.data,\n      index * 4\n    );\n    this._needsMultCheck = true;\n  }\n};\n\n/**\n * Make a copy of this ShaderFloatArray\n * @return {ShaderFloatArray}\n */\nShaderFloatArray.prototype.clone = function clone () {\n  var clone = new ShaderFloatArray(this.name);\n  clone.setArray(this._raw);\n  return clone\n};\n\n/**\n * Retrieve the set of Uniforms that must to be added to the target ShaderMaterial or\n * DerivedMaterial, to feed the GLSL code generated by {@link #getShaderHeaderCode}.\n * @return {Object}\n */\nShaderFloatArray.prototype.getShaderUniforms = function getShaderUniforms () {\n    var obj;\n\n  var me = this;\n  return ( obj = {}, obj[this.textureUniform] = {get value() {\n      me._sync();\n      return me._texture\n    }}, obj[this.textureSizeUniform] = {get value() {\n      me._sync();\n      return me._texture.image.width\n    }}, obj[this.dataSizeUniform] = {get value() {\n      me._sync();\n      return me.length\n    }}, obj[this.multiplierUniform] = {get value() {\n      me._sync();\n      return me._multiplier\n    }}, obj )\n};\n\n/**\n * Retrieve the GLSL code that must be injected into the shader's definitions area to\n * enable reading from the data array. This exposes a function with a name matching\n * the {@link #readFunction} property, which other shader code can call to read values\n * from the array by their index.\n * @return {string}\n */\nShaderFloatArray.prototype.getShaderHeaderCode = function getShaderHeaderCode () {\n  var ref = this;\n    var textureUniform = ref.textureUniform;\n    var textureSizeUniform = ref.textureSizeUniform;\n    var dataSizeUniform = ref.dataSizeUniform;\n    var multiplierUniform = ref.multiplierUniform;\n    var readFunction = ref.readFunction;\n  return (\"\\nuniform sampler2D \" + textureUniform + \";\\nuniform float \" + textureSizeUniform + \";\\nuniform float \" + dataSizeUniform + \";\\nuniform float \" + multiplierUniform + \";\\n\\nfloat \" + readFunction + \"(float index) {\\n  vec2 texUV = vec2((index + 0.5) / \" + textureSizeUniform + \", 0.5);\\n  vec4 pixel = texture2D(\" + textureUniform + \", texUV);\\n  return dot(pixel, 1.0 / vec4(1.0, 255.0, 65025.0, 16581375.0)) * \" + multiplierUniform + \";\\n}\\n\")\n};\n\n/**\n * @private Synchronize any pending changes to the underlying DataTexture\n */\nShaderFloatArray.prototype._sync = function _sync () {\n  var tex = this._texture;\n  var raw = this._raw;\n  var needsRepack = this._needsRepack;\n\n  // If the size of the raw array changed, resize the texture to match\n  if (raw.length !== tex.image.width) {\n    tex.image = {\n      data: new Uint8Array(raw.length * 4),\n      width: raw.length,\n      height: 1\n    };\n    needsRepack = true;\n  }\n\n  // If the values changed, check the multiplier. This should be a value by which\n  // all the values are divided to constrain them to the [0,1] range required by\n  // the Uint8 packing algorithm. We pick the nearest power of 2 that holds the\n  // maximum value for greatest accuracy.\n  if (needsRepack || this._needsMultCheck) {\n    var maxVal = this._raw.reduce(function (a, b) { return Math.max(a, b); }, 0);\n    var mult = Math.pow(2, Math.ceil(Math.log2(maxVal)));\n    if (mult !== this._multiplier) {\n      this._multiplier = mult;\n      needsRepack = true;\n    }\n    tex.needsUpdate = true;\n    this._needsMultCheck = false;\n  }\n\n  // If things changed in a way we need to repack, do so\n  if (needsRepack) {\n    for (var i = 0, len = raw.length, mult$1 = this._multiplier; i < len; i++) {\n      encodeFloatToFourInts(raw[i] / mult$1, tex.image.data, i * 4);\n    }\n    this._needsRepack = false;\n  }\n};\n\nObject.defineProperties( ShaderFloatArray.prototype, prototypeAccessors );\n\n\n\n/**\n * Encode a floating point number into a set of four 8-bit integers.\n * Also see the companion decoder function #decodeFloatFromFourInts.\n *\n * This is adapted to JavaScript from the basic approach at\n * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n * but writes out integers in the range 0-255 instead of floats in the range 0-1\n * so they can be more easily used in a Uint8Array for standard WebGL rgba textures.\n *\n * Some precision will necessarily be lost during the encoding and decoding process.\n * Testing shows that the maximum precision error is ~1.18e-10 which should be good\n * enough for most cases.\n *\n * @param {Number} value - the floating point number to encode. Must be in the range [0, 1]\n *        otherwise the results will be incorrect.\n * @param {Array|Uint8Array} array - an array into which the four ints should be written\n * @param {Number} startIndex - index in the output array at which to start writing the ints\n * @return {Array|Uint8Array}\n */\nfunction encodeFloatToFourInts(value, array, startIndex) {\n  // This is adapted to JS from the basic approach at\n  // http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n  // but writes to a Uint8Array instead of floats. Input values must be in\n  // the range [0, 1]. The maximum error after encoding and decoding is ~1.18e-10\n  var enc0 = 255 * value;\n  var enc1 = 255 * (enc0 % 1);\n  var enc2 = 255 * (enc1 % 1);\n  var enc3 = 255 * (enc2 % 1);\n\n  enc0 = enc0 & 255;\n  enc1 = enc1 & 255;\n  enc2 = enc2 & 255;\n  enc3 = Math.round(enc3) & 255;\n\n  array[startIndex] = enc0;\n  array[startIndex + 1] = enc1;\n  array[startIndex + 2] = enc2;\n  array[startIndex + 3] = enc3;\n  return array\n}\n\n/*\nInput geometry is a cylinder with r=1, height in y dimension from 0 to 1,\ndivided into a reasonable number of height segments.\n*/\n\nvar vertexDefs = \"\\nuniform vec3 pointA;\\nuniform vec3 controlA;\\nuniform vec3 controlB;\\nuniform vec3 pointB;\\nuniform float radius;\\nvarying float bezierT;\\n\\nvec3 cubicBezier(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\\n  float t2 = 1.0 - t;\\n  float b0 = t2 * t2 * t2;\\n  float b1 = 3.0 * t * t2 * t2;\\n  float b2 = 3.0 * t * t * t2;\\n  float b3 = t * t * t;\\n  return b0 * p1 + b1 * c1 + b2 * c2 + b3 * p2;\\n}\\n\\nvec3 cubicBezierDerivative(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\\n  float t2 = 1.0 - t;\\n  return -3.0 * p1 * t2 * t2 +\\n    c1 * (3.0 * t2 * t2 - 6.0 * t2 * t) +\\n    c2 * (6.0 * t2 * t - 3.0 * t * t) +\\n    3.0 * p2 * t * t;\\n}\\n\";\n\nvar vertexTransform = \"\\nfloat t = position.y;\\nbezierT = t;\\nvec3 bezierCenterPos = cubicBezier(pointA, controlA, controlB, pointB, t);\\nvec3 bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t));\\n\\n// Make \\\"sideways\\\" always perpendicular to the camera ray; this ensures that any twists\\n// in the cylinder occur where you won't see them: \\nvec3 viewDirection = normalMatrix * vec3(0.0, 0.0, 1.0);\\nif (bezierDir == viewDirection) {\\n  bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t == 1.0 ? t - 0.0001 : t + 0.0001));\\n}\\nvec3 sideways = normalize(cross(bezierDir, viewDirection));\\nvec3 upish = normalize(cross(sideways, bezierDir));\\n\\n// Build a matrix for transforming this disc in the cylinder:\\nmat4 discTx;\\ndiscTx[0].xyz = sideways * radius;\\ndiscTx[1].xyz = bezierDir * radius;\\ndiscTx[2].xyz = upish * radius;\\ndiscTx[3].xyz = bezierCenterPos;\\ndiscTx[3][3] = 1.0;\\n\\n// Apply transform, ignoring original y\\nposition = (discTx * vec4(position.x, 0.0, position.z, 1.0)).xyz;\\nnormal = normalize(mat3(discTx) * normal);\\n\";\n\nvar fragmentDefs = \"\\nuniform vec3 dashing;\\nvarying float bezierT;\\n\";\n\nvar fragmentMainIntro = \"\\nif (dashing.x + dashing.y > 0.0) {\\n  float dashFrac = mod(bezierT - dashing.z, dashing.x + dashing.y);\\n  if (dashFrac > dashing.x) {\\n    discard;\\n  }\\n}\\n\";\n\n// Debugging: separate color for each of the 6 sides:\n// const fragmentColorTransform = `\n// float sideNum = floor(vUV.x * 6.0);\n// vec3 mixColor = sideNum < 1.0 ? vec3(1.0, 0.0, 0.0) :\n//   sideNum < 2.0 ? vec3(0.0, 1.0, 1.0) :\n//   sideNum < 3.0 ? vec3(1.0, 1.0, 0.0) :\n//   sideNum < 4.0 ? vec3(0.0, 0.0, 1.0) :\n//   sideNum < 5.0 ? vec3(0.0, 1.0, 0.0) :\n//   vec3(1.0, 0.0, 1.0);\n// gl_FragColor.xyz = mix(gl_FragColor.xyz, mixColor, 0.5);\n// `\n\n\n\nfunction createBezierMeshMaterial(baseMaterial) {\n  return createDerivedMaterial(\n    baseMaterial,\n    {\n      uniforms: {\n        pointA: {value: new Vector3()},\n        controlA: {value: new Vector3()},\n        controlB: {value: new Vector3()},\n        pointB: {value: new Vector3()},\n        radius: {value: 0.01},\n        dashing: {value: new Vector3()} //on, off, offset\n      },\n      vertexDefs: vertexDefs,\n      vertexTransform: vertexTransform,\n      fragmentDefs: fragmentDefs,\n      fragmentMainIntro: fragmentMainIntro\n    }\n  )\n}\n\nvar geometry = null;\n\nvar defaultBaseMaterial = new MeshStandardMaterial({color: 0xffffff, side: DoubleSide});\n\n\n/**\n * A ThreeJS `Mesh` that bends a tube shape along a 3D cubic bezier path. The bending is done\n * by deforming a straight cylindrical geometry in the vertex shader based on a set of four\n * control point uniforms. It patches the necessary GLSL into the mesh's assigned `material`\n * automatically.\n *\n * The cubiz bezier path is determined by its four `Vector3` properties:\n * - `pointA`\n * - `controlA`\n * - `controlB`\n * - `pointB`\n *\n * The tube's radius is controlled by its `radius` property, which defaults to `0.01`.\n *\n * You can also give the tube a dashed appearance with two properties:\n *\n * - `dashArray` - an array of two numbers, defining the length of \"on\" and \"off\" parts of\n *   the dash. Each is a 0-1 ratio of the entire path's length. (Actually this is the `t` length\n *   used as input to the cubic bezier function, not its visible length.)\n * - `dashOffset` - offset of where the dash starts. You can animate this to make the dashes move.\n *\n * Note that the dashes will appear like a hollow tube, not solid. This will be more apparent on\n * thicker tubes.\n *\n * TODO: proper geometry bounding sphere and raycasting\n * TODO: allow control of the geometry's segment counts\n */\nvar BezierMesh = /*@__PURE__*/(function (Mesh) {\n  function BezierMesh() {\n    Mesh.call(\n      this, geometry || (geometry =\n        new CylinderBufferGeometry(1, 1, 1, 6, 64).translate(0, 0.5, 0)\n      ),\n      defaultBaseMaterial\n    );\n\n    this.pointA = new Vector3();\n    this.controlA = new Vector3();\n    this.controlB = new Vector3();\n    this.pointB = new Vector3();\n    this.radius = 0.01;\n    this.dashArray = new Vector2();\n    this.dashOffset = 0;\n\n    // TODO - disabling frustum culling until I figure out how to customize the\n    //  geometry's bounding sphere that gets used\n    this.frustumCulled = false;\n  }\n\n  if ( Mesh ) BezierMesh.__proto__ = Mesh;\n  BezierMesh.prototype = Object.create( Mesh && Mesh.prototype );\n  BezierMesh.prototype.constructor = BezierMesh;\n\n  var prototypeAccessors = { material: { configurable: true },customDepthMaterial: { configurable: true },customDistanceMaterial: { configurable: true } };\n\n  // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n  // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n  prototypeAccessors.material.get = function () {\n    var derivedMaterial = this._derivedMaterial;\n    var baseMaterial = this._baseMaterial || defaultBaseMaterial;\n    if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n      if (derivedMaterial) {\n        derivedMaterial.dispose();\n      }\n      derivedMaterial = this._derivedMaterial = createBezierMeshMaterial(baseMaterial);\n      // dispose the derived material when its base material is disposed:\n      baseMaterial.addEventListener('dispose', function onDispose() {\n        baseMaterial.removeEventListener('dispose', onDispose);\n        derivedMaterial.dispose();\n      });\n    }\n    return derivedMaterial\n  };\n  prototypeAccessors.material.set = function (baseMaterial) {\n    this._baseMaterial = baseMaterial;\n  };\n\n  // Create and update material for shadows upon request:\n  prototypeAccessors.customDepthMaterial.get = function () {\n    return this._updateBezierUniforms(this.material.getDepthMaterial())\n  };\n  prototypeAccessors.customDistanceMaterial.get = function () {\n    return this._updateBezierUniforms(this.material.getDistanceMaterial())\n  };\n\n  BezierMesh.prototype.onBeforeRender = function onBeforeRender (shaderInfo) {\n    this._updateBezierUniforms(this.material);\n  };\n\n  BezierMesh.prototype._updateBezierUniforms = function _updateBezierUniforms (material) {\n    var uniforms = material.uniforms;\n    var ref = this;\n    var pointA = ref.pointA;\n    var controlA = ref.controlA;\n    var controlB = ref.controlB;\n    var pointB = ref.pointB;\n    var radius = ref.radius;\n    var dashArray = ref.dashArray;\n    var dashOffset = ref.dashOffset;\n    uniforms.pointA.value.copy(pointA);\n    uniforms.controlA.value.copy(controlA);\n    uniforms.controlB.value.copy(controlB);\n    uniforms.pointB.value.copy(pointB);\n    uniforms.radius.value = radius;\n    uniforms.dashing.value.set(dashArray.x, dashArray.y, dashOffset || 0);\n    return material\n  };\n\n  BezierMesh.prototype.raycast = function raycast (raycaster, intersects) {\n    // TODO - just fail for now\n  };\n\n  Object.defineProperties( BezierMesh.prototype, prototypeAccessors );\n\n  return BezierMesh;\n}(Mesh));\n\nexport { BezierMesh, ShaderFloatArray, createDerivedMaterial, expandShaderIncludes, getShaderUniformTypes, getShadersForMaterial, voidMainRegExp };\n","import { DataTexture, LuminanceFormat, LinearFilter, PlaneBufferGeometry, Vector3, InstancedBufferGeometry, InstancedBufferAttribute, Sphere, Vector2, Vector4, MeshBasicMaterial, DoubleSide, Matrix4, Mesh } from 'three';\nimport { defineWorkerModule, ThenableWorkerModule } from 'troika-worker-utils';\nimport { createDerivedMaterial } from 'troika-three-utils';\n\n/**\n * Initializes and returns a function to generate an SDF texture for a given glyph.\n * @param {number} config.sdfTextureSize - the length of one side of the resulting texture image.\n *                 Larger images encode more details. Should be a power of 2.\n * @param {number} config.sdfDistancePercent - see docs for SDF_DISTANCE_PERCENT in TextBuilder.js\n *\n * @return {function(Object): {renderingBounds: [minX, minY, maxX, maxY], textureData: Uint8Array}}\n */\nfunction createSDFGenerator(config) {\n  var sdfTextureSize = config.sdfTextureSize;\n  var sdfDistancePercent = config.sdfDistancePercent;\n\n  /**\n   * How many straight line segments to use when approximating a glyph's quadratic/cubic bezier curves.\n   */\n  var CURVE_POINTS = 16;\n\n  var INF = Infinity;\n\n  /**\n   * Find the point on a quadratic bezier curve at t where t is in the range [0, 1]\n   */\n  function pointOnQuadraticBezier(x0, y0, x1, y1, x2, y2, t) {\n    var t2 = 1 - t;\n    return {\n      x: t2 * t2 * x0 + 2 * t2 * t * x1 + t * t * x2,\n      y: t2 * t2 * y0 + 2 * t2 * t * y1 + t * t * y2\n    }\n  }\n\n  /**\n   * Find the point on a cubic bezier curve at t where t is in the range [0, 1]\n   */\n  function pointOnCubicBezier(x0, y0, x1, y1, x2, y2, x3, y3, t) {\n    var t2 = 1 - t;\n    return {\n      x: t2 * t2 * t2 * x0 + 3 * t2 * t2 * t * x1 + 3 * t2 * t * t * x2 + t * t * t * x3,\n      y: t2 * t2 * t2 * y0 + 3 * t2 * t2 * t * y1 + 3 * t2 * t * t * y2 + t * t * t * y3\n    }\n  }\n\n  /**\n   * You're such a square.\n   */\n  function square(n) {\n    return n * n\n  }\n\n  /**\n   * Find the absolute distance from a point to a line segment at closest approach\n   */\n  function absDistanceToLineSegment(x, y, lineX0, lineY0, lineX1, lineY1) {\n    var ldx = lineX1 - lineX0;\n    var ldy = lineY1 - lineY0;\n    var lengthSq = square(ldx) + square(ldy);\n    var t = lengthSq ? Math.max(0, Math.min(1, ((x - lineX0) * ldx + (y - lineY0) * ldy) / lengthSq)) : 0;\n    return Math.sqrt(square(x - (lineX0 + t * ldx)) + square(y - (lineY0 + t * ldy)))\n  }\n\n\n  /**\n   * Basic quadtree impl for performing fast spatial searches of a glyph's line segments\n   */\n  var GlyphSegmentsQuadtree = function GlyphSegmentsQuadtree(glyphObj) {\n    // Pick a good initial power-of-two bounding box that will hold all possible segments\n    var xMin = glyphObj.xMin;\n    var yMin = glyphObj.yMin;\n    var xMax = glyphObj.xMax;\n    var yMax = glyphObj.yMax;\n    var dx = xMax - xMin;\n    var dy = yMax - yMin;\n    var cx = Math.round(xMin + dx / 2);\n    var cy = Math.round(yMin + dy / 2);\n    var r = Math.pow(2, Math.floor(Math.log(Math.max(dx, dy)) * Math.LOG2E));\n\n    this._root = {\n      0: null,\n      1: null,\n      2: null,\n      3: null,\n      data: null,\n      cx: cx,\n      cy: cy,\n      r: r,\n      minX: INF,\n      minY: INF,\n      maxX: -INF,\n      maxY: -INF\n    };\n  };\n\n  GlyphSegmentsQuadtree.prototype.addLineSegment = function addLineSegment (x0, y0, x1, y1) {\n    var cx = (x0 + x1) / 2;\n    var cy = (y0 + y1) / 2;\n    var segment = {\n      x0: x0, y0: y0, x1: x1, y1: y1, cx: cx, cy: cy,\n      minX: Math.min(x0, x1),\n      minY: Math.min(y0, y1),\n      maxX: Math.max(x0, x1),\n      maxY: Math.max(y0, y1),\n      next: null\n    };\n    this._insertSegment(segment, this._root);\n  };\n\n  GlyphSegmentsQuadtree.prototype._insertSegment = function _insertSegment (segment, node) {\n    // update node min/max stats\n    var minX = segment.minX;\n      var minY = segment.minY;\n      var maxX = segment.maxX;\n      var maxY = segment.maxY;\n      var cx = segment.cx;\n      var cy = segment.cy;\n    if (minX < node.minX) { node.minX = minX; }\n    if (minY < node.minY) { node.minY = minY; }\n    if (maxX > node.maxX) { node.maxX = maxX; }\n    if (maxY > node.maxY) { node.maxY = maxY; }\n\n    // leaf\n    var leafSegment = node.data;\n    if (leafSegment) {\n      // coincident; push as linked list\n      if (leafSegment.cx === cx && leafSegment.cy === cy) {\n        while (leafSegment.next) { leafSegment = leafSegment.next; }\n        leafSegment.next = segment;\n      }\n      // non-coincident; split leaf to branch\n      else {\n        node.data = null;\n        this._insertSegment(leafSegment, node);\n        this._insertSegment(segment, node);\n      }\n    }\n    // branch\n    else {\n      // find target sub-index for the segment's centerpoint\n      var subIndex = (cy < node.cy ? 0 : 2) + (cx < node.cx ? 0 : 1);\n\n      // subnode already at index: recurse\n      if (node[subIndex]) {\n        this._insertSegment(segment, node[subIndex]);\n      }\n      // create new leaf\n      else {\n        node[subIndex] = {\n          0: null,\n          1: null,\n          2: null,\n          3: null,\n          data: segment,\n          cx: node.cx + node.r / 2 * (subIndex % 2 ? 1 : -1),\n          cy: node.cy + node.r / 2 * (subIndex < 2 ? -1 : 1),\n          r: node.r / 2,\n          minX: minX,\n          minY: minY,\n          maxX: maxX,\n          maxY: maxY\n        };\n      }\n    }\n  };\n\n  GlyphSegmentsQuadtree.prototype.walkTree = function walkTree (callback) {\n    this.walkBranch(this._root, callback);\n  };\n  GlyphSegmentsQuadtree.prototype.walkBranch = function walkBranch (root, callback) {\n    if (callback(root) !== false && !root.data) {\n      for (var i = 0; i < 4; i++) {\n        if (root[i] !== null) {\n          this.walkBranch(root[i], callback);\n        }\n      }\n    }\n  };\n\n  GlyphSegmentsQuadtree.prototype.findNearestSignedDistance = function findNearestSignedDistance (x, y, maxSearchRadius) {\n    var closestDist = maxSearchRadius;\n\n    this.walkTree(function visit(node) {\n      // Ignore nodes that can't possibly have segments closer than what we've already found. We base\n      // this on a simple rect bounds check; radial would be more accurate but much slower.\n      if (\n        x - closestDist > node.maxX || x + closestDist < node.minX ||\n        y - closestDist > node.maxY || y + closestDist < node.minY\n      ) {\n        return false\n      }\n\n      // Leaf - check each segment's actual distance\n      if (node.data) {\n        for (var segment = node.data; segment; segment = segment.next) {\n          if ( //fast prefilter for segment to avoid dist calc\n            x - closestDist < segment.maxX || x + closestDist > segment.minX ||\n            y - closestDist < segment.maxY || y + closestDist > segment.minY\n          ) {\n            var dist = absDistanceToLineSegment(x, y, segment.x0, segment.y0, segment.x1, segment.y1);\n            if (dist < closestDist) {\n              closestDist = dist;\n            }\n          }\n        }\n      }\n    });\n\n    // Flip to negative distance if outside the poly\n    if (!this.isPointInPoly(x, y)) {\n      closestDist = -closestDist;\n    }\n    return closestDist\n  };\n\n  GlyphSegmentsQuadtree.prototype.isPointInPoly = function isPointInPoly (x, y) {\n    var inside = false;\n    this.walkTree(function (node) {\n      // Ignore nodes whose bounds can't possibly cross our east-pointing ray\n      if (node.maxX < x || node.minY > y || node.maxY < y) {\n        return false\n      }\n\n      // Leaf - test each segment for whether it crosses our east-pointing ray\n      if (node.data) {\n        for (var segment = node.data; segment; segment = segment.next) {\n          var x0 = segment.x0;\n            var y0 = segment.y0;\n            var x1 = segment.x1;\n            var y1 = segment.y1;\n          var intersects = ((y0 > y) !== (y1 > y)) && (x < (x1 - x0) * (y - y0) / (y1 - y0) + x0);\n          if (intersects) {\n            inside = !inside;\n          }\n        }\n      }\n    });\n    return inside\n  };\n\n  /**\n   * Generate an SDF texture segment for a single glyph.\n   * @param {object} glyphObj\n   * @return {{textureData: Uint8Array, renderingBounds: *[]}}\n   */\n  function generateSDF(glyphObj) {\n    //console.time('glyphSDF')\n\n    var textureData = new Uint8Array(square(sdfTextureSize));\n\n    // Determine mapping between glyph grid coords and sdf grid coords\n    var glyphW = glyphObj.xMax - glyphObj.xMin;\n    var glyphH = glyphObj.yMax - glyphObj.yMin;\n\n    // Choose a maximum distance radius in font units, based on the glyph's max dimensions\n    var fontUnitsMaxDist = Math.max(glyphW, glyphH) * sdfDistancePercent;\n\n    // Use that, extending to the texture edges, to find conversion ratios between texture units and font units\n    var fontUnitsPerXTexel = (glyphW + fontUnitsMaxDist * 2) / sdfTextureSize;\n    var fontUnitsPerYTexel = (glyphH + fontUnitsMaxDist * 2) / sdfTextureSize;\n\n    var textureMinFontX = glyphObj.xMin - fontUnitsMaxDist - fontUnitsPerXTexel;\n    var textureMinFontY = glyphObj.yMin - fontUnitsMaxDist - fontUnitsPerYTexel;\n    var textureMaxFontX = glyphObj.xMax + fontUnitsMaxDist + fontUnitsPerXTexel;\n    var textureMaxFontY = glyphObj.yMax + fontUnitsMaxDist + fontUnitsPerYTexel;\n\n    function textureXToFontX(x) {\n      return textureMinFontX + (textureMaxFontX - textureMinFontX) * x / sdfTextureSize\n    }\n\n    function textureYToFontY(y) {\n      return textureMinFontY + (textureMaxFontY - textureMinFontY) * y / sdfTextureSize\n    }\n\n    if (glyphObj.pathCommandCount) { //whitespace chars will have no commands, so we can skip all this\n      // Decompose all paths into straight line segments and add them to a quadtree\n      var lineSegmentsIndex = new GlyphSegmentsQuadtree(glyphObj);\n      var firstX, firstY, prevX, prevY;\n      glyphObj.forEachPathCommand(function (type, x0, y0, x1, y1, x2, y2) {\n        switch (type) {\n          case 'M':\n            prevX = firstX = x0;\n            prevY = firstY = y0;\n            break\n          case 'L':\n            if (x0 !== prevX || y0 !== prevY) { //yup, some fonts have zero-length line commands\n              lineSegmentsIndex.addLineSegment(prevX, prevY, (prevX = x0), (prevY = y0));\n            }\n            break\n          case 'Q': {\n            var prevPoint = {x: prevX, y: prevY};\n            for (var i = 1; i < CURVE_POINTS; i++) {\n              var nextPoint = pointOnQuadraticBezier(\n                prevX, prevY,\n                x0, y0,\n                x1, y1,\n                i / (CURVE_POINTS - 1)\n              );\n              lineSegmentsIndex.addLineSegment(prevPoint.x, prevPoint.y, nextPoint.x, nextPoint.y);\n              prevPoint = nextPoint;\n            }\n            prevX = x1;\n            prevY = y1;\n            break\n          }\n          case 'C': {\n            var prevPoint$1 = {x: prevX, y: prevY};\n            for (var i$1 = 1; i$1 < CURVE_POINTS; i$1++) {\n              var nextPoint$1 = pointOnCubicBezier(\n                prevX, prevY,\n                x0, y0,\n                x1, y1,\n                x2, y2,\n                i$1 / (CURVE_POINTS - 1)\n              );\n              lineSegmentsIndex.addLineSegment(prevPoint$1.x, prevPoint$1.y, nextPoint$1.x, nextPoint$1.y);\n              prevPoint$1 = nextPoint$1;\n            }\n            prevX = x2;\n            prevY = y2;\n            break\n          }\n          case 'Z':\n            if (prevX !== firstX || prevY !== firstY) {\n              lineSegmentsIndex.addLineSegment(prevX, prevY, firstX, firstY);\n            }\n            break\n        }\n      });\n\n      // For each target SDF texel, find the distance from its center to its nearest line segment,\n      // map that distance to an alpha value, and write that alpha to the texel\n      for (var sdfX = 0; sdfX < sdfTextureSize; sdfX++) {\n        for (var sdfY = 0; sdfY < sdfTextureSize; sdfY++) {\n          var signedDist = lineSegmentsIndex.findNearestSignedDistance(\n            textureXToFontX(sdfX + 0.5),\n            textureYToFontY(sdfY + 0.5),\n            fontUnitsMaxDist\n          );\n          //if (!isFinite(signedDist)) throw 'infinite distance!'\n          var alpha = isFinite(signedDist) ? Math.round(255 * (1 + signedDist / fontUnitsMaxDist) * 0.5) : signedDist;\n          alpha = Math.max(0, Math.min(255, alpha)); //clamp\n          textureData[sdfY * sdfTextureSize + sdfX] = alpha;\n        }\n      }\n    }\n\n    //console.timeEnd('glyphSDF')\n\n    return {\n      textureData: textureData,\n\n      renderingBounds: [\n        textureMinFontX,\n        textureMinFontY,\n        textureMaxFontX,\n        textureMaxFontY\n      ]\n    }\n  }\n\n\n  return generateSDF\n}\n\n/**\n * Creates a self-contained environment for processing text rendering requests.\n *\n * It is important that this function has no external dependencies, so that it can be easily injected\n * into the source for a Worker without requiring a build step or complex dependency loading. Its sole\n * dependency, a `fontParser` implementation function, must be passed in at initialization.\n *\n * @param {function} fontParser - a function that accepts an ArrayBuffer of the font data and returns\n * a standardized structure giving access to the font and its glyphs:\n *   {\n *     unitsPerEm: number,\n *     ascender: number,\n *     descender: number,\n *     forEachGlyph(string, fontSize, letterSpacing, callback) {\n *       //invokes callback for each glyph to render, passing it an object:\n *       callback({\n *         index: number,\n *         advanceWidth: number,\n *         xMin: number,\n *         yMin: number,\n *         xMax: number,\n *         yMax: number,\n *         pathCommandCount: number,\n *         forEachPathCommand(callback) {\n *           //invokes callback for each path command, with args:\n *           callback(\n *             type: 'M|L|C|Q|Z',\n *             ...args //0 to 6 args depending on the type\n *           )\n *         }\n *       })\n *     }\n *   }\n * @param {function} sdfGenerator - a function that accepts a glyph object and generates an SDF texture\n * from it.\n * @param {Object} config\n * @return {Object}\n */\nfunction createFontProcessor(fontParser, sdfGenerator, config) {\n\n  var defaultFontUrl = config.defaultFontUrl;\n\n\n  /**\n   * @private\n   * Holds the loaded data for all fonts\n   *\n   * {\n   *   fontUrl: {\n   *     fontObj: {}, //result of the fontParser\n   *     glyphs: {\n   *       [glyphIndex]: {\n   *         atlasIndex: 0,\n   *         glyphObj: {}, //glyph object from the fontParser\n   *         renderingBounds: [x0, y0, x1, y1]\n   *       },\n   *       ...\n   *     },\n   *     glyphCount: 123\n   *   }\n   * }\n   */\n  var fonts = Object.create(null);\n\n  var INF = Infinity;\n\n\n  /**\n   * Load a given font url\n   */\n  function doLoadFont(url, callback) {\n    function tryLoad() {\n      var onError = function (err) {\n        console.error((\"Failure loading font \" + url + (url === defaultFontUrl ? '' : '; trying fallback')), err);\n        if (url !== defaultFontUrl) {\n          url = defaultFontUrl;\n          tryLoad();\n        }\n      };\n      try {\n        var request = new XMLHttpRequest();\n        request.open('get', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function () {\n          if (request.status >= 400) {\n            onError(new Error(request.statusText));\n          }\n          else if (request.status > 0) {\n            try {\n              var fontObj = fontParser(request.response);\n              callback(fontObj);\n            } catch (e) {\n              onError(e);\n            }\n          }\n        };\n        request.onerror = onError;\n        request.send();\n      } catch(err) {\n        onError(err);\n      }\n    }\n    tryLoad();\n  }\n\n\n  /**\n   * Load a given font url if needed, invoking a callback when it's loaded. If already\n   * loaded, the callback will be called synchronously.\n   */\n  function loadFont(fontUrl, callback) {\n    if (!fontUrl) { fontUrl = defaultFontUrl; }\n    var atlas = fonts[fontUrl];\n    if (atlas) {\n      // if currently loading font, add to callbacks, otherwise execute immediately\n      if (atlas.onload) {\n        atlas.onload.push(callback);\n      } else {\n        callback();\n      }\n    } else {\n      var loadingAtlas = fonts[fontUrl] = {onload: [callback]};\n      doLoadFont(fontUrl, function (fontObj) {\n        atlas = fonts[fontUrl] = {\n          fontObj: fontObj,\n          glyphs: {},\n          glyphCount: 0\n        };\n        loadingAtlas.onload.forEach(function (cb) { return cb(); });\n      });\n    }\n  }\n\n\n  /**\n   * Get the atlas data for a given font url, loading it from the network and initializing\n   * its atlas data objects if necessary.\n   */\n  function getSdfAtlas(fontUrl, callback) {\n    if (!fontUrl) { fontUrl = defaultFontUrl; }\n    loadFont(fontUrl, function () {\n      callback(fonts[fontUrl]);\n    });\n  }\n\n\n  /**\n   * Main entry point.\n   * Process a text string with given font and formatting parameters, and return all info\n   * necessary to render all its glyphs.\n   */\n  function process(\n    ref,\n    callback,\n    metricsOnly\n  ) {\n    var text = ref.text; if ( text === void 0 ) text = '';\n    var font = ref.font; if ( font === void 0 ) font = defaultFontUrl;\n    var fontSize = ref.fontSize; if ( fontSize === void 0 ) fontSize = 1;\n    var letterSpacing = ref.letterSpacing; if ( letterSpacing === void 0 ) letterSpacing = 0;\n    var lineHeight = ref.lineHeight; if ( lineHeight === void 0 ) lineHeight = 'normal';\n    var maxWidth = ref.maxWidth; if ( maxWidth === void 0 ) maxWidth = INF;\n    var textAlign = ref.textAlign; if ( textAlign === void 0 ) textAlign = 'left';\n    var whiteSpace = ref.whiteSpace; if ( whiteSpace === void 0 ) whiteSpace = 'normal';\n    var overflowWrap = ref.overflowWrap; if ( overflowWrap === void 0 ) overflowWrap = 'normal';\n    var anchor = ref.anchor;\n    var includeCaretPositions = ref.includeCaretPositions; if ( includeCaretPositions === void 0 ) includeCaretPositions = false;\n    if ( metricsOnly === void 0 ) metricsOnly=false;\n\n    // Ensure newlines are normalized\n    if (text.indexOf('\\r') > -1) {\n      console.warn('FontProcessor.process: got text with \\\\r chars; normalizing to \\\\n');\n      text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    }\n\n    getSdfAtlas(font, function (atlas) {\n      var fontObj = atlas.fontObj;\n      var hasMaxWidth = isFinite(maxWidth);\n      var newGlyphs = null;\n      var glyphBounds = null;\n      var glyphAtlasIndices = null;\n      var caretPositions = null;\n      var totalBounds = null;\n      var maxLineWidth = 0;\n      var canWrap = whiteSpace !== 'nowrap';\n      var ascender = fontObj.ascender;\n      var descender = fontObj.descender;\n      var unitsPerEm = fontObj.unitsPerEm;\n\n      // Find conversion between native font units and fontSize units; this will already be done\n      // for the gx/gy values below but everything else we'll need to convert\n      var fontSizeMult = fontSize / unitsPerEm;\n\n      // Determine appropriate value for 'normal' line height based on the font's actual metrics\n      // TODO this does not guarantee individual glyphs won't exceed the line height, e.g. Roboto; should we use yMin/Max instead?\n      if (lineHeight === 'normal') {\n        lineHeight = (ascender - descender) / unitsPerEm;\n      }\n\n      // Determine line height and leading adjustments\n      lineHeight = lineHeight * fontSize;\n      var halfLeading = (lineHeight - (ascender - descender) * fontSizeMult) / 2;\n      var caretHeight = Math.min(lineHeight, (ascender - descender) * fontSizeMult);\n      var caretBottomOffset = (ascender + descender) / 2 * fontSizeMult - caretHeight / 2;\n\n      // Distribute glyphs into lines based on wrapping\n      var lineXOffset = 0;\n      var currentLine = {glyphs: [], width: 0};\n      var lines = [currentLine];\n      fontObj.forEachGlyph(text, fontSize, letterSpacing, function (glyphObj, glyphX, charIndex) {\n        var char = text.charAt(charIndex);\n        var glyphWidth = glyphObj.advanceWidth * fontSizeMult;\n        var isWhitespace = !!char && /\\s/.test(char);\n        var curLineGlyphs = currentLine.glyphs;\n        var nextLineGlyphs;\n\n        // If a non-whitespace character overflows the max width, we need to soft-wrap\n        if (canWrap && hasMaxWidth && !isWhitespace && glyphX + glyphWidth + lineXOffset > maxWidth && curLineGlyphs.length) {\n          // If it's the first char after a whitespace, start a new line\n          if (curLineGlyphs[curLineGlyphs.length - 1].isWhitespace) {\n            nextLineGlyphs = [];\n            lineXOffset = -glyphX;\n          } else {\n            // Back up looking for a whitespace character to wrap at\n            for (var i = curLineGlyphs.length; i--;) {\n              // If we got the start of the line there's no soft break point; make hard break if overflowWrap='break-word'\n              if (i === 0 && overflowWrap === 'break-word') {\n                nextLineGlyphs = [];\n                lineXOffset = -glyphX;\n                break\n              }\n              // Found a soft break point; move all chars since it to a new line\n              else if (curLineGlyphs[i].isWhitespace) {\n                nextLineGlyphs = curLineGlyphs.splice(i + 1);\n                var adjustX = nextLineGlyphs[0].x;\n                lineXOffset -= adjustX;\n                for (var j = 0; j < nextLineGlyphs.length; j++) {\n                  nextLineGlyphs[j].x -= adjustX;\n                }\n                break\n              }\n            }\n          }\n          if (nextLineGlyphs) {\n            currentLine.isSoftWrapped = true;\n            currentLine = {glyphs: nextLineGlyphs, width: 0};\n            lines.push(currentLine);\n            maxLineWidth = maxWidth; //after soft wrapping use maxWidth as calculated width\n          }\n        }\n\n        currentLine.glyphs.push({\n          glyphObj: glyphObj,\n          x: glyphX + lineXOffset,\n          y: 0, //added later\n          width: glyphWidth,\n          char: char,\n          charIndex: charIndex,\n          isWhitespace: isWhitespace,\n          isEmpty: glyphObj.xMin === glyphObj.xMax || glyphObj.yMin === glyphObj.yMax,\n          atlasInfo: null //added later\n        });\n\n        // Handle hard line breaks\n        if (char === '\\n') {\n          currentLine = {glyphs: [], width: 0};\n          lines.push(currentLine);\n          lineXOffset = -(glyphX + glyphWidth);\n        }\n      });\n\n      // Calculate width of each line (excluding trailing whitespace) and maximum block width\n      lines.forEach(function (line) {\n        var lineGlyphs = line.glyphs;\n        for (var i = lineGlyphs.length; i--;) {\n          var lastChar = lineGlyphs[i];\n          if (!lastChar.isWhitespace) {\n            line.width = lastChar.x + lastChar.width;\n            if (line.width > maxLineWidth) {\n              maxLineWidth = line.width;\n            }\n            return\n          }\n        }\n      });\n\n      if (!metricsOnly) {\n        // Process each line, applying alignment offsets, adding each glyph to the atlas, and\n        // collecting all renderable glyphs into a single collection.\n        var renderableGlyphs = [];\n        var lineYOffset = -(fontSize + halfLeading);\n        if (includeCaretPositions) {\n          caretPositions = new Float32Array(text.length * 3);\n        }\n        var prevCharIndex = -1;\n        lines.forEach(function (line) {\n          var lineGlyphs = line.glyphs;\n          var lineWidth = line.width;\n\n          // Ignore empty lines\n          if (lineGlyphs.length) {\n            // Find x offset for horizontal alignment\n            var lineXOffset = 0;\n            var whitespaceCount = 0;\n            if (textAlign === 'center') {\n              lineXOffset = (maxLineWidth - lineWidth) / 2;\n            } else if (textAlign === 'right') {\n              lineXOffset = maxLineWidth - lineWidth;\n            } else if (textAlign === 'justify') {\n              // just count the non-trailing whitespace characters, and we'll adjust the offsets per\n              // character in the next loop\n              for (var i = lineGlyphs.length; i--;) {\n                if (!lineGlyphs[i].isWhitespace) {\n                  while (i--) {\n                    if (lineGlyphs[i].isWhitespace) {\n                      whitespaceCount++;\n                    }\n                  }\n                  break\n                }\n              }\n            }\n\n            for (var i$1 = 0, len = lineGlyphs.length; i$1 < len; i$1++) {\n              var glyphInfo = lineGlyphs[i$1];\n\n              // Apply position adjustments\n              if (lineXOffset) { glyphInfo.x += lineXOffset; }\n              glyphInfo.y = lineYOffset;\n\n              // Expand whitespaces for justify alignment\n              if (glyphInfo.isWhitespace && textAlign === 'justify' && line.isSoftWrapped) {\n                var adjust = (maxLineWidth - lineWidth) / whitespaceCount;\n                lineXOffset += adjust;\n                glyphInfo.width += adjust;\n              }\n\n              // Add initial caret positions\n              if (includeCaretPositions) {\n                var charIndex = glyphInfo.charIndex;\n                caretPositions[charIndex * 3] = glyphInfo.x; //left edge x\n                caretPositions[charIndex * 3 + 1] = glyphInfo.x + glyphInfo.width; //right edge x\n                caretPositions[charIndex * 3 + 2] = glyphInfo.y + caretBottomOffset; //common bottom y\n\n                // If we skipped any chars from the previous glyph (due to ligature subs), copy the\n                // previous glyph's info to those missing char indices. In the future we may try to\n                // use the font's LigatureCaretList table to get interior caret positions.\n                while (charIndex - prevCharIndex > 1) {\n                  caretPositions[(prevCharIndex + 1) * 3] = caretPositions[prevCharIndex * 3 + 1];\n                  caretPositions[(prevCharIndex + 1) * 3 + 1] = caretPositions[prevCharIndex * 3 + 1];\n                  caretPositions[(prevCharIndex + 1) * 3 + 2] = caretPositions[prevCharIndex * 3 + 2];\n                  prevCharIndex++;\n                }\n                prevCharIndex = charIndex;\n              }\n\n              // Get atlas data for renderable glyphs\n              if (!glyphInfo.isWhitespace && !glyphInfo.isEmpty) {\n                var glyphObj = glyphInfo.glyphObj;\n\n                // If we haven't seen this glyph yet, generate its SDF\n                var glyphAtlasInfo = atlas.glyphs[glyphObj.index];\n                if (!glyphAtlasInfo) {\n                  var glyphSDFData = sdfGenerator(glyphObj);\n\n                  // Assign this glyph the next available atlas index\n                  glyphSDFData.atlasIndex = atlas.glyphCount++;\n\n                  // Queue it up in the response's newGlyphs list\n                  if (!newGlyphs) { newGlyphs = []; }\n                  newGlyphs.push(glyphSDFData);\n\n                  // Store its metadata (not the texture) in our atlas info\n                  glyphAtlasInfo = atlas.glyphs[glyphObj.index] = {\n                    atlasIndex: glyphSDFData.atlasIndex,\n                    glyphObj: glyphObj,\n                    renderingBounds: glyphSDFData.renderingBounds\n                  };\n                }\n                glyphInfo.atlasInfo = glyphAtlasInfo;\n\n                renderableGlyphs.push(glyphInfo);\n              }\n            }\n          }\n\n          // Increment y offset for next line\n          lineYOffset -= lineHeight;\n        });\n\n        // Find overall position adjustments for anchoring\n        var anchorXOffset = 0;\n        var anchorYOffset = 0;\n        if (anchor) {\n          // TODO allow string keywords?\n          if (anchor[0]) {\n            anchorXOffset = -maxLineWidth * anchor[0];\n          }\n          if (anchor[1]) {\n            anchorYOffset = lines.length * lineHeight * anchor[1];\n          }\n        }\n\n        // Adjust caret positions by anchoring offsets\n        if (includeCaretPositions && (anchorXOffset || anchorYOffset)) {\n          for (var i = 0, len = caretPositions.length; i < len; i += 3) {\n            caretPositions[i] += anchorXOffset;\n            caretPositions[i + 1] += anchorXOffset;\n            caretPositions[i + 2] += anchorYOffset;\n          }\n        }\n\n        // Create the final output for the rendeable glyphs\n        glyphBounds = new Float32Array(renderableGlyphs.length * 4);\n        glyphAtlasIndices = new Float32Array(renderableGlyphs.length);\n        totalBounds = [INF, INF, -INF, -INF];\n        renderableGlyphs.forEach(function (glyphInfo, i) {\n          var ref = glyphInfo.atlasInfo;\n          var renderingBounds = ref.renderingBounds;\n          var atlasIndex = ref.atlasIndex;\n          var x0 = glyphBounds[i * 4] = glyphInfo.x + renderingBounds[0] * fontSizeMult + anchorXOffset;\n          var y0 = glyphBounds[i * 4 + 1] = glyphInfo.y + renderingBounds[1] * fontSizeMult + anchorYOffset;\n          var x1 = glyphBounds[i * 4 + 2] = glyphInfo.x + renderingBounds[2] * fontSizeMult + anchorXOffset;\n          var y1 = glyphBounds[i * 4 + 3] = glyphInfo.y + renderingBounds[3] * fontSizeMult + anchorYOffset;\n\n          if (x0 < totalBounds[0]) { totalBounds[0] = x0; }\n          if (y0 < totalBounds[1]) { totalBounds[1] = y0; }\n          if (x1 > totalBounds[2]) { totalBounds[2] = x1; }\n          if (y1 > totalBounds[3]) { totalBounds[3] = y1; }\n\n          glyphAtlasIndices[i] = atlasIndex;\n        });\n      }\n\n      callback({\n        glyphBounds: glyphBounds, //rendering quad bounds for each glyph [x1, y1, x2, y2]\n        glyphAtlasIndices: glyphAtlasIndices, //atlas indices for each glyph\n        caretPositions: caretPositions, //x,y of bottom of cursor position before each char, plus one after last char\n        caretHeight: caretHeight, //height of cursor from bottom to top\n        totalBounds: totalBounds, //total rect including all glyphBounds; will be slightly larger than glyph edges due to SDF padding\n        totalBlockSize: [maxLineWidth, lines.length * lineHeight], //width and height of the text block; accurate for layout measurement\n        newGlyphSDFs: newGlyphs //if this request included any new SDFs for the atlas, they'll be included here\n      });\n    });\n  }\n\n\n  /**\n   * For a given text string and font parameters, determine the resulting block dimensions\n   * after wrapping for the given maxWidth.\n   * @param args\n   * @param callback\n   */\n  function measure(args, callback) {\n    process(args, function (result) {\n      callback({\n        width: result.totalBlockSize[0],\n        height: result.totalBlockSize[1]\n      });\n    }, {metricsOnly: true});\n  }\n\n  return {\n    process: process,\n    measure: measure,\n    loadFont: loadFont\n  }\n}\n\n// Custom bundle of Typr.js (https://github.com/photopea/Typr.js) for use in troika-3d-text. \n// Original MIT license applies: https://github.com/photopea/Typr.js/blob/gh-pages/LICENSE\n\nfunction typrFactory() {\n\nvar window = self;\n\n// Begin Typr.js\n\n\nvar Typr = {};\n\nTypr.parse = function(buff)\n{\n\tvar bin = Typr._bin;\n\tvar data = new Uint8Array(buff);\n\t\n\tvar tag = bin.readASCII(data, 0, 4);  \n\tif(tag==\"ttcf\") {\n\t\tvar offset = 4;\n\t\tvar majV = bin.readUshort(data, offset);  offset+=2;\n\t\tvar minV = bin.readUshort(data, offset);  offset+=2;\n\t\tvar numF = bin.readUint  (data, offset);  offset+=4;\n\t\tvar fnts = [];\n\t\tfor(var i=0; i<numF; i++) {\n\t\t\tvar foff = bin.readUint  (data, offset);  offset+=4;\n\t\t\tfnts.push(Typr._readFont(data, foff));\n\t\t}\n\t\treturn fnts;\n\t}\n\telse { return [Typr._readFont(data, 0)]; }\n};\n\nTypr._readFont = function(data, offset) {\n\tvar bin = Typr._bin;\n\tvar ooff = offset;\n\t\n\tvar sfnt_version = bin.readFixed(data, offset);\n\toffset += 4;\n\tvar numTables = bin.readUshort(data, offset);\n\toffset += 2;\n\tvar searchRange = bin.readUshort(data, offset);\n\toffset += 2;\n\tvar entrySelector = bin.readUshort(data, offset);\n\toffset += 2;\n\tvar rangeShift = bin.readUshort(data, offset);\n\toffset += 2;\n\t\n\tvar tags = [\n\t\t\"cmap\",\n\t\t\"head\",\n\t\t\"hhea\",\n\t\t\"maxp\",\n\t\t\"hmtx\",\n\t\t\"name\",\n\t\t\"OS/2\",\n\t\t\"post\",\n\t\t\n\t\t//\"cvt\",\n\t\t//\"fpgm\",\n\t\t\"loca\",\n\t\t\"glyf\",\n\t\t\"kern\",\n\t\t\n\t\t//\"prep\"\n\t\t//\"gasp\"\n\t\t\n\t\t\"CFF \",\n\t\t\n\t\t\n\t\t\"GPOS\",\n\t\t\"GSUB\",\n\t\t\n\t\t\"SVG \" ];\n\t\n\tvar obj = {_data:data, _offset:ooff};\n\t//console.log(sfnt_version, numTables, searchRange, entrySelector, rangeShift);\n\t\n\tvar tabs = {};\n\t\n\tfor(var i=0; i<numTables; i++)\n\t{\n\t\tvar tag = bin.readASCII(data, offset, 4);   offset += 4;\n\t\tvar checkSum = bin.readUint(data, offset);  offset += 4;\n\t\tvar toffset = bin.readUint(data, offset);   offset += 4;\n\t\tvar length = bin.readUint(data, offset);    offset += 4;\n\t\ttabs[tag] = {offset:toffset, length:length};\n\t\t\n\t\t//if(tags.indexOf(tag)==-1) console.log(\"unknown tag\", tag, length);\n\t}\n\t\n\tfor(var i=0; i< tags.length; i++)\n\t{\n\t\tvar t = tags[i];\n\t\t//console.log(t);\n\t\t//if(tabs[t]) console.log(t, tabs[t].offset, tabs[t].length);\n\t\tif(tabs[t]) { obj[t.trim()] = Typr[t.trim()].parse(data, tabs[t].offset, tabs[t].length, obj); }\n\t}\n\t\n\treturn obj;\n};\n\nTypr._tabOffset = function(data, tab, foff)\n{\n\tvar bin = Typr._bin;\n\tvar numTables = bin.readUshort(data, foff+4);\n\tvar offset = foff+12;\n\tfor(var i=0; i<numTables; i++)\n\t{\n\t\tvar tag = bin.readASCII(data, offset, 4);   offset += 4;\n\t\tvar checkSum = bin.readUint(data, offset);  offset += 4;\n\t\tvar toffset = bin.readUint(data, offset);   offset += 4;\n\t\tvar length = bin.readUint(data, offset);    offset += 4;\n\t\tif(tag==tab) { return toffset; }\n\t}\n\treturn 0;\n};\n\n\n\n\n\nTypr._bin = {\n\treadFixed : function(data, o)\n\t{\n\t\treturn ((data[o]<<8) | data[o+1]) +  (((data[o+2]<<8)|data[o+3])/(256*256+4));\n\t},\n\treadF2dot14 : function(data, o)\n\t{\n\t\tvar num = Typr._bin.readShort(data, o);\n\t\treturn num / 16384;\n\t},\n\treadInt : function(buff, p)\n\t{\n\t\t//if(p>=buff.length) throw \"error\";\n\t\tvar a = Typr._bin.t.uint8;\n\t\ta[0] = buff[p+3];\n\t\ta[1] = buff[p+2];\n\t\ta[2] = buff[p+1];\n\t\ta[3] = buff[p];\n\t\treturn Typr._bin.t.int32[0];\n\t},\n\t\n\treadInt8 : function(buff, p)\n\t{\n\t\t//if(p>=buff.length) throw \"error\";\n\t\tvar a = Typr._bin.t.uint8;\n\t\ta[0] = buff[p];\n\t\treturn Typr._bin.t.int8[0];\n\t},\n\treadShort : function(buff, p)\n\t{\n\t\t//if(p>=buff.length) throw \"error\";\n\t\tvar a = Typr._bin.t.uint8;\n\t\ta[1] = buff[p]; a[0] = buff[p+1];\n\t\treturn Typr._bin.t.int16[0];\n\t},\n\treadUshort : function(buff, p)\n\t{\n\t\t//if(p>=buff.length) throw \"error\";\n\t\treturn (buff[p]<<8) | buff[p+1];\n\t},\n\treadUshorts : function(buff, p, len)\n\t{\n\t\tvar arr = [];\n\t\tfor(var i=0; i<len; i++) { arr.push(Typr._bin.readUshort(buff, p+i*2)); }\n\t\treturn arr;\n\t},\n\treadUint : function(buff, p)\n\t{\n\t\t//if(p>=buff.length) throw \"error\";\n\t\tvar a = Typr._bin.t.uint8;\n\t\ta[3] = buff[p];  a[2] = buff[p+1];  a[1] = buff[p+2];  a[0] = buff[p+3];\n\t\treturn Typr._bin.t.uint32[0];\n\t},\n\treadUint64 : function(buff, p)\n\t{\n\t\t//if(p>=buff.length) throw \"error\";\n\t\treturn (Typr._bin.readUint(buff, p)*(0xffffffff+1)) + Typr._bin.readUint(buff, p+4);\n\t},\n\treadASCII : function(buff, p, l)\t// l : length in Characters (not Bytes)\n\t{\n\t\t//if(p>=buff.length) throw \"error\";\n\t\tvar s = \"\";\n\t\tfor(var i = 0; i < l; i++) { s += String.fromCharCode(buff[p+i]); }\n\t\treturn s;\n\t},\n\treadUnicode : function(buff, p, l)\n\t{\n\t\t//if(p>=buff.length) throw \"error\";\n\t\tvar s = \"\";\n\t\tfor(var i = 0; i < l; i++)\t\n\t\t{\n\t\t\tvar c = (buff[p++]<<8) | buff[p++];\n\t\t\ts += String.fromCharCode(c);\n\t\t}\n\t\treturn s;\n\t},\n\t_tdec : window[\"TextDecoder\"] ? new window[\"TextDecoder\"]() : null,\n\treadUTF8 : function(buff, p, l) {\n\t\tvar tdec = Typr._bin._tdec;\n\t\tif(tdec && p==0 && l==buff.length) { return tdec[\"decode\"](buff); }\n\t\treturn Typr._bin.readASCII(buff,p,l);\n\t},\n\treadBytes : function(buff, p, l)\n\t{\n\t\t//if(p>=buff.length) throw \"error\";\n\t\tvar arr = [];\n\t\tfor(var i=0; i<l; i++) { arr.push(buff[p+i]); }\n\t\treturn arr;\n\t},\n\treadASCIIArray : function(buff, p, l)\t// l : length in Characters (not Bytes)\n\t{\n\t\t//if(p>=buff.length) throw \"error\";\n\t\tvar s = [];\n\t\tfor(var i = 0; i < l; i++)\t\n\t\t\t{ s.push(String.fromCharCode(buff[p+i])); }\n\t\treturn s;\n\t}\n};\n\nTypr._bin.t = {\n\tbuff: new ArrayBuffer(8),\n};\nTypr._bin.t.int8   = new Int8Array  (Typr._bin.t.buff);\nTypr._bin.t.uint8  = new Uint8Array (Typr._bin.t.buff);\nTypr._bin.t.int16  = new Int16Array (Typr._bin.t.buff);\nTypr._bin.t.uint16 = new Uint16Array(Typr._bin.t.buff);\nTypr._bin.t.int32  = new Int32Array (Typr._bin.t.buff);\nTypr._bin.t.uint32 = new Uint32Array(Typr._bin.t.buff);\n\n\n\n\n\n// OpenType Layout Common Table Formats\n\nTypr._lctf = {};\n\nTypr._lctf.parse = function(data, offset, length, font, subt)\n{\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\tvar offset0 = offset;\n\tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n\t\n\tvar offScriptList  = bin.readUshort(data, offset);  offset += 2;\n\tvar offFeatureList = bin.readUshort(data, offset);  offset += 2;\n\tvar offLookupList  = bin.readUshort(data, offset);  offset += 2;\n\t\n\t\n\tobj.scriptList  = Typr._lctf.readScriptList (data, offset0 + offScriptList);\n\tobj.featureList = Typr._lctf.readFeatureList(data, offset0 + offFeatureList);\n\tobj.lookupList  = Typr._lctf.readLookupList (data, offset0 + offLookupList, subt);\n\t\n\treturn obj;\n};\n\nTypr._lctf.readLookupList = function(data, offset, subt)\n{\n\tvar bin = Typr._bin;\n\tvar offset0 = offset;\n\tvar obj = [];\n\tvar count = bin.readUshort(data, offset);  offset+=2;\n\tfor(var i=0; i<count; i++) \n\t{\n\t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n\t\tvar lut = Typr._lctf.readLookupTable(data, offset0 + noff, subt);\n\t\tobj.push(lut);\n\t}\n\treturn obj;\n};\n\nTypr._lctf.readLookupTable = function(data, offset, subt)\n{\n\t//console.log(\"Parsing lookup table\", offset);\n\tvar bin = Typr._bin;\n\tvar offset0 = offset;\n\tvar obj = {tabs:[]};\n\t\n\tobj.ltype = bin.readUshort(data, offset);  offset+=2;\n\tobj.flag  = bin.readUshort(data, offset);  offset+=2;\n\tvar cnt   = bin.readUshort(data, offset);  offset+=2;\n\t\n\tfor(var i=0; i<cnt; i++)\n\t{\n\t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n\t\tvar tab = subt(data, obj.ltype, offset0 + noff);\n\t\t//console.log(obj.type, tab);\n\t\tobj.tabs.push(tab);\n\t}\n\treturn obj;\n};\n\nTypr._lctf.numOfOnes = function(n)\n{\n\tvar num = 0;\n\tfor(var i=0; i<32; i++) { if(((n>>>i)&1) != 0) { num++; } }\n\treturn num;\n};\n\nTypr._lctf.readClassDef = function(data, offset)\n{\n\tvar bin = Typr._bin;\n\tvar obj = [];\n\tvar format = bin.readUshort(data, offset);  offset+=2;\n\tif(format==1) \n\t{\n\t\tvar startGlyph  = bin.readUshort(data, offset);  offset+=2;\n\t\tvar glyphCount  = bin.readUshort(data, offset);  offset+=2;\n\t\tfor(var i=0; i<glyphCount; i++)\n\t\t{\n\t\t\tobj.push(startGlyph+i);\n\t\t\tobj.push(startGlyph+i);\n\t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n\t\t}\n\t}\n\tif(format==2)\n\t{\n\t\tvar count = bin.readUshort(data, offset);  offset+=2;\n\t\tfor(var i=0; i<count; i++)\n\t\t{\n\t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n\t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n\t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n\t\t}\n\t}\n\treturn obj;\n};\nTypr._lctf.getInterval = function(tab, val)\n{\n\tfor(var i=0; i<tab.length; i+=3)\n\t{\n\t\tvar start = tab[i], end = tab[i+1], index = tab[i+2];\n\t\tif(start<=val && val<=end) { return i; }\n\t}\n\treturn -1;\n};\n\n\nTypr._lctf.readCoverage = function(data, offset)\n{\n\tvar bin = Typr._bin;\n\tvar cvg = {};\n\tcvg.fmt   = bin.readUshort(data, offset);  offset+=2;\n\tvar count = bin.readUshort(data, offset);  offset+=2;\n\t//console.log(\"parsing coverage\", offset-4, format, count);\n\tif(cvg.fmt==1) { cvg.tab = bin.readUshorts(data, offset, count); } \n\tif(cvg.fmt==2) { cvg.tab = bin.readUshorts(data, offset, count*3); }\n\treturn cvg;\n};\n\nTypr._lctf.coverageIndex = function(cvg, val)\n{\n\tvar tab = cvg.tab;\n\tif(cvg.fmt==1) { return tab.indexOf(val); }\n\tif(cvg.fmt==2) {\n\t\tvar ind = Typr._lctf.getInterval(tab, val);\n\t\tif(ind!=-1) { return tab[ind+2] + (val - tab[ind]); }\n\t}\n\treturn -1;\n};\n\nTypr._lctf.readFeatureList = function(data, offset)\n{\n\tvar bin = Typr._bin;\n\tvar offset0 = offset;\n\tvar obj = [];\n\t\n\tvar count = bin.readUshort(data, offset);  offset+=2;\n\t\n\tfor(var i=0; i<count; i++)\n\t{\n\t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n\t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n\t\tobj.push({tag: tag.trim(), tab:Typr._lctf.readFeatureTable(data, offset0 + noff)});\n\t}\n\treturn obj;\n};\n\nTypr._lctf.readFeatureTable = function(data, offset)\n{\n\tvar bin = Typr._bin;\n\t\n\tvar featureParams = bin.readUshort(data, offset);  offset+=2;\t// = 0\n\tvar lookupCount = bin.readUshort(data, offset);  offset+=2;\n\t\n\tvar indices = [];\n\tfor(var i=0; i<lookupCount; i++) { indices.push(bin.readUshort(data, offset+2*i)); }\n\treturn indices;\n};\n\n\nTypr._lctf.readScriptList = function(data, offset)\n{\n\tvar bin = Typr._bin;\n\tvar offset0 = offset;\n\tvar obj = {};\n\t\n\tvar count = bin.readUshort(data, offset);  offset+=2;\n\t\n\tfor(var i=0; i<count; i++)\n\t{\n\t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n\t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n\t\tobj[tag.trim()] = Typr._lctf.readScriptTable(data, offset0 + noff);\n\t}\n\treturn obj;\n};\n\nTypr._lctf.readScriptTable = function(data, offset)\n{\n\tvar bin = Typr._bin;\n\tvar offset0 = offset;\n\tvar obj = {};\n\t\n\tvar defLangSysOff = bin.readUshort(data, offset);  offset+=2;\n\tobj.default = Typr._lctf.readLangSysTable(data, offset0 + defLangSysOff);\n\t\n\tvar langSysCount = bin.readUshort(data, offset);  offset+=2;\n\t\n\tfor(var i=0; i<langSysCount; i++)\n\t{\n\t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n\t\tvar langSysOff = bin.readUshort(data, offset);  offset+=2;\n\t\tobj[tag.trim()] = Typr._lctf.readLangSysTable(data, offset0 + langSysOff);\n\t}\n\treturn obj;\n};\n\nTypr._lctf.readLangSysTable = function(data, offset)\n{\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\t\n\tvar lookupOrder = bin.readUshort(data, offset);  offset+=2;\n\t//if(lookupOrder!=0)  throw \"lookupOrder not 0\";\n\tobj.reqFeature = bin.readUshort(data, offset);  offset+=2;\n\t//if(obj.reqFeature != 0xffff) throw \"reqFeatureIndex != 0xffff\";\n\t\n\t//console.log(lookupOrder, obj.reqFeature);\n\t\n\tvar featureCount = bin.readUshort(data, offset);  offset+=2;\n\tobj.features = bin.readUshorts(data, offset, featureCount);\n\treturn obj;\n};\n\n\tTypr.CFF = {};\n\tTypr.CFF.parse = function(data, offset, length)\n\t{\n\t\tvar bin = Typr._bin;\n\t\t\n\t\tdata = new Uint8Array(data.buffer, offset, length);\n\t\toffset = 0;\n\t\t\n\t\t// Header\n\t\tvar major = data[offset];  offset++;\n\t\tvar minor = data[offset];  offset++;\n\t\tvar hdrSize = data[offset];  offset++;\n\t\tvar offsize = data[offset];  offset++;\n\t\t//console.log(major, minor, hdrSize, offsize);\n\t\t\n\t\t// Name INDEX\n\t\tvar ninds = [];\n\t\toffset = Typr.CFF.readIndex(data, offset, ninds);\n\t\tvar names = [];\n\t\t\n\t\tfor(var i=0; i<ninds.length-1; i++) { names.push(bin.readASCII(data, offset+ninds[i], ninds[i+1]-ninds[i])); }\n\t\toffset += ninds[ninds.length-1];\n\t\t\n\t\t\n\t\t// Top DICT INDEX\n\t\tvar tdinds = [];\n\t\toffset = Typr.CFF.readIndex(data, offset, tdinds);  //console.log(tdinds);\n\t\t// Top DICT Data\n\t\tvar topDicts = [];\n\t\tfor(var i=0; i<tdinds.length-1; i++) { topDicts.push( Typr.CFF.readDict(data, offset+tdinds[i], offset+tdinds[i+1]) ); }\n\t\toffset += tdinds[tdinds.length-1];\n\t\tvar topdict = topDicts[0];\n\t\t//console.log(topdict);\n\t\t\n\t\t// String INDEX\n\t\tvar sinds = [];\n\t\toffset = Typr.CFF.readIndex(data, offset, sinds);\n\t\t// String Data\n\t\tvar strings = [];\n\t\tfor(var i=0; i<sinds.length-1; i++) { strings.push(bin.readASCII(data, offset+sinds[i], sinds[i+1]-sinds[i])); }\n\t\toffset += sinds[sinds.length-1];\n\t\t\n\t\t// Global Subr INDEX  (subroutines)\t\t\n\t\tTypr.CFF.readSubrs(data, offset, topdict);\n\t\t\n\t\t// charstrings\n\t\tif(topdict.CharStrings)\n\t\t{\n\t\t\toffset = topdict.CharStrings;\n\t\t\tvar sinds = [];\n\t\t\toffset = Typr.CFF.readIndex(data, offset, sinds);\n\t\t\t\n\t\t\tvar cstr = [];\n\t\t\tfor(var i=0; i<sinds.length-1; i++) { cstr.push(bin.readBytes(data, offset+sinds[i], sinds[i+1]-sinds[i])); }\n\t\t\t//offset += sinds[sinds.length-1];\n\t\t\ttopdict.CharStrings = cstr;\n\t\t\t//console.log(topdict.CharStrings);\n\t\t}\n\t\t\n\t\t// CID font\n\t\tif(topdict.ROS) {\n\t\t\toffset = topdict.FDArray;\n\t\t\tvar fdind = [];\n\t\t\toffset = Typr.CFF.readIndex(data, offset, fdind);\n\t\t\t\n\t\t\ttopdict.FDArray = [];\n\t\t\tfor(var i=0; i<fdind.length-1; i++) {\n\t\t\t\tvar dict = Typr.CFF.readDict(data, offset+fdind[i], offset+fdind[i+1]);\n\t\t\t\tTypr.CFF._readFDict(data, dict, strings);\n\t\t\t\ttopdict.FDArray.push( dict );\n\t\t\t}\n\t\t\toffset += fdind[fdind.length-1];\n\t\t\t\n\t\t\toffset = topdict.FDSelect;\n\t\t\ttopdict.FDSelect = [];\n\t\t\tvar fmt = data[offset];  offset++;\n\t\t\tif(fmt==3) {\n\t\t\t\tvar rns = bin.readUshort(data, offset);  offset+=2;\n\t\t\t\tfor(var i=0; i<rns+1; i++) {\n\t\t\t\t\ttopdict.FDSelect.push(bin.readUshort(data, offset), data[offset+2]);  offset+=3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { throw fmt; }\n\t\t}\n\t\t\n\t\t// Encoding\n\t\tif(topdict.Encoding) { topdict.Encoding = Typr.CFF.readEncoding(data, topdict.Encoding, topdict.CharStrings.length); }\n\t\t\n\t\t// charset\n\t\tif(topdict.charset ) { topdict.charset  = Typr.CFF.readCharset (data, topdict.charset , topdict.CharStrings.length); }\n\t\t\n\t\tTypr.CFF._readFDict(data, topdict, strings);\n\t\treturn topdict;\n\t};\n\tTypr.CFF._readFDict = function(data, dict, ss) {\n\t\tvar offset;\n\t\tif(dict.Private) {\n\t\t\toffset = dict.Private[1];\n\t\t\tdict.Private = Typr.CFF.readDict(data, offset, offset+dict.Private[0]);\n\t\t\tif(dict.Private.Subrs)  { Typr.CFF.readSubrs(data, offset+dict.Private.Subrs, dict.Private); }\n\t\t}\n\t\tfor(var p in dict) { if([\"FamilyName\",\"FontName\",\"FullName\",\"Notice\",\"version\",\"Copyright\"].indexOf(p)!=-1)  { dict[p]=ss[dict[p] -426 + 35]; } }\n\t};\n\t\n\tTypr.CFF.readSubrs = function(data, offset, obj)\n\t{\n\t\tvar bin = Typr._bin;\n\t\tvar gsubinds = [];\n\t\toffset = Typr.CFF.readIndex(data, offset, gsubinds);\n\t\t\n\t\tvar bias, nSubrs = gsubinds.length;\n\t\tif (nSubrs <  1240) { bias = 107; }\n\t\telse if (nSubrs < 33900) { bias = 1131; }\n\t\telse { bias = 32768; }\n\t\tobj.Bias = bias;\n\t\t\n\t\tobj.Subrs = [];\n\t\tfor(var i=0; i<gsubinds.length-1; i++) { obj.Subrs.push(bin.readBytes(data, offset+gsubinds[i], gsubinds[i+1]-gsubinds[i])); }\n\t\t//offset += gsubinds[gsubinds.length-1];\n\t};\n\t\n\tTypr.CFF.tableSE = [\n      0,   0,   0,   0,   0,   0,   0,   0,\n      0,   0,   0,   0,   0,   0,   0,   0,\n      0,   0,   0,   0,   0,   0,   0,   0,\n      0,   0,   0,   0,   0,   0,   0,   0,\n      1,   2,   3,   4,   5,   6,   7,   8,\n      9,  10,  11,  12,  13,  14,  15,  16,\n     17,  18,  19,  20,  21,  22,  23,  24,\n     25,  26,  27,  28,  29,  30,  31,  32,\n     33,  34,  35,  36,  37,  38,  39,  40,\n     41,  42,  43,  44,  45,  46,  47,  48,\n     49,  50,  51,  52,  53,  54,  55,  56,\n     57,  58,  59,  60,  61,  62,  63,  64,\n     65,  66,  67,  68,  69,  70,  71,  72,\n     73,  74,  75,  76,  77,  78,  79,  80,\n     81,  82,  83,  84,  85,  86,  87,  88,\n     89,  90,  91,  92,  93,  94,  95,   0,\n      0,   0,   0,   0,   0,   0,   0,   0,\n      0,   0,   0,   0,   0,   0,   0,   0,\n      0,   0,   0,   0,   0,   0,   0,   0,\n      0,   0,   0,   0,   0,   0,   0,   0,\n      0,  96,  97,  98,  99, 100, 101, 102,\n    103, 104, 105, 106, 107, 108, 109, 110,\n      0, 111, 112, 113, 114,   0, 115, 116,\n    117, 118, 119, 120, 121, 122,   0, 123,\n      0, 124, 125, 126, 127, 128, 129, 130,\n    131,   0, 132, 133,   0, 134, 135, 136,\n    137,   0,   0,   0,   0,   0,   0,   0,\n      0,   0,   0,   0,   0,   0,   0,   0,\n      0, 138,   0, 139,   0,   0,   0,   0,\n    140, 141, 142, 143,   0,   0,   0,   0,\n      0, 144,   0,   0,   0, 145,   0,   0,\n    146, 147, 148, 149,   0,   0,   0,   0\n  ];\n  \n\tTypr.CFF.glyphByUnicode = function(cff, code)\n\t{\n\t\tfor(var i=0; i<cff.charset.length; i++) { if(cff.charset[i]==code) { return i; } }\n\t\treturn -1;\n\t};\n\t\n\tTypr.CFF.glyphBySE = function(cff, charcode)\t// glyph by standard encoding\n\t{\n\t\tif ( charcode < 0 || charcode > 255 ) { return -1; }\n\t\treturn Typr.CFF.glyphByUnicode(cff, Typr.CFF.tableSE[charcode]);\t\t\n\t};\n\t\n\tTypr.CFF.readEncoding = function(data, offset, num)\n\t{\n\t\tvar bin = Typr._bin;\n\t\t\n\t\tvar array = ['.notdef'];\n\t\tvar format = data[offset];  offset++;\n\t\t//console.log(\"Encoding\");\n\t\t//console.log(format);\n\t\t\n\t\tif(format==0)\n\t\t{\n\t\t\tvar nCodes = data[offset];  offset++;\n\t\t\tfor(var i=0; i<nCodes; i++)  { array.push(data[offset+i]); }\n\t\t}\n\t\t/*\n\t\telse if(format==1 || format==2)\n\t\t{\n\t\t\twhile(charset.length<num)\n\t\t\t{\n\t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n\t\t\t\tvar nLeft=0;\n\t\t\t\tif(format==1) {  nLeft = data[offset];  offset++;  }\n\t\t\t\telse          {  nLeft = bin.readUshort(data, offset);  offset+=2;  }\n\t\t\t\tfor(var i=0; i<=nLeft; i++)  {  charset.push(first);  first++;  }\n\t\t\t}\n\t\t}\n\t\t*/\n\t\telse { throw \"error: unknown encoding format: \" + format; }\n\t\t\n\t\treturn array;\n\t};\n\n\tTypr.CFF.readCharset = function(data, offset, num)\n\t{\n\t\tvar bin = Typr._bin;\n\t\t\n\t\tvar charset = ['.notdef'];\n\t\tvar format = data[offset];  offset++;\n\t\t\n\t\tif(format==0)\n\t\t{\n\t\t\tfor(var i=0; i<num; i++) \n\t\t\t{\n\t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n\t\t\t\tcharset.push(first);\n\t\t\t}\n\t\t}\n\t\telse if(format==1 || format==2)\n\t\t{\n\t\t\twhile(charset.length<num)\n\t\t\t{\n\t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n\t\t\t\tvar nLeft=0;\n\t\t\t\tif(format==1) {  nLeft = data[offset];  offset++;  }\n\t\t\t\telse          {  nLeft = bin.readUshort(data, offset);  offset+=2;  }\n\t\t\t\tfor(var i=0; i<=nLeft; i++)  {  charset.push(first);  first++;  }\n\t\t\t}\n\t\t}\n\t\telse { throw \"error: format: \" + format; }\n\t\t\n\t\treturn charset;\n\t};\n\n\tTypr.CFF.readIndex = function(data, offset, inds)\n\t{\n\t\tvar bin = Typr._bin;\n\t\t\n\t\tvar count = bin.readUshort(data, offset)+1;  offset+=2;\n\t\tvar offsize = data[offset];  offset++;\n\t\t\n\t\tif     (offsize==1) { for(var i=0; i<count; i++) { inds.push( data[offset+i] ); } }\n\t\telse if(offsize==2) { for(var i=0; i<count; i++) { inds.push( bin.readUshort(data, offset+i*2) ); } }\n\t\telse if(offsize==3) { for(var i=0; i<count; i++) { inds.push( bin.readUint  (data, offset+i*3 - 1) & 0x00ffffff ); } }\n\t\telse if(count!=1) { throw \"unsupported offset size: \" + offsize + \", count: \" + count; }\n\t\t\n\t\toffset += count*offsize;\n\t\treturn offset-1;\n\t};\n\t\n\tTypr.CFF.getCharString = function(data, offset, o)\n\t{\n\t\tvar bin = Typr._bin;\n\t\t\n\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n\t\tvar vs = 1;\n\t\tvar op=null, val=null;\n\t\t// operand\n\t\tif(b0<=20) { op = b0;  vs=1;  }\n\t\tif(b0==12) { op = b0*100+b1;  vs=2;  }\n\t\t//if(b0==19 || b0==20) { op = b0/*+\" \"+b1*/;  vs=2; }\n\t\tif(21 <=b0 && b0<= 27) { op = b0;  vs=1; }\n\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n\t\tif(29 <=b0 && b0<= 31) { op = b0;  vs=1; }\n\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;   }\n\t\t\n\t\to.val = val!=null ? val : \"o\"+op;\n\t\to.size = vs;\n\t};\n\t\n\tTypr.CFF.readCharString = function(data, offset, length)\n\t{\n\t\tvar end = offset + length;\n\t\tvar bin = Typr._bin;\n\t\tvar arr = [];\n\t\t\n\t\twhile(offset<end)\n\t\t{\n\t\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n\t\t\tvar vs = 1;\n\t\t\tvar op=null, val=null;\n\t\t\t// operand\n\t\t\tif(b0<=20) { op = b0;  vs=1;  }\n\t\t\tif(b0==12) { op = b0*100+b1;  vs=2;  }\n\t\t\tif(b0==19 || b0==20) { op = b0/*+\" \"+b1*/;  vs=2; }\n\t\t\tif(21 <=b0 && b0<= 27) { op = b0;  vs=1; }\n\t\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n\t\t\tif(29 <=b0 && b0<= 31) { op = b0;  vs=1; }\n\t\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n\t\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n\t\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n\t\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;   }\n\t\t\t\n\t\t\tarr.push(val!=null ? val : \"o\"+op);\n\t\t\toffset += vs;\t\n\n\t\t\t//var cv = arr[arr.length-1];\n\t\t\t//if(cv==undefined) throw \"error\";\n\t\t\t//console.log()\n\t\t}\t\n\t\treturn arr;\n\t};\n\n\tTypr.CFF.readDict = function(data, offset, end)\n\t{\n\t\tvar bin = Typr._bin;\n\t\t//var dict = [];\n\t\tvar dict = {};\n\t\tvar carr = [];\n\t\t\n\t\twhile(offset<end)\n\t\t{\n\t\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n\t\t\tvar vs = 1;\n\t\t\tvar key=null, val=null;\n\t\t\t// operand\n\t\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n\t\t\tif(b0==29) { val = bin.readInt  (data,offset+1);  vs=5; }\n\t\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n\t\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n\t\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n\t\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;  throw \"unknown number\";  }\n\t\t\t\n\t\t\tif(b0==30) \n\t\t\t{  \n\t\t\t\tvar nibs = [];\n\t\t\t\tvs = 1;\n\t\t\t\twhile(true)\n\t\t\t\t{\n\t\t\t\t\tvar b = data[offset+vs];  vs++;\n\t\t\t\t\tvar nib0 = b>>4, nib1 = b&0xf;\n\t\t\t\t\tif(nib0 != 0xf) { nibs.push(nib0); }  if(nib1!=0xf) { nibs.push(nib1); }\n\t\t\t\t\tif(nib1==0xf) { break; }\n\t\t\t\t}\n\t\t\t\tvar s = \"\";\n\t\t\t\tvar chars = [0,1,2,3,4,5,6,7,8,9,\".\",\"e\",\"e-\",\"reserved\",\"-\",\"endOfNumber\"];\n\t\t\t\tfor(var i=0; i<nibs.length; i++) { s += chars[nibs[i]]; }\n\t\t\t\t//console.log(nibs);\n\t\t\t\tval = parseFloat(s);\n\t\t\t}\n\t\t\t\n\t\t\tif(b0<=21)\t// operator\n\t\t\t{\n\t\t\t\tvar keys = [\"version\", \"Notice\", \"FullName\", \"FamilyName\", \"Weight\", \"FontBBox\", \"BlueValues\", \"OtherBlues\", \"FamilyBlues\",\"FamilyOtherBlues\",\n\t\t\t\t\t\"StdHW\", \"StdVW\", \"escape\", \"UniqueID\", \"XUID\", \"charset\", \"Encoding\", \"CharStrings\", \"Private\", \"Subrs\", \n\t\t\t\t\t\"defaultWidthX\", \"nominalWidthX\"];\n\t\t\t\t\t\n\t\t\t\tkey = keys[b0];  vs=1;\n\t\t\t\tif(b0==12) { \n\t\t\t\t\tvar keys = [ \"Copyright\", \"isFixedPitch\", \"ItalicAngle\", \"UnderlinePosition\", \"UnderlineThickness\", \"PaintType\", \"CharstringType\", \"FontMatrix\", \"StrokeWidth\", \"BlueScale\",\n\t\t\t\t\t\"BlueShift\", \"BlueFuzz\", \"StemSnapH\", \"StemSnapV\", \"ForceBold\", 0,0, \"LanguageGroup\", \"ExpansionFactor\", \"initialRandomSeed\",\n\t\t\t\t\t\"SyntheticBase\", \"PostScript\", \"BaseFontName\", \"BaseFontBlend\", 0,0,0,0,0,0, \n\t\t\t\t\t\"ROS\", \"CIDFontVersion\", \"CIDFontRevision\", \"CIDFontType\", \"CIDCount\", \"UIDBase\", \"FDArray\", \"FDSelect\", \"FontName\"];\n\t\t\t\t\tkey = keys[b1];  vs=2; \n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(key!=null) {  dict[key] = carr.length==1 ? carr[0] : carr;  carr=[]; }\n\t\t\telse  { carr.push(val); }  \n\t\t\t\n\t\t\toffset += vs;\t\t\n\t\t}\t\n\t\treturn dict;\n\t};\n\n\nTypr.cmap = {};\nTypr.cmap.parse = function(data, offset, length)\n{\n\tdata = new Uint8Array(data.buffer, offset, length);\n\toffset = 0;\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\tvar version   = bin.readUshort(data, offset);  offset += 2;\n\tvar numTables = bin.readUshort(data, offset);  offset += 2;\n\t\n\t//console.log(version, numTables);\n\t\n\tvar offs = [];\n\tobj.tables = [];\n\t\n\t\n\tfor(var i=0; i<numTables; i++)\n\t{\n\t\tvar platformID = bin.readUshort(data, offset);  offset += 2;\n\t\tvar encodingID = bin.readUshort(data, offset);  offset += 2;\n\t\tvar noffset = bin.readUint(data, offset);       offset += 4;\n\t\t\n\t\tvar id = \"p\"+platformID+\"e\"+encodingID;\n\t\t\n\t\t//console.log(\"cmap subtable\", platformID, encodingID, noffset);\n\t\t\n\t\t\n\t\tvar tind = offs.indexOf(noffset);\n\t\t\n\t\tif(tind==-1)\n\t\t{\n\t\t\ttind = obj.tables.length;\n\t\t\tvar subt;\n\t\t\toffs.push(noffset);\n\t\t\tvar format = bin.readUshort(data, noffset);\n\t\t\tif     (format== 0) { subt = Typr.cmap.parse0(data, noffset); }\n\t\t\telse if(format== 4) { subt = Typr.cmap.parse4(data, noffset); }\n\t\t\telse if(format== 6) { subt = Typr.cmap.parse6(data, noffset); }\n\t\t\telse if(format==12) { subt = Typr.cmap.parse12(data,noffset); }\n\t\t\telse { console.log(\"unknown format: \"+format, platformID, encodingID, noffset); }\n\t\t\tobj.tables.push(subt);\n\t\t}\n\t\t\n\t\tif(obj[id]!=null) { throw \"multiple tables for one platform+encoding\"; }\n\t\tobj[id] = tind;\n\t}\n\treturn obj;\n};\n\nTypr.cmap.parse0 = function(data, offset)\n{\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\tobj.format = bin.readUshort(data, offset);  offset += 2;\n\tvar len    = bin.readUshort(data, offset);  offset += 2;\n\tvar lang   = bin.readUshort(data, offset);  offset += 2;\n\tobj.map = [];\n\tfor(var i=0; i<len-6; i++) { obj.map.push(data[offset+i]); }\n\treturn obj;\n};\n\nTypr.cmap.parse4 = function(data, offset)\n{\n\tvar bin = Typr._bin;\n\tvar offset0 = offset;\n\tvar obj = {};\n\t\n\tobj.format = bin.readUshort(data, offset);  offset+=2;\n\tvar length = bin.readUshort(data, offset);  offset+=2;\n\tvar language = bin.readUshort(data, offset);  offset+=2;\n\tvar segCountX2 = bin.readUshort(data, offset);  offset+=2;\n\tvar segCount = segCountX2/2;\n\tobj.searchRange = bin.readUshort(data, offset);  offset+=2;\n\tobj.entrySelector = bin.readUshort(data, offset);  offset+=2;\n\tobj.rangeShift = bin.readUshort(data, offset);  offset+=2;\n\tobj.endCount   = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n\toffset+=2;\n\tobj.startCount = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n\tobj.idDelta = [];\n\tfor(var i=0; i<segCount; i++) {obj.idDelta.push(bin.readShort(data, offset));  offset+=2;}\n\tobj.idRangeOffset = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n\tobj.glyphIdArray = [];\n\twhile(offset< offset0+length) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\n\treturn obj;\n};\n\nTypr.cmap.parse6 = function(data, offset)\n{\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\t\n\tobj.format = bin.readUshort(data, offset);  offset+=2;\n\tvar length = bin.readUshort(data, offset);  offset+=2;\n\tvar language = bin.readUshort(data, offset);  offset+=2;\n\tobj.firstCode = bin.readUshort(data, offset);  offset+=2;\n\tvar entryCount = bin.readUshort(data, offset);  offset+=2;\n\tobj.glyphIdArray = [];\n\tfor(var i=0; i<entryCount; i++) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\n\t\n\treturn obj;\n};\n\nTypr.cmap.parse12 = function(data, offset)\n{\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\t\n\tobj.format = bin.readUshort(data, offset);  offset+=2;\n\toffset += 2;\n\tvar length = bin.readUint(data, offset);  offset+=4;\n\tvar lang   = bin.readUint(data, offset);  offset+=4;\n\tvar nGroups= bin.readUint(data, offset);  offset+=4;\n\tobj.groups = [];\n\t\n\tfor(var i=0; i<nGroups; i++)  \n\t{\n\t\tvar off = offset + i * 12;\n\t\tvar startCharCode = bin.readUint(data, off+0);\n\t\tvar endCharCode   = bin.readUint(data, off+4);\n\t\tvar startGlyphID  = bin.readUint(data, off+8);\n\t\tobj.groups.push([  startCharCode, endCharCode, startGlyphID  ]);\n\t}\n\treturn obj;\n};\n\nTypr.glyf = {};\nTypr.glyf.parse = function(data, offset, length, font)\n{\n\tvar obj = [];\n\tfor(var g=0; g<font.maxp.numGlyphs; g++) { obj.push(null); }\n\treturn obj;\n};\n\nTypr.glyf._parseGlyf = function(font, g)\n{\n\tvar bin = Typr._bin;\n\tvar data = font._data;\n\t\n\tvar offset = Typr._tabOffset(data, \"glyf\", font._offset) + font.loca[g];\n\t\t\n\tif(font.loca[g]==font.loca[g+1]) { return null; }\n\t\t\n\tvar gl = {};\n\t\t\n\tgl.noc  = bin.readShort(data, offset);  offset+=2;\t\t// number of contours\n\tgl.xMin = bin.readShort(data, offset);  offset+=2;\n\tgl.yMin = bin.readShort(data, offset);  offset+=2;\n\tgl.xMax = bin.readShort(data, offset);  offset+=2;\n\tgl.yMax = bin.readShort(data, offset);  offset+=2;\n\t\n\tif(gl.xMin>=gl.xMax || gl.yMin>=gl.yMax) { return null; }\n\t\t\n\tif(gl.noc>0)\n\t{\n\t\tgl.endPts = [];\n\t\tfor(var i=0; i<gl.noc; i++) { gl.endPts.push(bin.readUshort(data,offset)); offset+=2; }\n\t\t\n\t\tvar instructionLength = bin.readUshort(data,offset); offset+=2;\n\t\tif((data.length-offset)<instructionLength) { return null; }\n\t\tgl.instructions = bin.readBytes(data, offset, instructionLength);   offset+=instructionLength;\n\t\t\n\t\tvar crdnum = gl.endPts[gl.noc-1]+1;\n\t\tgl.flags = [];\n\t\tfor(var i=0; i<crdnum; i++ ) \n\t\t{ \n\t\t\tvar flag = data[offset];  offset++; \n\t\t\tgl.flags.push(flag); \n\t\t\tif((flag&8)!=0)\n\t\t\t{\n\t\t\t\tvar rep = data[offset];  offset++;\n\t\t\t\tfor(var j=0; j<rep; j++) { gl.flags.push(flag); i++; }\n\t\t\t}\n\t\t}\n\t\tgl.xs = [];\n\t\tfor(var i=0; i<crdnum; i++) {\n\t\t\tvar i8=((gl.flags[i]&2)!=0), same=((gl.flags[i]&16)!=0);  \n\t\t\tif(i8) { gl.xs.push(same ? data[offset] : -data[offset]);  offset++; }\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(same) { gl.xs.push(0); }\n\t\t\t\telse { gl.xs.push(bin.readShort(data, offset));  offset+=2; }\n\t\t\t}\n\t\t}\n\t\tgl.ys = [];\n\t\tfor(var i=0; i<crdnum; i++) {\n\t\t\tvar i8=((gl.flags[i]&4)!=0), same=((gl.flags[i]&32)!=0);  \n\t\t\tif(i8) { gl.ys.push(same ? data[offset] : -data[offset]);  offset++; }\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(same) { gl.ys.push(0); }\n\t\t\t\telse { gl.ys.push(bin.readShort(data, offset));  offset+=2; }\n\t\t\t}\n\t\t}\n\t\tvar x = 0, y = 0;\n\t\tfor(var i=0; i<crdnum; i++) { x += gl.xs[i]; y += gl.ys[i];  gl.xs[i]=x;  gl.ys[i]=y; }\n\t\t//console.log(endPtsOfContours, instructionLength, instructions, flags, xCoordinates, yCoordinates);\n\t}\n\telse\n\t{\n\t\tvar ARG_1_AND_2_ARE_WORDS\t= 1<<0;\n\t\tvar ARGS_ARE_XY_VALUES\t\t= 1<<1;\n\t\tvar WE_HAVE_A_SCALE\t\t\t= 1<<3;\n\t\tvar MORE_COMPONENTS\t\t\t= 1<<5;\n\t\tvar WE_HAVE_AN_X_AND_Y_SCALE= 1<<6;\n\t\tvar WE_HAVE_A_TWO_BY_TWO\t= 1<<7;\n\t\tvar WE_HAVE_INSTRUCTIONS\t= 1<<8;\n\t\t\n\t\tgl.parts = [];\n\t\tvar flags;\n\t\tdo {\n\t\t\tflags = bin.readUshort(data, offset);  offset += 2;\n\t\t\tvar part = { m:{a:1,b:0,c:0,d:1,tx:0,ty:0}, p1:-1, p2:-1 };  gl.parts.push(part);\n\t\t\tpart.glyphIndex = bin.readUshort(data, offset);  offset += 2;\n\t\t\tif ( flags & ARG_1_AND_2_ARE_WORDS) {\n\t\t\t\tvar arg1 = bin.readShort(data, offset);  offset += 2;\n\t\t\t\tvar arg2 = bin.readShort(data, offset);  offset += 2;\n\t\t\t} else {\n\t\t\t\tvar arg1 = bin.readInt8(data, offset);  offset ++;\n\t\t\t\tvar arg2 = bin.readInt8(data, offset);  offset ++;\n\t\t\t}\n\t\t\t\n\t\t\tif(flags & ARGS_ARE_XY_VALUES) { part.m.tx = arg1;  part.m.ty = arg2; }\n\t\t\telse  {  part.p1=arg1;  part.p2=arg2;  }\n\t\t\t//part.m.tx = arg1;  part.m.ty = arg2;\n\t\t\t//else { throw \"params are not XY values\"; }\n\t\t\t\n\t\t\tif ( flags & WE_HAVE_A_SCALE ) {\n\t\t\t\tpart.m.a = part.m.d = bin.readF2dot14(data, offset);  offset += 2;    \n\t\t\t} else if ( flags & WE_HAVE_AN_X_AND_Y_SCALE ) {\n\t\t\t\tpart.m.a = bin.readF2dot14(data, offset);  offset += 2; \n\t\t\t\tpart.m.d = bin.readF2dot14(data, offset);  offset += 2; \n\t\t\t} else if ( flags & WE_HAVE_A_TWO_BY_TWO ) {\n\t\t\t\tpart.m.a = bin.readF2dot14(data, offset);  offset += 2; \n\t\t\t\tpart.m.b = bin.readF2dot14(data, offset);  offset += 2; \n\t\t\t\tpart.m.c = bin.readF2dot14(data, offset);  offset += 2; \n\t\t\t\tpart.m.d = bin.readF2dot14(data, offset);  offset += 2; \n\t\t\t}\n\t\t} while ( flags & MORE_COMPONENTS ) \n\t\tif (flags & WE_HAVE_INSTRUCTIONS){\n\t\t\tvar numInstr = bin.readUshort(data, offset);  offset += 2;\n\t\t\tgl.instr = [];\n\t\t\tfor(var i=0; i<numInstr; i++) { gl.instr.push(data[offset]);  offset++; }\n\t\t}\n\t}\n\treturn gl;\n};\n\n\nTypr.GPOS = {};\nTypr.GPOS.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GPOS.subt);  };\n\n\nTypr.GPOS.subt = function(data, ltype, offset)\t// lookup type\n{\n\tvar bin = Typr._bin, offset0 = offset, tab = {};\n\t\n\ttab.fmt  = bin.readUshort(data, offset);  offset+=2;\n\t\n\t//console.log(ltype, tab.fmt);\n\t\n\tif(ltype==1 || ltype==2 || ltype==3 || ltype==7 || (ltype==8 && tab.fmt<=2)) {\n\t\tvar covOff  = bin.readUshort(data, offset);  offset+=2;\n\t\ttab.coverage = Typr._lctf.readCoverage(data, covOff+offset0);\n\t}\n\tif(ltype==1 && tab.fmt==1) {\n\t\tvar valFmt1 = bin.readUshort(data, offset);  offset+=2;\n\t\tvar ones1 = Typr._lctf.numOfOnes(valFmt1);\n\t\tif(valFmt1!=0)  { tab.pos = Typr.GPOS.readValueRecord(data, offset, valFmt1); }\n\t}\n\telse if(ltype==2) {\n\t\tvar valFmt1 = bin.readUshort(data, offset);  offset+=2;\n\t\tvar valFmt2 = bin.readUshort(data, offset);  offset+=2;\n\t\tvar ones1 = Typr._lctf.numOfOnes(valFmt1);\n\t\tvar ones2 = Typr._lctf.numOfOnes(valFmt2);\n\t\tif(tab.fmt==1)\n\t\t{\n\t\t\ttab.pairsets = [];\n\t\t\tvar psc = bin.readUshort(data, offset);  offset+=2;  // PairSetCount\n\t\t\t\n\t\t\tfor(var i=0; i<psc; i++)\n\t\t\t{\n\t\t\t\tvar psoff = offset0 + bin.readUshort(data, offset);  offset+=2;\n\t\t\t\t\n\t\t\t\tvar pvc = bin.readUshort(data, psoff);  psoff+=2;\n\t\t\t\tvar arr = [];\n\t\t\t\tfor(var j=0; j<pvc; j++)\n\t\t\t\t{\n\t\t\t\t\tvar gid2 = bin.readUshort(data, psoff);  psoff+=2;\n\t\t\t\t\tvar value1, value2;\n\t\t\t\t\tif(valFmt1!=0) {  value1 = Typr.GPOS.readValueRecord(data, psoff, valFmt1);  psoff+=ones1*2;  }\n\t\t\t\t\tif(valFmt2!=0) {  value2 = Typr.GPOS.readValueRecord(data, psoff, valFmt2);  psoff+=ones2*2;  }\n\t\t\t\t\t//if(value1!=null) throw \"e\";\n\t\t\t\t\tarr.push({gid2:gid2, val1:value1, val2:value2});\n\t\t\t\t}\n\t\t\t\ttab.pairsets.push(arr);\n\t\t\t}\n\t\t}\n\t\tif(tab.fmt==2)\n\t\t{\n\t\t\tvar classDef1 = bin.readUshort(data, offset);  offset+=2;\n\t\t\tvar classDef2 = bin.readUshort(data, offset);  offset+=2;\n\t\t\tvar class1Count = bin.readUshort(data, offset);  offset+=2;\n\t\t\tvar class2Count = bin.readUshort(data, offset);  offset+=2;\n\t\t\t\n\t\t\ttab.classDef1 = Typr._lctf.readClassDef(data, offset0 + classDef1);\n\t\t\ttab.classDef2 = Typr._lctf.readClassDef(data, offset0 + classDef2);\n\t\t\t\n\t\t\ttab.matrix = [];\n\t\t\tfor(var i=0; i<class1Count; i++)\n\t\t\t{\n\t\t\t\tvar row = [];\n\t\t\t\tfor(var j=0; j<class2Count; j++)\n\t\t\t\t{\n\t\t\t\t\tvar value1 = null, value2 = null;\n\t\t\t\t\tif(tab.valFmt1!=0) { value1 = Typr.GPOS.readValueRecord(data, offset, tab.valFmt1);  offset+=ones1*2; }\n\t\t\t\t\tif(tab.valFmt2!=0) { value2 = Typr.GPOS.readValueRecord(data, offset, tab.valFmt2);  offset+=ones2*2; }\n\t\t\t\t\trow.push({val1:value1, val2:value2});\n\t\t\t\t}\n\t\t\t\ttab.matrix.push(row);\n\t\t\t}\n\t\t}\n\t}\n\treturn tab;\n};\n\n\nTypr.GPOS.readValueRecord = function(data, offset, valFmt)\n{\n\tvar bin = Typr._bin;\n\tvar arr = [];\n\tarr.push( (valFmt&1) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&1) ? 2 : 0;  // X_PLACEMENT\n\tarr.push( (valFmt&2) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&2) ? 2 : 0;  // Y_PLACEMENT\n\tarr.push( (valFmt&4) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&4) ? 2 : 0;  // X_ADVANCE\n\tarr.push( (valFmt&8) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&8) ? 2 : 0;  // Y_ADVANCE\n\treturn arr;\n};\n\nTypr.GSUB = {};\nTypr.GSUB.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GSUB.subt);  };\n\n\nTypr.GSUB.subt = function(data, ltype, offset)\t// lookup type\n{\n\tvar bin = Typr._bin, offset0 = offset, tab = {};\n\t\n\ttab.fmt  = bin.readUshort(data, offset);  offset+=2;\n\t\n\tif(ltype!=1 && ltype!=4 && ltype!=5 && ltype!=6) { return null; }\n\t\n\tif(ltype==1 || ltype==4 || (ltype==5 && tab.fmt<=2) || (ltype==6 && tab.fmt<=2)) {\n\t\tvar covOff  = bin.readUshort(data, offset);  offset+=2;\n\t\ttab.coverage = Typr._lctf.readCoverage(data, offset0+covOff);\t// not always is coverage here\n\t}\n\t\n\tif(ltype==1) {\t\n\t\tif(tab.fmt==1) {\n\t\t\ttab.delta = bin.readShort(data, offset);  offset+=2;\n\t\t}\n\t\telse if(tab.fmt==2) {\n\t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n\t\t\ttab.newg = bin.readUshorts(data, offset, cnt);  offset+=tab.newg.length*2;\n\t\t}\n\t}\n\t//  Ligature Substitution Subtable\n\telse if(ltype==4) {\n\t\ttab.vals = [];\n\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n\t\tfor(var i=0; i<cnt; i++) {\n\t\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n\t\t\ttab.vals.push(Typr.GSUB.readLigatureSet(data, offset0+loff));\n\t\t}\n\t\t//console.log(tab.coverage);\n\t\t//console.log(tab.vals);\n\t} \n\t//  Contextual Substitution Subtable\n\telse if(ltype==5) {\n\t\tif(tab.fmt==2) {\n\t\t\tvar cDefOffset = bin.readUshort(data, offset);  offset+=2;\n\t\t\ttab.cDef = Typr._lctf.readClassDef(data, offset0 + cDefOffset);\n\t\t\ttab.scset = [];\n\t\t\tvar subClassSetCount = bin.readUshort(data, offset);  offset+=2;\n\t\t\tfor(var i=0; i<subClassSetCount; i++)\n\t\t\t{\n\t\t\t\tvar scsOff = bin.readUshort(data, offset);  offset+=2;\n\t\t\t\ttab.scset.push(  scsOff==0 ? null : Typr.GSUB.readSubClassSet(data, offset0 + scsOff)  );\n\t\t\t}\n\t\t}\n\t\t//else console.log(\"unknown table format\", tab.fmt);\n\t}\n\t//*\n\telse if(ltype==6) {\n\t\t/*\n\t\tif(tab.fmt==2) {\n\t\t\tvar btDef = bin.readUshort(data, offset);  offset+=2;\n\t\t\tvar inDef = bin.readUshort(data, offset);  offset+=2;\n\t\t\tvar laDef = bin.readUshort(data, offset);  offset+=2;\n\t\t\t\n\t\t\ttab.btDef = Typr._lctf.readClassDef(data, offset0 + btDef);\n\t\t\ttab.inDef = Typr._lctf.readClassDef(data, offset0 + inDef);\n\t\t\ttab.laDef = Typr._lctf.readClassDef(data, offset0 + laDef);\n\t\t\t\n\t\t\ttab.scset = [];\n\t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n\t\t\tfor(var i=0; i<cnt; i++) {\n\t\t\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n\t\t\t\ttab.scset.push(Typr.GSUB.readChainSubClassSet(data, offset0+loff));\n\t\t\t}\n\t\t}\n\t\t*/\n\t\tif(tab.fmt==3) {\n\t\t\tfor(var i=0; i<3; i++) {\n\t\t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n\t\t\t\tvar cvgs = [];\n\t\t\t\tfor(var j=0; j<cnt; j++) { cvgs.push(  Typr._lctf.readCoverage(data, offset0 + bin.readUshort(data, offset+j*2))   ); }\n\t\t\t\toffset+=cnt*2;\n\t\t\t\tif(i==0) { tab.backCvg = cvgs; }\n\t\t\t\tif(i==1) { tab.inptCvg = cvgs; }\n\t\t\t\tif(i==2) { tab.ahedCvg = cvgs; }\n\t\t\t}\n\t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n\t\t\ttab.lookupRec = Typr.GSUB.readSubstLookupRecords(data, offset, cnt);\n\t\t}\n\t\t//console.log(tab);\n\t} //*/\n\t//if(tab.coverage.indexOf(3)!=-1) console.log(ltype, fmt, tab);\n\t\n\treturn tab;\n};\n\nTypr.GSUB.readSubClassSet = function(data, offset)\n{\n\tvar rUs = Typr._bin.readUshort, offset0 = offset, lset = [];\n\tvar cnt = rUs(data, offset);  offset+=2;\n\tfor(var i=0; i<cnt; i++) {\n\t\tvar loff = rUs(data, offset);  offset+=2;\n\t\tlset.push(Typr.GSUB.readSubClassRule(data, offset0+loff));\n\t}\n\treturn lset;\n};\nTypr.GSUB.readSubClassRule= function(data, offset)\n{\n\tvar rUs = Typr._bin.readUshort, rule = {};\n\tvar gcount = rUs(data, offset);  offset+=2;\n\tvar scount = rUs(data, offset);  offset+=2;\n\trule.input = [];\n\tfor(var i=0; i<gcount-1; i++) {\n\t\trule.input.push(rUs(data, offset));  offset+=2;\n\t}\n\trule.substLookupRecords = Typr.GSUB.readSubstLookupRecords(data, offset, scount);\n\treturn rule;\n};\nTypr.GSUB.readSubstLookupRecords = function(data, offset, cnt)\n{\n\tvar rUs = Typr._bin.readUshort;\n\tvar out = [];\n\tfor(var i=0; i<cnt; i++) {  out.push(rUs(data, offset), rUs(data, offset+2));  offset+=4;  }\n\treturn out;\n};\n\nTypr.GSUB.readChainSubClassSet = function(data, offset)\n{\n\tvar bin = Typr._bin, offset0 = offset, lset = [];\n\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n\tfor(var i=0; i<cnt; i++) {\n\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n\t\tlset.push(Typr.GSUB.readChainSubClassRule(data, offset0+loff));\n\t}\n\treturn lset;\n};\nTypr.GSUB.readChainSubClassRule= function(data, offset)\n{\n\tvar bin = Typr._bin, rule = {};\n\tvar pps = [\"backtrack\", \"input\", \"lookahead\"];\n\tfor(var pi=0; pi<pps.length; pi++) {\n\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;  if(pi==1) { cnt--; }\n\t\trule[pps[pi]]=bin.readUshorts(data, offset, cnt);  offset+= rule[pps[pi]].length*2;\n\t}\n\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n\trule.subst = bin.readUshorts(data, offset, cnt*2);  offset += rule.subst.length*2;\n\treturn rule;\n};\n\nTypr.GSUB.readLigatureSet = function(data, offset)\n{\n\tvar bin = Typr._bin, offset0 = offset, lset = [];\n\tvar lcnt = bin.readUshort(data, offset);  offset+=2;\n\tfor(var j=0; j<lcnt; j++) {\n\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n\t\tlset.push(Typr.GSUB.readLigature(data, offset0+loff));\n\t}\n\treturn lset;\n};\nTypr.GSUB.readLigature = function(data, offset)\n{\n\tvar bin = Typr._bin, lig = {chain:[]};\n\tlig.nglyph = bin.readUshort(data, offset);  offset+=2;\n\tvar ccnt = bin.readUshort(data, offset);  offset+=2;\n\tfor(var k=0; k<ccnt-1; k++) {  lig.chain.push(bin.readUshort(data, offset));  offset+=2;  }\n\treturn lig;\n};\n\n\n\nTypr.head = {};\nTypr.head.parse = function(data, offset, length)\n{\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n\tobj.fontRevision = bin.readFixed(data, offset);  offset += 4;\n\tvar checkSumAdjustment = bin.readUint(data, offset);  offset += 4;\n\tvar magicNumber = bin.readUint(data, offset);  offset += 4;\n\tobj.flags = bin.readUshort(data, offset);  offset += 2;\n\tobj.unitsPerEm = bin.readUshort(data, offset);  offset += 2;\n\tobj.created  = bin.readUint64(data, offset);  offset += 8;\n\tobj.modified = bin.readUint64(data, offset);  offset += 8;\n\tobj.xMin = bin.readShort(data, offset);  offset += 2;\n\tobj.yMin = bin.readShort(data, offset);  offset += 2;\n\tobj.xMax = bin.readShort(data, offset);  offset += 2;\n\tobj.yMax = bin.readShort(data, offset);  offset += 2;\n\tobj.macStyle = bin.readUshort(data, offset);  offset += 2;\n\tobj.lowestRecPPEM = bin.readUshort(data, offset);  offset += 2;\n\tobj.fontDirectionHint = bin.readShort(data, offset);  offset += 2;\n\tobj.indexToLocFormat  = bin.readShort(data, offset);  offset += 2;\n\tobj.glyphDataFormat   = bin.readShort(data, offset);  offset += 2;\n\treturn obj;\n};\n\n\nTypr.hhea = {};\nTypr.hhea.parse = function(data, offset, length)\n{\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n\tobj.ascender  = bin.readShort(data, offset);  offset += 2;\n\tobj.descender = bin.readShort(data, offset);  offset += 2;\n\tobj.lineGap = bin.readShort(data, offset);  offset += 2;\n\t\n\tobj.advanceWidthMax = bin.readUshort(data, offset);  offset += 2;\n\tobj.minLeftSideBearing  = bin.readShort(data, offset);  offset += 2;\n\tobj.minRightSideBearing = bin.readShort(data, offset);  offset += 2;\n\tobj.xMaxExtent = bin.readShort(data, offset);  offset += 2;\n\t\n\tobj.caretSlopeRise = bin.readShort(data, offset);  offset += 2;\n\tobj.caretSlopeRun  = bin.readShort(data, offset);  offset += 2;\n\tobj.caretOffset    = bin.readShort(data, offset);  offset += 2;\n\t\n\toffset += 4*2;\n\t\n\tobj.metricDataFormat = bin.readShort (data, offset);  offset += 2;\n\tobj.numberOfHMetrics = bin.readUshort(data, offset);  offset += 2;\n\treturn obj;\n};\n\n\nTypr.hmtx = {};\nTypr.hmtx.parse = function(data, offset, length, font)\n{\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\t\n\tobj.aWidth = [];\n\tobj.lsBearing = [];\n\t\n\t\n\tvar aw = 0, lsb = 0;\n\t\n\tfor(var i=0; i<font.maxp.numGlyphs; i++)\n\t{\n\t\tif(i<font.hhea.numberOfHMetrics) {  aw=bin.readUshort(data, offset);  offset += 2;  lsb=bin.readShort(data, offset);  offset+=2;  }\n\t\tobj.aWidth.push(aw);\n\t\tobj.lsBearing.push(lsb);\n\t}\n\t\n\treturn obj;\n};\n\n\nTypr.kern = {};\nTypr.kern.parse = function(data, offset, length, font)\n{\n\tvar bin = Typr._bin;\n\t\n\tvar version = bin.readUshort(data, offset);  offset+=2;\n\tif(version==1) { return Typr.kern.parseV1(data, offset-2, length, font); }\n\tvar nTables = bin.readUshort(data, offset);  offset+=2;\n\t\n\tvar map = {glyph1: [], rval:[]};\n\tfor(var i=0; i<nTables; i++)\n\t{\n\t\toffset+=2;\t// skip version\n\t\tvar length  = bin.readUshort(data, offset);  offset+=2;\n\t\tvar coverage = bin.readUshort(data, offset);  offset+=2;\n\t\tvar format = coverage>>>8;\n\t\t/* I have seen format 128 once, that's why I do */ format &= 0xf;\n\t\tif(format==0) { offset = Typr.kern.readFormat0(data, offset, map); }\n\t\telse { throw \"unknown kern table format: \"+format; }\n\t}\n\treturn map;\n};\n\nTypr.kern.parseV1 = function(data, offset, length, font)\n{\n\tvar bin = Typr._bin;\n\t\n\tvar version = bin.readFixed(data, offset);  offset+=4;\n\tvar nTables = bin.readUint(data, offset);  offset+=4;\n\t\n\tvar map = {glyph1: [], rval:[]};\n\tfor(var i=0; i<nTables; i++)\n\t{\n\t\tvar length = bin.readUint(data, offset);   offset+=4;\n\t\tvar coverage = bin.readUshort(data, offset);  offset+=2;\n\t\tvar tupleIndex = bin.readUshort(data, offset);  offset+=2;\n\t\tvar format = coverage>>>8;\n\t\t/* I have seen format 128 once, that's why I do */ format &= 0xf;\n\t\tif(format==0) { offset = Typr.kern.readFormat0(data, offset, map); }\n\t\telse { throw \"unknown kern table format: \"+format; }\n\t}\n\treturn map;\n};\n\nTypr.kern.readFormat0 = function(data, offset, map)\n{\n\tvar bin = Typr._bin;\n\tvar pleft = -1;\n\tvar nPairs        = bin.readUshort(data, offset);  offset+=2;\n\tvar searchRange   = bin.readUshort(data, offset);  offset+=2;\n\tvar entrySelector = bin.readUshort(data, offset);  offset+=2;\n\tvar rangeShift    = bin.readUshort(data, offset);  offset+=2;\n\tfor(var j=0; j<nPairs; j++)\n\t{\n\t\tvar left  = bin.readUshort(data, offset);  offset+=2;\n\t\tvar right = bin.readUshort(data, offset);  offset+=2;\n\t\tvar value = bin.readShort (data, offset);  offset+=2;\n\t\tif(left!=pleft) { map.glyph1.push(left);  map.rval.push({ glyph2:[], vals:[] }); }\n\t\tvar rval = map.rval[map.rval.length-1];\n\t\trval.glyph2.push(right);   rval.vals.push(value);\n\t\tpleft = left;\n\t}\n\treturn offset;\n};\n\n\n\nTypr.loca = {};\nTypr.loca.parse = function(data, offset, length, font)\n{\n\tvar bin = Typr._bin;\n\tvar obj = [];\n\t\n\tvar ver = font.head.indexToLocFormat;\n\t//console.log(\"loca\", ver, length, 4*font.maxp.numGlyphs);\n\tvar len = font.maxp.numGlyphs+1;\n\t\n\tif(ver==0) { for(var i=0; i<len; i++) { obj.push(bin.readUshort(data, offset+(i<<1))<<1); } }\n\tif(ver==1) { for(var i=0; i<len; i++) { obj.push(bin.readUint  (data, offset+(i<<2))   ); } }\n\t\n\treturn obj;\n};\n\n\nTypr.maxp = {};\nTypr.maxp.parse = function(data, offset, length)\n{\n\t//console.log(data.length, offset, length);\n\t\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\t\n\t// both versions 0.5 and 1.0\n\tvar ver = bin.readUint(data, offset); offset += 4;\n\tobj.numGlyphs = bin.readUshort(data, offset);  offset += 2;\n\t\n\t// only 1.0\n\tif(ver == 0x00010000)\n\t{\n\t\tobj.maxPoints             = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxContours           = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxCompositePoints    = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxCompositeContours  = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxZones              = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxTwilightPoints     = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxStorage            = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxFunctionDefs       = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxInstructionDefs    = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxStackElements      = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxSizeOfInstructions = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxComponentElements  = bin.readUshort(data, offset);  offset += 2;\n\t\tobj.maxComponentDepth     = bin.readUshort(data, offset);  offset += 2;\n\t}\n\t\n\treturn obj;\n};\n\n\nTypr.name = {};\nTypr.name.parse = function(data, offset, length)\n{\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\tvar format = bin.readUshort(data, offset);  offset += 2;\n\tvar count  = bin.readUshort(data, offset);  offset += 2;\n\tvar stringOffset = bin.readUshort(data, offset);  offset += 2;\n\t\n\t//console.log(format,count);\n\t\n\tvar names = [\n\t\t\"copyright\",\n\t\t\"fontFamily\",\n\t\t\"fontSubfamily\",\n\t\t\"ID\",\n\t\t\"fullName\",\n\t\t\"version\",\n\t\t\"postScriptName\",\n\t\t\"trademark\",\n\t\t\"manufacturer\",\n\t\t\"designer\",\n\t\t\"description\",\n\t\t\"urlVendor\",\n\t\t\"urlDesigner\",\n\t\t\"licence\",\n\t\t\"licenceURL\",\n\t\t\"---\",\n\t\t\"typoFamilyName\",\n\t\t\"typoSubfamilyName\",\n\t\t\"compatibleFull\",\n\t\t\"sampleText\",\n\t\t\"postScriptCID\",\n\t\t\"wwsFamilyName\",\n\t\t\"wwsSubfamilyName\",\n\t\t\"lightPalette\",\n\t\t\"darkPalette\"\n\t];\n\t\n\tvar offset0 = offset;\n\t\n\tfor(var i=0; i<count; i++)\n\t{\n\t\tvar platformID = bin.readUshort(data, offset);  offset += 2;\n\t\tvar encodingID = bin.readUshort(data, offset);  offset += 2;\n\t\tvar languageID = bin.readUshort(data, offset);  offset += 2;\n\t\tvar nameID     = bin.readUshort(data, offset);  offset += 2;\n\t\tvar slen       = bin.readUshort(data, offset);  offset += 2;\n\t\tvar noffset    = bin.readUshort(data, offset);  offset += 2;\n\t\t//console.log(platformID, encodingID, languageID.toString(16), nameID, length, noffset);\n\t\t\n\t\tvar cname = names[nameID];\n\t\tvar soff = offset0 + count*12 + noffset;\n\t\tvar str;\n\t\tif(platformID == 0) { str = bin.readUnicode(data, soff, slen/2); }\n\t\telse if(platformID == 3 && encodingID == 0) { str = bin.readUnicode(data, soff, slen/2); }\n\t\telse if(encodingID == 0) { str = bin.readASCII  (data, soff, slen); }\n\t\telse if(encodingID == 1) { str = bin.readUnicode(data, soff, slen/2); }\n\t\telse if(encodingID == 3) { str = bin.readUnicode(data, soff, slen/2); }\n\t\t\n\t\telse if(platformID == 1) { str = bin.readASCII(data, soff, slen);  console.log(\"reading unknown MAC encoding \"+encodingID+\" as ASCII\"); }\n\t\telse { throw \"unknown encoding \"+encodingID + \", platformID: \"+platformID; }\n\t\t\n\t\tvar tid = \"p\"+platformID+\",\"+(languageID).toString(16);//Typr._platforms[platformID];\n\t\tif(obj[tid]==null) { obj[tid] = {}; }\n\t\tobj[tid][cname] = str;\n\t\tobj[tid]._lang = languageID;\n\t\t//console.log(tid, obj[tid]);\n\t}\n\t/*\n\tif(format == 1)\n\t{\n\t\tvar langTagCount = bin.readUshort(data, offset);  offset += 2;\n\t\tfor(var i=0; i<langTagCount; i++)\n\t\t{\n\t\t\tvar length  = bin.readUshort(data, offset);  offset += 2;\n\t\t\tvar noffset = bin.readUshort(data, offset);  offset += 2;\n\t\t}\n\t}\n\t*/\n\t\n\t//console.log(obj);\n\t\n\tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0409) { return obj[p]; } }\t\t// United States\n\tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0000) { return obj[p]; } }\t\t// Universal\n\tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0c0c) { return obj[p]; } }\t\t// Canada\n\tfor(var p in obj) { if(obj[p].postScriptName!=null) { return obj[p]; } }\n\t\n\tvar tname;\n\tfor(var p in obj) { tname=p; break; }\n\tconsole.log(\"returning name table with languageID \"+ obj[tname]._lang);\n\treturn obj[tname];\n};\n\n\nTypr[\"OS/2\"] = {};\nTypr[\"OS/2\"].parse = function(data, offset, length)\n{\n\tvar bin = Typr._bin;\n\tvar ver = bin.readUshort(data, offset); offset += 2;\n\t\n\tvar obj = {};\n\tif     (ver==0) { Typr[\"OS/2\"].version0(data, offset, obj); }\n\telse if(ver==1) { Typr[\"OS/2\"].version1(data, offset, obj); }\n\telse if(ver==2 || ver==3 || ver==4) { Typr[\"OS/2\"].version2(data, offset, obj); }\n\telse if(ver==5) { Typr[\"OS/2\"].version5(data, offset, obj); }\n\telse { throw \"unknown OS/2 table version: \"+ver; }\n\t\n\treturn obj;\n};\n\nTypr[\"OS/2\"].version0 = function(data, offset, obj)\n{\n\tvar bin = Typr._bin;\n\tobj.xAvgCharWidth = bin.readShort(data, offset); offset += 2;\n\tobj.usWeightClass = bin.readUshort(data, offset); offset += 2;\n\tobj.usWidthClass  = bin.readUshort(data, offset); offset += 2;\n\tobj.fsType = bin.readUshort(data, offset); offset += 2;\n\tobj.ySubscriptXSize = bin.readShort(data, offset); offset += 2;\n\tobj.ySubscriptYSize = bin.readShort(data, offset); offset += 2;\n\tobj.ySubscriptXOffset = bin.readShort(data, offset); offset += 2;\n\tobj.ySubscriptYOffset = bin.readShort(data, offset); offset += 2; \n\tobj.ySuperscriptXSize = bin.readShort(data, offset); offset += 2; \n\tobj.ySuperscriptYSize = bin.readShort(data, offset); offset += 2; \n\tobj.ySuperscriptXOffset = bin.readShort(data, offset); offset += 2;\n\tobj.ySuperscriptYOffset = bin.readShort(data, offset); offset += 2;\n\tobj.yStrikeoutSize = bin.readShort(data, offset); offset += 2;\n\tobj.yStrikeoutPosition = bin.readShort(data, offset); offset += 2;\n\tobj.sFamilyClass = bin.readShort(data, offset); offset += 2;\n\tobj.panose = bin.readBytes(data, offset, 10);  offset += 10;\n\tobj.ulUnicodeRange1\t= bin.readUint(data, offset);  offset += 4;\n\tobj.ulUnicodeRange2\t= bin.readUint(data, offset);  offset += 4;\n\tobj.ulUnicodeRange3\t= bin.readUint(data, offset);  offset += 4;\n\tobj.ulUnicodeRange4\t= bin.readUint(data, offset);  offset += 4;\n\tobj.achVendID = [bin.readInt8(data, offset), bin.readInt8(data, offset+1),bin.readInt8(data, offset+2),bin.readInt8(data, offset+3)];  offset += 4;\n\tobj.fsSelection\t = bin.readUshort(data, offset); offset += 2;\n\tobj.usFirstCharIndex = bin.readUshort(data, offset); offset += 2;\n\tobj.usLastCharIndex = bin.readUshort(data, offset); offset += 2;\n\tobj.sTypoAscender = bin.readShort(data, offset); offset += 2;\n\tobj.sTypoDescender = bin.readShort(data, offset); offset += 2;\n\tobj.sTypoLineGap = bin.readShort(data, offset); offset += 2;\n\tobj.usWinAscent = bin.readUshort(data, offset); offset += 2;\n\tobj.usWinDescent = bin.readUshort(data, offset); offset += 2;\n\treturn offset;\n};\n\nTypr[\"OS/2\"].version1 = function(data, offset, obj)\n{\n\tvar bin = Typr._bin;\n\toffset = Typr[\"OS/2\"].version0(data, offset, obj);\n\t\n\tobj.ulCodePageRange1 = bin.readUint(data, offset); offset += 4;\n\tobj.ulCodePageRange2 = bin.readUint(data, offset); offset += 4;\n\treturn offset;\n};\n\nTypr[\"OS/2\"].version2 = function(data, offset, obj)\n{\n\tvar bin = Typr._bin;\n\toffset = Typr[\"OS/2\"].version1(data, offset, obj);\n\t\n\tobj.sxHeight = bin.readShort(data, offset); offset += 2;\n\tobj.sCapHeight = bin.readShort(data, offset); offset += 2;\n\tobj.usDefault = bin.readUshort(data, offset); offset += 2;\n\tobj.usBreak = bin.readUshort(data, offset); offset += 2;\n\tobj.usMaxContext = bin.readUshort(data, offset); offset += 2;\n\treturn offset;\n};\n\nTypr[\"OS/2\"].version5 = function(data, offset, obj)\n{\n\tvar bin = Typr._bin;\n\toffset = Typr[\"OS/2\"].version2(data, offset, obj);\n\n\tobj.usLowerOpticalPointSize = bin.readUshort(data, offset); offset += 2;\n\tobj.usUpperOpticalPointSize = bin.readUshort(data, offset); offset += 2;\n\treturn offset;\n};\n\nTypr.post = {};\nTypr.post.parse = function(data, offset, length)\n{\n\tvar bin = Typr._bin;\n\tvar obj = {};\n\t\n\tobj.version           = bin.readFixed(data, offset);  offset+=4;\n\tobj.italicAngle       = bin.readFixed(data, offset);  offset+=4;\n\tobj.underlinePosition = bin.readShort(data, offset);  offset+=2;\n\tobj.underlineThickness = bin.readShort(data, offset);  offset+=2;\n\n\treturn obj;\n};\nTypr.SVG = {};\nTypr.SVG.parse = function(data, offset, length)\n{\n\tvar bin = Typr._bin;\n\tvar obj = { entries: []};\n\n\tvar offset0 = offset;\n\n\tvar tableVersion = bin.readUshort(data, offset);\toffset += 2;\n\tvar svgDocIndexOffset = bin.readUint(data, offset);\toffset += 4;\n\tvar reserved = bin.readUint(data, offset); offset += 4;\n\n\toffset = svgDocIndexOffset + offset0;\n\n\tvar numEntries = bin.readUshort(data, offset);\toffset += 2;\n\n\tfor(var i=0; i<numEntries; i++)\n\t{\n\t\tvar startGlyphID = bin.readUshort(data, offset);  offset += 2;\n\t\tvar endGlyphID   = bin.readUshort(data, offset);  offset += 2;\n\t\tvar svgDocOffset = bin.readUint  (data, offset);  offset += 4;\n\t\tvar svgDocLength = bin.readUint  (data, offset);  offset += 4;\n\n\t\tvar sbuf = new Uint8Array(data.buffer, offset0 + svgDocOffset + svgDocIndexOffset, svgDocLength);\n\t\tvar svg = bin.readUTF8(sbuf, 0, sbuf.length);\n\t\t\n\t\tfor(var f=startGlyphID; f<=endGlyphID; f++) {\n\t\t\tobj.entries[f] = svg;\n\t\t}\n\t}\n\treturn obj;\n};\n\nTypr.SVG.toPath = function(str)\n{\n\tvar pth = {cmds:[], crds:[]};\n\tif(str==null) { return pth; }\n\t\n\tvar prsr = new DOMParser();\n\tvar doc = prsr[\"parseFromString\"](str,\"image/svg+xml\");\n\t\n\tvar svg = doc.firstChild;  while(svg.tagName!=\"svg\") { svg = svg.nextSibling; }\n\tvar vb = svg.getAttribute(\"viewBox\");\n\tif(vb) { vb = vb.trim().split(\" \").map(parseFloat); }  else   { vb = [0,0,1000,1000]; }\n\tTypr.SVG._toPath(svg.children, pth);\n\tfor(var i=0; i<pth.crds.length; i+=2) {\n\t\tvar x = pth.crds[i], y = pth.crds[i+1];\n\t\tx -= vb[0];\n\t\ty -= vb[1];\n\t\ty = -y;\n\t\tpth.crds[i] = x;\n\t\tpth.crds[i+1] = y;\n\t}\n\treturn pth;\n};\n\nTypr.SVG._toPath = function(nds, pth, fill) {\n\tfor(var ni=0; ni<nds.length; ni++) {\n\t\tvar nd = nds[ni], tn = nd.tagName;\n\t\tvar cfl = nd.getAttribute(\"fill\");  if(cfl==null) { cfl = fill; }\n\t\tif(tn==\"g\") { Typr.SVG._toPath(nd.children, pth, cfl); }\n\t\telse if(tn==\"path\") {\n\t\t\tpth.cmds.push(cfl?cfl:\"#000000\");\n\t\t\tvar d = nd.getAttribute(\"d\");  //console.log(d);\n\t\t\tvar toks = Typr.SVG._tokens(d);  //console.log(toks);\n\t\t\tTypr.SVG._toksToPath(toks, pth);  pth.cmds.push(\"X\");\n\t\t}\n\t\telse if(tn==\"defs\") ;\n\t\telse { console.log(tn, nd); }\n\t}\n};\n\nTypr.SVG._tokens = function(d) {\n\tvar ts = [], off = 0, rn=false, cn=\"\";  // reading number, current number\n\twhile(off<d.length){\n\t\tvar cc=d.charCodeAt(off), ch = d.charAt(off);  off++;\n\t\tvar isNum = (48<=cc && cc<=57) || ch==\".\" || ch==\"-\";\n\t\t\n\t\tif(rn) {\n\t\t\tif(ch==\"-\") {  ts.push(parseFloat(cn));  cn=ch;  }\n\t\t\telse if(isNum) { cn+=ch; }\n\t\t\telse {  ts.push(parseFloat(cn));  if(ch!=\",\" && ch!=\" \") { ts.push(ch); }  rn=false;  }\n\t\t}\n\t\telse {\n\t\t\tif(isNum) {  cn=ch;  rn=true;  }\n\t\t\telse if(ch!=\",\" && ch!=\" \") { ts.push(ch); }\n\t\t}\n\t}\n\tif(rn) { ts.push(parseFloat(cn)); }\n\treturn ts;\n};\n\nTypr.SVG._toksToPath = function(ts, pth) {\t\n\tvar i = 0, x = 0, y = 0, ox = 0, oy = 0;\n\tvar pc = {\"M\":2,\"L\":2,\"H\":1,\"V\":1,   \"S\":4,   \"C\":6};\n\tvar cmds = pth.cmds, crds = pth.crds;\n\t\n\twhile(i<ts.length) {\n\t\tvar cmd = ts[i];  i++;\n\t\t\n\t\tif(cmd==\"z\") {  cmds.push(\"Z\");  x=ox;  y=oy;  }\n\t\telse {\n\t\t\tvar cmu = cmd.toUpperCase();\n\t\t\tvar ps = pc[cmu], reps = Typr.SVG._reps(ts, i, ps);\n\t\t\n\t\t\tfor(var j=0; j<reps; j++) {\n\t\t\t\tvar xi = 0, yi = 0;   if(cmd!=cmu) {  xi=x;  yi=y;  }\n\t\t\t\t\n\t\t\t\tif(cmu==\"M\") {  x = xi+ts[i++];  y = yi+ts[i++];  cmds.push(\"M\");  crds.push(x,y);  ox=x;  oy=y; }\n\t\t\t\telse if(cmu==\"L\") {  x = xi+ts[i++];  y = yi+ts[i++];  cmds.push(\"L\");  crds.push(x,y);  }\n\t\t\t\telse if(cmu==\"H\") {  x = xi+ts[i++];                   cmds.push(\"L\");  crds.push(x,y);  }\n\t\t\t\telse if(cmu==\"V\") {  y = yi+ts[i++];                   cmds.push(\"L\");  crds.push(x,y);  }\n\t\t\t\telse if(cmu==\"C\") {\n\t\t\t\t\tvar x1=xi+ts[i++], y1=yi+ts[i++], x2=xi+ts[i++], y2=yi+ts[i++], x3=xi+ts[i++], y3=yi+ts[i++];\n\t\t\t\t\tcmds.push(\"C\");  crds.push(x1,y1,x2,y2,x3,y3);  x=x3;  y=y3;\n\t\t\t\t}\n\t\t\t\telse if(cmu==\"S\") {\n\t\t\t\t\tvar co = Math.max(crds.length-4, 0);\n\t\t\t\t\tvar x1 = x+x-crds[co], y1 = y+y-crds[co+1];\n\t\t\t\t\tvar x2=xi+ts[i++], y2=yi+ts[i++], x3=xi+ts[i++], y3=yi+ts[i++];  \n\t\t\t\t\tcmds.push(\"C\");  crds.push(x1,y1,x2,y2,x3,y3);  x=x3;  y=y3;\n\t\t\t\t}\n\t\t\t\telse { console.log(\"Unknown SVG command \"+cmd); }\n\t\t\t}\n\t\t}\n\t}\n};\nTypr.SVG._reps = function(ts, off, ps) {\n\tvar i = off;\n\twhile(i<ts.length) {  if((typeof ts[i]) == \"string\") { break; }  i+=ps;  }\n\treturn (i-off)/ps;\n};\n// End Typr.js\n\n// Begin Typr.U.js\n\nif(Typr  ==null) { Typr   = {}; }\nif(Typr.U==null) { Typr.U = {}; }\n\n\nTypr.U.codeToGlyph = function(font, code)\n{\n\tvar cmap = font.cmap;\n\t\n\tvar tind = -1;\n\tif(cmap.p0e4!=null) { tind = cmap.p0e4; }\n\telse if(cmap.p3e1!=null) { tind = cmap.p3e1; }\n\telse if(cmap.p1e0!=null) { tind = cmap.p1e0; }\n\telse if(cmap.p0e3!=null) { tind = cmap.p0e3; }\n\t\n\tif(tind==-1) { throw \"no familiar platform and encoding!\"; }\n\t\n\tvar tab = cmap.tables[tind];\n\t\n\tif(tab.format==0)\n\t{\n\t\tif(code>=tab.map.length) { return 0; }\n\t\treturn tab.map[code];\n\t}\n\telse if(tab.format==4)\n\t{\n\t\tvar sind = -1;\n\t\tfor(var i=0; i<tab.endCount.length; i++)   { if(code<=tab.endCount[i]){  sind=i;  break;  } } \n\t\tif(sind==-1) { return 0; }\n\t\tif(tab.startCount[sind]>code) { return 0; }\n\t\t\n\t\tvar gli = 0;\n\t\tif(tab.idRangeOffset[sind]!=0) { gli = tab.glyphIdArray[(code-tab.startCount[sind]) + (tab.idRangeOffset[sind]>>1) - (tab.idRangeOffset.length-sind)]; }\n\t\telse                           { gli = code + tab.idDelta[sind]; }\n\t\treturn gli & 0xFFFF;\n\t}\n\telse if(tab.format==12)\n\t{\n\t\tif(code>tab.groups[tab.groups.length-1][1]) { return 0; }\n\t\tfor(var i=0; i<tab.groups.length; i++)\n\t\t{\n\t\t\tvar grp = tab.groups[i];\n\t\t\tif(grp[0]<=code && code<=grp[1]) { return grp[2] + (code-grp[0]); }\n\t\t}\n\t\treturn 0;\n\t}\n\telse { throw \"unknown cmap table format \"+tab.format; }\n};\n\n\nTypr.U.glyphToPath = function(font, gid)\n{\n\tvar path = { cmds:[], crds:[] };\n\tif(font.SVG && font.SVG.entries[gid]) {\n\t\tvar p = font.SVG.entries[gid];  if(p==null) { return path; }\n\t\tif(typeof p == \"string\") {  p = Typr.SVG.toPath(p);  font.SVG.entries[gid]=p;  }\n\t\treturn p;\n\t}\n\telse if(font.CFF) {\n\t\tvar state = {x:0,y:0,stack:[],nStems:0,haveWidth:false,width: font.CFF.Private ? font.CFF.Private.defaultWidthX : 0,open:false};\n\t\tvar cff=font.CFF, pdct = font.CFF.Private;\n\t\tif(cff.ROS) {\n\t\t\tvar gi = 0;\n\t\t\twhile(cff.FDSelect[gi+2]<=gid) { gi+=2; }\n\t\t\tpdct = cff.FDArray[cff.FDSelect[gi+1]].Private;\n\t\t}\n\t\tTypr.U._drawCFF(font.CFF.CharStrings[gid], state, cff, pdct, path);\n\t}\n\telse if(font.glyf) {  Typr.U._drawGlyf(gid, font, path);  }\n\treturn path;\n};\n\nTypr.U._drawGlyf = function(gid, font, path)\n{\n\tvar gl = font.glyf[gid];\n\tif(gl==null) { gl = font.glyf[gid] = Typr.glyf._parseGlyf(font, gid); }\n\tif(gl!=null){\n\t\tif(gl.noc>-1) { Typr.U._simpleGlyph(gl, path); }\n\t\telse          { Typr.U._compoGlyph (gl, font, path); }\n\t}\n};\nTypr.U._simpleGlyph = function(gl, p)\n{\n\tfor(var c=0; c<gl.noc; c++)\n\t{\n\t\tvar i0 = (c==0) ? 0 : (gl.endPts[c-1] + 1);\n\t\tvar il = gl.endPts[c];\n\t\t\n\t\tfor(var i=i0; i<=il; i++)\n\t\t{\n\t\t\tvar pr = (i==i0)?il:(i-1);\n\t\t\tvar nx = (i==il)?i0:(i+1);\n\t\t\tvar onCurve = gl.flags[i]&1;\n\t\t\tvar prOnCurve = gl.flags[pr]&1;\n\t\t\tvar nxOnCurve = gl.flags[nx]&1;\n\t\t\t\n\t\t\tvar x = gl.xs[i], y = gl.ys[i];\n\t\t\t\n\t\t\tif(i==i0) { \n\t\t\t\tif(onCurve)  \n\t\t\t\t{\n\t\t\t\t\tif(prOnCurve) { Typr.U.P.moveTo(p, gl.xs[pr], gl.ys[pr]); } \n\t\t\t\t\telse          {  Typr.U.P.moveTo(p,x,y);  continue;  /*  will do curveTo at il  */  }\n\t\t\t\t}\n\t\t\t\telse        \n\t\t\t\t{\n\t\t\t\t\tif(prOnCurve) { Typr.U.P.moveTo(p,  gl.xs[pr],       gl.ys[pr]        ); }\n\t\t\t\t\telse          { Typr.U.P.moveTo(p, (gl.xs[pr]+x)/2, (gl.ys[pr]+y)/2   ); } \n\t\t\t\t}\n\t\t\t}\n\t\t\tif(onCurve)\n\t\t\t{\n\t\t\t\tif(prOnCurve) { Typr.U.P.lineTo(p,x,y); }\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(nxOnCurve) { Typr.U.P.qcurveTo(p, x, y, gl.xs[nx], gl.ys[nx]); } \n\t\t\t\telse          { Typr.U.P.qcurveTo(p, x, y, (x+gl.xs[nx])/2, (y+gl.ys[nx])/2); } \n\t\t\t}\n\t\t}\n\t\tTypr.U.P.closePath(p);\n\t}\n};\nTypr.U._compoGlyph = function(gl, font, p)\n{\n\tfor(var j=0; j<gl.parts.length; j++)\n\t{\n\t\tvar path = { cmds:[], crds:[] };\n\t\tvar prt = gl.parts[j];\n\t\tTypr.U._drawGlyf(prt.glyphIndex, font, path);\n\t\t\n\t\tvar m = prt.m;\n\t\tfor(var i=0; i<path.crds.length; i+=2)\n\t\t{\n\t\t\tvar x = path.crds[i  ], y = path.crds[i+1];\n\t\t\tp.crds.push(x*m.a + y*m.b + m.tx);\n\t\t\tp.crds.push(x*m.c + y*m.d + m.ty);\n\t\t}\n\t\tfor(var i=0; i<path.cmds.length; i++) { p.cmds.push(path.cmds[i]); }\n\t}\n};\n\n\nTypr.U._getGlyphClass = function(g, cd)\n{\n\tvar intr = Typr._lctf.getInterval(cd, g);\n\treturn intr==-1 ? 0 : cd[intr+2];\n\t//for(var i=0; i<cd.start.length; i++) \n\t//\tif(cd.start[i]<=g && cd.end[i]>=g) return cd.class[i];\n\t//return 0;\n};\n\nTypr.U.getPairAdjustment = function(font, g1, g2)\n{\n\t//return 0;\n\tif(font.GPOS) {\n\t\tvar gpos = font[\"GPOS\"];\n\t\tvar llist = gpos.lookupList, flist = gpos.featureList;\n\t\tvar tused = [];\n\t\tfor(var i=0; i<flist.length; i++) \n\t\t{\n\t\t\tvar fl = flist[i];  //console.log(fl);\n\t\t\tif(fl.tag!=\"kern\") { continue; }\n\t\t\tfor(var ti=0; ti<fl.tab.length; ti++) {\n\t\t\t\tif(tused[fl.tab[ti]]) { continue; }  tused[fl.tab[ti]] = true;\n\t\t\t\tvar tab = llist[fl.tab[ti]];\n\t\t\t\t//console.log(tab);\n\t\t\t\t\n\t\t\t\tfor(var j=0; j<tab.tabs.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif(tab.tabs[i]==null) { continue; }\n\t\t\t\t\tvar ltab = tab.tabs[j], ind;\n\t\t\t\t\tif(ltab.coverage) {  ind = Typr._lctf.coverageIndex(ltab.coverage, g1);  if(ind==-1) { continue; }  }\n\t\t\t\t\t\n\t\t\t\t\tif(tab.ltype==1) ;\n\t\t\t\t\telse if(tab.ltype==2)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar adj;\n\t\t\t\t\t\tif(ltab.fmt==1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar right = ltab.pairsets[ind];\n\t\t\t\t\t\t\tfor(var i=0; i<right.length; i++) { if(right[i].gid2==g2) { adj = right[i]; } }\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(ltab.fmt==2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar c1 = Typr.U._getGlyphClass(g1, ltab.classDef1);\n\t\t\t\t\t\t\tvar c2 = Typr.U._getGlyphClass(g2, ltab.classDef2);\n\t\t\t\t\t\t\tadj = ltab.matrix[c1][c2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//if(adj) console.log(ltab, adj);\n\t\t\t\t\t\tif(adj && adj.val2) { return adj.val2[2]; }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(font.kern)\n\t{\n\t\tvar ind1 = font.kern.glyph1.indexOf(g1);\n\t\tif(ind1!=-1)\n\t\t{\n\t\t\tvar ind2 = font.kern.rval[ind1].glyph2.indexOf(g2);\n\t\t\tif(ind2!=-1) { return font.kern.rval[ind1].vals[ind2]; }\n\t\t}\n\t}\n\t\n\treturn 0;\n};\n\nTypr.U.stringToGlyphs = function(font, str)\n{\n\tvar gls = [];\n\tfor(var i=0; i<str.length; i++) {\n\t\tvar cc = str.codePointAt(i);  if(cc>0xffff) { i++; }\n\t\tgls.push(Typr.U.codeToGlyph(font, cc));\n\t}\n\tfor(var i=0; i<str.length; i++) {\n\t\tvar cc = str.codePointAt(i);  //\n\t\tif(cc==2367) {  var t=gls[i-1];  gls[i-1]=gls[i];  gls[i]=t;  }\n\t\t//if(cc==2381) {  var t=gls[i+1];  gls[i+1]=gls[i];  gls[i]=t;  }\n\t\tif(cc>0xffff) { i++; }\n\t}\n\t//console.log(gls.slice(0));\n\t\n\t//console.log(gls);  return gls;\n\t\n\tvar gsub = font[\"GSUB\"];  if(gsub==null) { return gls; }\n\tvar llist = gsub.lookupList, flist = gsub.featureList;\n\t\n\tvar cligs = [\"rlig\", \"liga\", \"mset\",  \"isol\",\"init\",\"fina\",\"medi\",   \"half\", \"pres\", \n\t\t\t\t\"blws\" /* Tibetan fonts like Himalaya.ttf */ ];\n\t\n\t//console.log(gls.slice(0));\n\tvar tused = [];\n\tfor(var fi=0; fi<flist.length; fi++)\n\t{\n\t\tvar fl = flist[fi];  if(cligs.indexOf(fl.tag)==-1) { continue; }\n\t\t//if(fl.tag==\"blwf\") continue;\n\t\t//console.log(fl);\n\t\t//console.log(fl.tag);\n\t\tfor(var ti=0; ti<fl.tab.length; ti++) {\n\t\t\tif(tused[fl.tab[ti]]) { continue; }  tused[fl.tab[ti]] = true;\n\t\t\tvar tab = llist[fl.tab[ti]];\n\t\t\t//console.log(fl.tab[ti], tab.ltype);\n\t\t\t//console.log(fl.tag, tab);\n\t\t\tfor(var ci=0; ci<gls.length; ci++) {\n\t\t\t\tvar feat = Typr.U._getWPfeature(str, ci);\n\t\t\t\tif(\"isol,init,fina,medi\".indexOf(fl.tag)!=-1 && fl.tag!=feat) { continue; }\n\t\t\t\t\n\t\t\t\tTypr.U._applySubs(gls, ci, tab, llist);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn gls;\n};\nTypr.U._getWPfeature = function(str, ci) {  // get Word Position feature\n\tvar wsep = \"\\n\\t\\\" ,.:;!?()  ،\";\n\tvar R = \"آأؤإاةدذرزوٱٲٳٵٶٷڈډڊڋڌڍڎڏڐڑڒړڔڕږڗژڙۀۃۄۅۆۇۈۉۊۋۍۏےۓەۮۯܐܕܖܗܘܙܞܨܪܬܯݍݙݚݛݫݬݱݳݴݸݹࡀࡆࡇࡉࡔࡧࡩࡪࢪࢫࢬࢮࢱࢲࢹૅેૉ૊૎૏ૐ૑૒૝ૡ૤૯஁ஃ஄அஉ஌எஏ஑னப஫஬\";\n\tvar L = \"ꡲ્૗\";\n\t\n\tvar slft = ci==0            || wsep.indexOf(str[ci-1])!=-1;\n\tvar srgt = ci==str.length-1 || wsep.indexOf(str[ci+1])!=-1;\n\t\t\n\tif(!slft && R.indexOf(str[ci-1])!=-1) { slft=true; }\n\tif(!srgt && R.indexOf(str[ci  ])!=-1) { srgt=true; }\n\t\t\n\tif(!srgt && L.indexOf(str[ci+1])!=-1) { srgt=true; }\n\tif(!slft && L.indexOf(str[ci  ])!=-1) { slft=true; }\n\t\t\n\tvar feat = null;\n\tif(slft) { feat = srgt ? \"isol\" : \"init\"; }\n\telse     { feat = srgt ? \"fina\" : \"medi\"; }\n\t\n\treturn feat;\n};\nTypr.U._applySubs = function(gls, ci, tab, llist) {\n\tvar rlim = gls.length-ci-1;\n\t//if(ci==0) console.log(\"++++ \", tab.ltype);\n\tfor(var j=0; j<tab.tabs.length; j++)\n\t{\n\t\tif(tab.tabs[j]==null) { continue; }\n\t\tvar ltab = tab.tabs[j], ind;\n\t\tif(ltab.coverage) {  ind = Typr._lctf.coverageIndex(ltab.coverage, gls[ci]);  if(ind==-1) { continue; }  }\n\t\t//if(ci==0) console.log(ind, ltab);\n\t\t//*\n\t\tif(tab.ltype==1) {\n\t\t\tvar gl = gls[ci];\n\t\t\tif(ltab.fmt==1) { gls[ci] = gls[ci]+ltab.delta; }\n\t\t\telse            { gls[ci] = ltab.newg[ind]; }\n\t\t\t//console.log(\"applying ... 1\", ci, gl, gls[ci]);\n\t\t}//*\n\t\telse if(tab.ltype==4) {\n\t\t\tvar vals = ltab.vals[ind];\n\t\t\t\n\t\t\tfor(var k=0; k<vals.length; k++) {\n\t\t\t\tvar lig = vals[k], rl = lig.chain.length;  if(rl>rlim) { continue; }\n\t\t\t\tvar good = true, em1 = 0;\n\t\t\t\tfor(var l=0; l<rl; l++) {  while(gls[ci+em1+(1+l)]==-1){ em1++; }  if(lig.chain[l]!=gls[ci+em1+(1+l)]) { good=false; }  }\n\t\t\t\tif(!good) { continue; }\n\t\t\t\tgls[ci]=lig.nglyph;\n\t\t\t\tfor(var l=0; l<rl+em1; l++) { gls[ci+l+1]=-1; }   break;  // first character changed, other ligatures do not apply anymore\n\t\t\t\t//console.log(\"lig\", ci, lig.chain, lig.nglyph);\n\t\t\t\t//console.log(\"applying ...\");\n\t\t\t}\n\t\t}\n\t\telse  if(tab.ltype==5 && ltab.fmt==2) {\n\t\t\tvar cind = Typr._lctf.getInterval(ltab.cDef, gls[ci]);\n\t\t\tvar cls = ltab.cDef[cind+2], scs = ltab.scset[cls]; \n\t\t\tfor(var i=0; i<scs.length; i++) {\n\t\t\t\tvar sc = scs[i], inp = sc.input;\n\t\t\t\tif(inp.length>rlim) { continue; }\n\t\t\t\tvar good = true;\n\t\t\t\tfor(var l=0; l<inp.length; l++) {\n\t\t\t\t\tvar cind2 = Typr._lctf.getInterval(ltab.cDef, gls[ci+1+l]);\n\t\t\t\t\tif(cind==-1 && ltab.cDef[cind2+2]!=inp[l]) {  good=false;  break;  }\n\t\t\t\t}\n\t\t\t\tif(!good) { continue; }\n\t\t\t\t//console.log(ci, gl);\n\t\t\t\tvar lrs = sc.substLookupRecords;\n\t\t\t\tfor(var k=0; k<lrs.length; k+=2)\n\t\t\t\t{\n\t\t\t\t\tvar gi = lrs[k], tabi = lrs[k+1];\n\t\t\t\t\t//Typr.U._applyType1(gls, ci+gi, llist[tabi]);\n\t\t\t\t\t//console.log(tabi, gls[ci+gi], llist[tabi]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(tab.ltype==6 && ltab.fmt==3) {\n\t\t\t//if(ltab.backCvg.length==0) return;\n\t\t\tif(!Typr.U._glsCovered(gls, ltab.backCvg, ci-ltab.backCvg.length)) { continue; }\n\t\t\tif(!Typr.U._glsCovered(gls, ltab.inptCvg, ci)) { continue; }\n\t\t\tif(!Typr.U._glsCovered(gls, ltab.ahedCvg, ci+ltab.inptCvg.length)) { continue; }\n\t\t\t//console.log(ci, ltab);\n\t\t\tvar lr = ltab.lookupRec;  //console.log(ci, gl, lr);\n\t\t\tfor(var i=0; i<lr.length; i+=2) {\n\t\t\t\tvar cind = lr[i], tab2 = llist[lr[i+1]];\n\t\t\t\t//console.log(\"-\", lr[i+1], tab2);\n\t\t\t\tTypr.U._applySubs(gls, ci+cind, tab2, llist);\n\t\t\t}\n\t\t}\n\t\t//else console.log(\"Unknown table\", tab.ltype, ltab.fmt);\n\t\t//*/\n\t}\n};\n\nTypr.U._glsCovered = function(gls, cvgs, ci) {\n\tfor(var i=0; i<cvgs.length; i++) {\n\t\tvar ind = Typr._lctf.coverageIndex(cvgs[i], gls[ci+i]);  if(ind==-1) { return false; }\n\t}\n\treturn true;\n};\n\nTypr.U.glyphsToPath = function(font, gls, clr)\n{\t\n\t//gls = gls.reverse();//gls.slice(0,12).concat(gls.slice(12).reverse());\n\t\n\tvar tpath = {cmds:[], crds:[]};\n\tvar x = 0;\n\t\n\tfor(var i=0; i<gls.length; i++)\n\t{\n\t\tvar gid = gls[i];  if(gid==-1) { continue; }\n\t\tvar gid2 = (i<gls.length-1 && gls[i+1]!=-1)  ? gls[i+1] : 0;\n\t\tvar path = Typr.U.glyphToPath(font, gid);\n\t\tfor(var j=0; j<path.crds.length; j+=2)\n\t\t{\n\t\t\ttpath.crds.push(path.crds[j] + x);\n\t\t\ttpath.crds.push(path.crds[j+1]);\n\t\t}\n\t\tif(clr) { tpath.cmds.push(clr); }\n\t\tfor(var j=0; j<path.cmds.length; j++) { tpath.cmds.push(path.cmds[j]); }\n\t\tif(clr) { tpath.cmds.push(\"X\"); }\n\t\tx += font.hmtx.aWidth[gid];// - font.hmtx.lsBearing[gid];\n\t\tif(i<gls.length-1) { x += Typr.U.getPairAdjustment(font, gid, gid2); }\n\t}\n\treturn tpath;\n};\n\nTypr.U.pathToSVG = function(path, prec)\n{\n\tif(prec==null) { prec = 5; }\n\tvar out = [], co = 0, lmap = {\"M\":2,\"L\":2,\"Q\":4,\"C\":6};\n\tfor(var i=0; i<path.cmds.length; i++)\n\t{\n\t\tvar cmd = path.cmds[i], cn = co+(lmap[cmd]?lmap[cmd]:0);  \n\t\tout.push(cmd);\n\t\twhile(co<cn) {  var c = path.crds[co++];  out.push(parseFloat(c.toFixed(prec))+(co==cn?\"\":\" \"));  }\n\t}\n\treturn out.join(\"\");\n};\n\nTypr.U.pathToContext = function(path, ctx)\n{\n\tvar c = 0, crds = path.crds;\n\t\n\tfor(var j=0; j<path.cmds.length; j++)\n\t{\n\t\tvar cmd = path.cmds[j];\n\t\tif     (cmd==\"M\") {\n\t\t\tctx.moveTo(crds[c], crds[c+1]);\n\t\t\tc+=2;\n\t\t}\n\t\telse if(cmd==\"L\") {\n\t\t\tctx.lineTo(crds[c], crds[c+1]);\n\t\t\tc+=2;\n\t\t}\n\t\telse if(cmd==\"C\") {\n\t\t\tctx.bezierCurveTo(crds[c], crds[c+1], crds[c+2], crds[c+3], crds[c+4], crds[c+5]);\n\t\t\tc+=6;\n\t\t}\n\t\telse if(cmd==\"Q\") {\n\t\t\tctx.quadraticCurveTo(crds[c], crds[c+1], crds[c+2], crds[c+3]);\n\t\t\tc+=4;\n\t\t}\n\t\telse if(cmd.charAt(0)==\"#\") {\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = cmd;\n\t\t}\n\t\telse if(cmd==\"Z\") {\n\t\t\tctx.closePath();\n\t\t}\n\t\telse if(cmd==\"X\") {\n\t\t\tctx.fill();\n\t\t}\n\t}\n};\n\n\nTypr.U.P = {};\nTypr.U.P.moveTo = function(p, x, y)\n{\n\tp.cmds.push(\"M\");  p.crds.push(x,y);\n};\nTypr.U.P.lineTo = function(p, x, y)\n{\n\tp.cmds.push(\"L\");  p.crds.push(x,y);\n};\nTypr.U.P.curveTo = function(p, a,b,c,d,e,f)\n{\n\tp.cmds.push(\"C\");  p.crds.push(a,b,c,d,e,f);\n};\nTypr.U.P.qcurveTo = function(p, a,b,c,d)\n{\n\tp.cmds.push(\"Q\");  p.crds.push(a,b,c,d);\n};\nTypr.U.P.closePath = function(p) {  p.cmds.push(\"Z\");  };\n\n\n\n\nTypr.U._drawCFF = function(cmds, state, font, pdct, p)\n{\n\tvar stack = state.stack;\n\tvar nStems = state.nStems, haveWidth=state.haveWidth, width=state.width, open=state.open;\n\tvar i=0;\n\tvar x=state.x, y=state.y, c1x=0, c1y=0, c2x=0, c2y=0, c3x=0, c3y=0, c4x=0, c4y=0, jpx=0, jpy=0;\n\t\n\tvar o = {val:0,size:0};\n\t//console.log(cmds);\n\twhile(i<cmds.length)\n\t{\n\t\tTypr.CFF.getCharString(cmds, i, o);\n\t\tvar v = o.val;\n\t\ti += o.size;\n\t\t\t\n\t\tif(v==\"o1\" || v==\"o18\")  //  hstem || hstemhm\n\t\t{\n\t\t\tvar hasWidthArg;\n\n\t\t\t// The number of stem operators on the stack is always even.\n\t\t\t// If the value is uneven, that means a width is specified.\n\t\t\thasWidthArg = stack.length % 2 !== 0;\n\t\t\tif (hasWidthArg && !haveWidth) {\n\t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n\t\t\t}\n\n\t\t\tnStems += stack.length >> 1;\n\t\t\tstack.length = 0;\n\t\t\thaveWidth = true;\n\t\t}\n\t\telse if(v==\"o3\" || v==\"o23\")  // vstem || vstemhm\n\t\t{\n\t\t\tvar hasWidthArg;\n\n\t\t\t// The number of stem operators on the stack is always even.\n\t\t\t// If the value is uneven, that means a width is specified.\n\t\t\thasWidthArg = stack.length % 2 !== 0;\n\t\t\tif (hasWidthArg && !haveWidth) {\n\t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n\t\t\t}\n\n\t\t\tnStems += stack.length >> 1;\n\t\t\tstack.length = 0;\n\t\t\thaveWidth = true;\n\t\t}\n\t\telse if(v==\"o4\")\n\t\t{\n\t\t\tif (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + pdct.nominalWidthX;\n                        haveWidth = true;\n                    }\n\t\t\tif(open) { Typr.U.P.closePath(p); }\n\n                    y += stack.pop();\n\t\t\t\t\tTypr.U.P.moveTo(p,x,y);   open=true;\n\t\t}\n\t\telse if(v==\"o5\")\n\t\t{\n\t\t\twhile (stack.length > 0) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        Typr.U.P.lineTo(p, x, y);\n                    }\n\t\t}\n\t\telse if(v==\"o6\" || v==\"o7\")  // hlineto || vlineto\n\t\t{\n\t\t\tvar count = stack.length;\n\t\t\tvar isX = (v == \"o6\");\n\t\t\t\n\t\t\tfor(var j=0; j<count; j++) {\n\t\t\t\tvar sval = stack.shift();\n\t\t\t\t\n\t\t\t\tif(isX) { x += sval; }  else  { y += sval; }\n\t\t\t\tisX = !isX;\n\t\t\t\tTypr.U.P.lineTo(p, x, y);\n\t\t\t}\n\t\t}\n\t\telse if(v==\"o8\" || v==\"o24\")\t// rrcurveto || rcurveline\n\t\t{\n\t\t\tvar count = stack.length;\n\t\t\tvar index = 0;\n\t\t\twhile(index+6 <= count) {\n\t\t\t\tc1x = x + stack.shift();\n\t\t\t\tc1y = y + stack.shift();\n\t\t\t\tc2x = c1x + stack.shift();\n\t\t\t\tc2y = c1y + stack.shift();\n\t\t\t\tx = c2x + stack.shift();\n\t\t\t\ty = c2y + stack.shift();\n\t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n\t\t\t\tindex+=6;\n\t\t\t}\n\t\t\tif(v==\"o24\")\n\t\t\t{\n\t\t\t\tx += stack.shift();\n\t\t\t\ty += stack.shift();\n\t\t\t\tTypr.U.P.lineTo(p, x, y);\n\t\t\t}\n\t\t}\n\t\telse if(v==\"o11\")  { break; }\n\t\telse if(v==\"o1234\" || v==\"o1235\" || v==\"o1236\" || v==\"o1237\")//if((v+\"\").slice(0,3)==\"o12\")\n\t\t{\n\t\t\tif(v==\"o1234\")\n\t\t\t{\n\t\t\t\tc1x = x   + stack.shift();    // dx1\n                c1y = y;                      // dy1\n\t\t\t\tc2x = c1x + stack.shift();    // dx2\n\t\t\t\tc2y = c1y + stack.shift();    // dy2\n\t\t\t\tjpx = c2x + stack.shift();    // dx3\n\t\t\t\tjpy = c2y;                    // dy3\n\t\t\t\tc3x = jpx + stack.shift();    // dx4\n\t\t\t\tc3y = c2y;                    // dy4\n\t\t\t\tc4x = c3x + stack.shift();    // dx5\n\t\t\t\tc4y = y;                      // dy5\n\t\t\t\tx = c4x + stack.shift();      // dx6\n\t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n\t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n\t\t\t\t\n\t\t\t}\n\t\t\tif(v==\"o1235\")\n\t\t\t{\n\t\t\t\tc1x = x   + stack.shift();    // dx1\n\t\t\t\tc1y = y   + stack.shift();    // dy1\n\t\t\t\tc2x = c1x + stack.shift();    // dx2\n\t\t\t\tc2y = c1y + stack.shift();    // dy2\n\t\t\t\tjpx = c2x + stack.shift();    // dx3\n\t\t\t\tjpy = c2y + stack.shift();    // dy3\n\t\t\t\tc3x = jpx + stack.shift();    // dx4\n\t\t\t\tc3y = jpy + stack.shift();    // dy4\n\t\t\t\tc4x = c3x + stack.shift();    // dx5\n\t\t\t\tc4y = c3y + stack.shift();    // dy5\n\t\t\t\tx = c4x + stack.shift();      // dx6\n\t\t\t\ty = c4y + stack.shift();      // dy6\n\t\t\t\tstack.shift();                // flex depth\n\t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n\t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n\t\t\t}\n\t\t\tif(v==\"o1236\")\n\t\t\t{\n\t\t\t\tc1x = x   + stack.shift();    // dx1\n\t\t\t\tc1y = y   + stack.shift();    // dy1\n\t\t\t\tc2x = c1x + stack.shift();    // dx2\n\t\t\t\tc2y = c1y + stack.shift();    // dy2\n\t\t\t\tjpx = c2x + stack.shift();    // dx3\n\t\t\t\tjpy = c2y;                    // dy3\n\t\t\t\tc3x = jpx + stack.shift();    // dx4\n\t\t\t\tc3y = c2y;                    // dy4\n\t\t\t\tc4x = c3x + stack.shift();    // dx5\n\t\t\t\tc4y = c3y + stack.shift();    // dy5\n\t\t\t\tx = c4x + stack.shift();      // dx6\n\t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n\t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n\t\t\t}\n\t\t\tif(v==\"o1237\")\n\t\t\t{\n\t\t\t\tc1x = x   + stack.shift();    // dx1\n\t\t\t\tc1y = y   + stack.shift();    // dy1\n\t\t\t\tc2x = c1x + stack.shift();    // dx2\n\t\t\t\tc2y = c1y + stack.shift();    // dy2\n\t\t\t\tjpx = c2x + stack.shift();    // dx3\n\t\t\t\tjpy = c2y + stack.shift();    // dy3\n\t\t\t\tc3x = jpx + stack.shift();    // dx4\n\t\t\t\tc3y = jpy + stack.shift();    // dy4\n\t\t\t\tc4x = c3x + stack.shift();    // dx5\n\t\t\t\tc4y = c3y + stack.shift();    // dy5\n\t\t\t\tif (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n\t\t\t\t    x = c4x + stack.shift();\n\t\t\t\t} else {\n\t\t\t\t    y = c4y + stack.shift();\n\t\t\t\t}\n\t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n\t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n\t\t\t}\n\t\t}\n\t\telse if(v==\"o14\")\n\t\t{\n\t\t\tif (stack.length > 0 && !haveWidth) {\n                        width = stack.shift() + font.nominalWidthX;\n                        haveWidth = true;\n                    }\n\t\t\tif(stack.length==4) // seac = standard encoding accented character\n\t\t\t{\n\t\t\t\tvar adx = stack.shift();\n\t\t\t\tvar ady = stack.shift();\n\t\t\t\tvar bchar = stack.shift();\n\t\t\t\tvar achar = stack.shift();\n\t\t\t\n\t\t\t\t\n\t\t\t\tvar bind = Typr.CFF.glyphBySE(font, bchar);\n\t\t\t\tvar aind = Typr.CFF.glyphBySE(font, achar);\n\t\t\t\t\n\t\t\t\t//console.log(bchar, bind);\n\t\t\t\t//console.log(achar, aind);\n\t\t\t\t//state.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width;  state.open=open;\n\t\t\t\t\n\t\t\t\tTypr.U._drawCFF(font.CharStrings[bind], state,font,pdct,p);\n\t\t\t\tstate.x = adx; state.y = ady;\n\t\t\t\tTypr.U._drawCFF(font.CharStrings[aind], state,font,pdct,p);\n\t\t\t\t\n\t\t\t\t//x=state.x; y=state.y; nStems=state.nStems; haveWidth=state.haveWidth; width=state.width;  open=state.open;\n\t\t\t}\n\t\t\tif(open) {  Typr.U.P.closePath(p);  open=false;  }\n\t\t}\t\t\n\t\telse if(v==\"o19\" || v==\"o20\") \n\t\t{ \n\t\t\tvar hasWidthArg;\n\n\t\t\t// The number of stem operators on the stack is always even.\n\t\t\t// If the value is uneven, that means a width is specified.\n\t\t\thasWidthArg = stack.length % 2 !== 0;\n\t\t\tif (hasWidthArg && !haveWidth) {\n\t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n\t\t\t}\n\n\t\t\tnStems += stack.length >> 1;\n\t\t\tstack.length = 0;\n\t\t\thaveWidth = true;\n\t\t\t\n\t\t\ti += (nStems + 7) >> 3;\n\t\t}\n\t\t\n\t\telse if(v==\"o21\") {\n\t\t\tif (stack.length > 2 && !haveWidth) {\n                        width = stack.shift() + pdct.nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    x += stack.pop();\n\t\t\t\t\t\n\t\t\t\t\tif(open) { Typr.U.P.closePath(p); }\n                    Typr.U.P.moveTo(p,x,y);   open=true;\n\t\t}\n\t\telse if(v==\"o22\")\n\t\t{\n\t\t\t if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + pdct.nominalWidthX;\n                        haveWidth = true;\n                    }\n\t\t\t\t\t\n                    x += stack.pop();\n\t\t\t\t\t\n\t\t\t\t\tif(open) { Typr.U.P.closePath(p); }\n\t\t\t\t\tTypr.U.P.moveTo(p,x,y);   open=true;                    \n\t\t}\n\t\telse if(v==\"o25\")\n\t\t{\n\t\t\twhile (stack.length > 6) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        Typr.U.P.lineTo(p, x, y);\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n\t\t}\n\t\telse if(v==\"o26\") \n\t\t{\n\t\t\tif (stack.length % 2) {\n                        x += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x;\n                        y = c2y + stack.shift();\n                        Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n                    }\n\n\t\t}\n\t\telse if(v==\"o27\")\n\t\t{\n\t\t\tif (stack.length % 2) {\n                        y += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y;\n                        Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n                    }\n\t\t}\n\t\telse if(v==\"o10\" || v==\"o29\")\t// callsubr || callgsubr\n\t\t{\n\t\t\tvar obj = (v==\"o10\" ? pdct : font);\n\t\t\tif(stack.length==0) { console.log(\"error: empty stack\");  }\n\t\t\telse {\n\t\t\t\tvar ind = stack.pop();\n\t\t\t\tvar subr = obj.Subrs[ ind + obj.Bias ];\n\t\t\t\tstate.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width;  state.open=open;\n\t\t\t\tTypr.U._drawCFF(subr, state,font,pdct,p);\n\t\t\t\tx=state.x; y=state.y; nStems=state.nStems; haveWidth=state.haveWidth; width=state.width;  open=state.open;\n\t\t\t}\n\t\t}\n\t\telse if(v==\"o30\" || v==\"o31\")   // vhcurveto || hvcurveto\n\t\t{\n\t\t\tvar count, count1 = stack.length;\n\t\t\tvar index = 0;\n\t\t\tvar alternate = v == \"o31\";\n\t\t\t\n\t\t\tcount  = count1 & ~2;\n\t\t\tindex += count1 - count;\n\t\t\t\n\t\t\twhile ( index < count ) \n\t\t\t{\n\t\t\t\tif(alternate)\n\t\t\t\t{\n\t\t\t\t\tc1x = x + stack.shift();\n\t\t\t\t\tc1y = y;\n\t\t\t\t\tc2x = c1x + stack.shift();\n\t\t\t\t\tc2y = c1y + stack.shift();\n\t\t\t\t\ty = c2y + stack.shift();\n\t\t\t\t\tif(count-index == 5) {  x = c2x + stack.shift();  index++;  }\n\t\t\t\t\telse { x = c2x; }\n\t\t\t\t\talternate = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tc1x = x;\n\t\t\t\t\tc1y = y + stack.shift();\n\t\t\t\t\tc2x = c1x + stack.shift();\n\t\t\t\t\tc2y = c1y + stack.shift();\n\t\t\t\t\tx = c2x + stack.shift();\n\t\t\t\t\tif(count-index == 5) {  y = c2y + stack.shift();  index++;  }\n\t\t\t\t\telse { y = c2y; }\n\t\t\t\t\talternate = true;\n\t\t\t\t}\n                Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n\t\t\t\tindex += 4;\n\t\t\t}\n\t\t}\n\t\t\n\t\telse if((v+\"\").charAt(0)==\"o\") {   console.log(\"Unknown operation: \"+v, cmds); throw v;  }\n\t\telse { stack.push(v); }\n\t}\n\t//console.log(cmds);\n\tstate.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width; state.open=open;\n};\n\n// End Typr.U.js\n\nreturn Typr\n\n}\n\n// Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with tiny-inflate \n// (https://github.com/foliojs/tiny-inflate) for use in troika-3d-text. \n// Original licenses apply: \n// - tiny-inflate: https://github.com/foliojs/tiny-inflate/blob/master/LICENSE (MIT)\n// - woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)\n\nfunction woff2otfFactory() {\n\n// Begin tinyInflate\nvar tinyInflate = (function() {\n  var module = {};\n  var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) { bits[i] = 0; }\n  for (i = 0; i < 30 - delta; ++i) { bits[i + delta] = i / delta | 0; }\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) { lt.table[i] = 0; }\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) { lt.trans[i] = 256 + i; }\n  for (i = 0; i < 144; ++i) { lt.trans[24 + i] = i; }\n  for (i = 0; i < 8; ++i) { lt.trans[24 + 144 + i] = 280 + i; }\n  for (i = 0; i < 112; ++i) { lt.trans[24 + 144 + 8 + i] = 144 + i; }\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) { dt.table[i] = 0; }\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) { dt.trans[i] = i; }\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) { t.table[i] = 0; }\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) { t.table[lengths[off + i]]++; }\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) { t.trans[offs[lengths[off + i]]++] = i; }\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    { return base; }\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) { lengths[i] = 0; }\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    { return TINF_DATA_ERROR; }\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    { d.dest[d.destLen++] = d.source[d.sourceIndex++]; }\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      { throw new Error('Data error'); }\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      { return d.dest.slice(0, d.destLen); }\n    else\n      { return d.dest.subarray(0, d.destLen); }\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n\n  return module.exports\n})();\n// End tinyInflate\n\n// Begin woff2otf.js\n/*\n Copyright 2012, Steffen Hanikel (https://github.com/hanikesn)\n Modified by Artemy Tregubenko, 2014 (https://github.com/arty-name/woff2otf)\n Modified by Jason Johnston, 2019 (pako --> tiny-inflate)\n \n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n A tool to convert a WOFF back to a TTF/OTF font file, in pure Javascript\n*/\n\nfunction convert_streams(bufferIn, tinyInflate) {\n    var dataViewIn = new DataView(bufferIn);\n    var offsetIn = 0;\n\n    function read2() {\n        var uint16 = dataViewIn.getUint16(offsetIn);\n        offsetIn += 2;\n        return uint16;\n    }\n\n    function read4() {\n        var uint32 = dataViewIn.getUint32(offsetIn);\n        offsetIn += 4;\n        return uint32;\n    }\n\n    function write2(uint16) {\n        dataViewOut.setUint16(offsetOut, uint16);\n        offsetOut += 2;\n    }\n\n    function write4(uint32) {\n        dataViewOut.setUint32(offsetOut, uint32);\n        offsetOut += 4;\n    }\n\n    var WOFFHeader = {\n        signature: read4(),\n        flavor: read4(),\n        length: read4(),\n        numTables: read2(),\n        reserved: read2(),\n        totalSfntSize: read4(),\n        majorVersion: read2(),\n        minorVersion: read2(),\n        metaOffset: read4(),\n        metaLength: read4(),\n        metaOrigLength: read4(),\n        privOffset: read4(),\n        privLength: read4()\n    };\n\n    var entrySelector = 0;\n    while (Math.pow(2, entrySelector) <= WOFFHeader.numTables) {\n        entrySelector++;\n    }\n    entrySelector--;\n\n    var searchRange = Math.pow(2, entrySelector) * 16;\n    var rangeShift = WOFFHeader.numTables * 16 - searchRange;\n\n    var offset = 4 + 2 + 2 + 2 + 2;\n    var TableDirectoryEntries = [];\n    for (var i = 0; i < WOFFHeader.numTables; i++) {\n        TableDirectoryEntries.push({\n            tag: read4(),\n            offset: read4(),\n            compLength: read4(),\n            origLength: read4(),\n            origChecksum: read4()\n        });\n        offset += 4 * 4;\n    }\n\n    var arrayOut = new Uint8Array(\n        4 + 2 + 2 + 2 + 2 +\n        TableDirectoryEntries.length * (4 + 4 + 4 + 4) +\n        TableDirectoryEntries.reduce(function(acc, entry) { return acc + entry.origLength + 4; }, 0)\n    );\n    var bufferOut = arrayOut.buffer;\n    var dataViewOut = new DataView(bufferOut);\n    var offsetOut = 0;\n\n    write4(WOFFHeader.flavor);\n    write2(WOFFHeader.numTables);\n    write2(searchRange);\n    write2(entrySelector);\n    write2(rangeShift);\n\n    TableDirectoryEntries.forEach(function(TableDirectoryEntry) {\n        write4(TableDirectoryEntry.tag);\n        write4(TableDirectoryEntry.origChecksum);\n        write4(offset);\n        write4(TableDirectoryEntry.origLength);\n\n        TableDirectoryEntry.outOffset = offset;\n        offset += TableDirectoryEntry.origLength;\n        if ((offset % 4) != 0) {\n            offset += 4 - (offset % 4);\n        }\n    });\n\n    var size;\n\n    TableDirectoryEntries.forEach(function(TableDirectoryEntry) {\n        var compressedData = bufferIn.slice(\n            TableDirectoryEntry.offset,\n            TableDirectoryEntry.offset + TableDirectoryEntry.compLength\n        );\n\n        if (TableDirectoryEntry.compLength != TableDirectoryEntry.origLength) {\n            var uncompressedData = new Uint8Array(TableDirectoryEntry.origLength);\n            tinyInflate(\n              new Uint8Array(compressedData, 2), //skip deflate header\n              uncompressedData\n            );\n        } else {\n            uncompressedData = new Uint8Array(compressedData);\n        }\n\n        arrayOut.set(uncompressedData, TableDirectoryEntry.outOffset);\n        offset = TableDirectoryEntry.outOffset + TableDirectoryEntry.origLength;\n\n        var padding = 0;\n        if ((offset % 4) != 0) {\n            padding = 4 - (offset % 4);\n        }\n        arrayOut.set(\n            new Uint8Array(padding).buffer,\n            TableDirectoryEntry.outOffset + TableDirectoryEntry.origLength\n        );\n\n        size = offset + padding;\n    });\n\n    return bufferOut.slice(0, size);\n}\n\n// End woff2otf.js\n\nreturn function(buffer) {\n  return convert_streams(buffer, tinyInflate)\n}\n\n}\n\n/**\n * An adapter that allows Typr.js to be used as if it were (a subset of) the OpenType.js API.\n * Also adds support for WOFF files (not WOFF2).\n */\n\nfunction parserFactory(Typr, woff2otf) {\n  var cmdArgLengths = {\n    M: 2,\n    L: 2,\n    Q: 4,\n    C: 6,\n    Z: 0\n  };\n\n  function wrapFontObj(ref) {\n    var typrFont = ref[0];\n\n    var glyphMap = Object.create(null);\n\n    var fontObj = {\n      unitsPerEm: typrFont.head.unitsPerEm,\n      ascender: typrFont.hhea.ascender,\n      descender: typrFont.hhea.descender,\n      forEachGlyph: function forEachGlyph(text, fontSize, letterSpacing, callback) {\n        var glyphX = 0;\n        var fontScale = 1 / fontObj.unitsPerEm * fontSize;\n\n        var glyphIndices = Typr.U.stringToGlyphs(typrFont, text);\n        var charIndex = 0;\n        glyphIndices.forEach(function (glyphIndex) {\n          // Typr returns a glyph index per string codepoint, with -1s in place of those that\n          // were omitted due to ligature substitution. So we can track original index in the\n          // string via simple increment, and skip everything else when seeing a -1.\n          if (glyphIndex !== -1) {\n            var glyphObj = glyphMap[glyphIndex];\n            if (!glyphObj) {\n              // !!! NOTE: Typr doesn't expose a public accessor for the glyph data, so this just\n              // copies how it parses that data in Typr.U._drawGlyf -- this may be fragile.\n              var typrGlyph = Typr.glyf._parseGlyf(typrFont, glyphIndex) || {xMin: 0, xMax: 0, yMin: 0, yMax: 0};\n              var ref = Typr.U.glyphToPath(typrFont, glyphIndex);\n              var cmds = ref.cmds;\n              var crds = ref.crds;\n\n              glyphObj = glyphMap[glyphIndex] = {\n                index: glyphIndex,\n                advanceWidth: typrFont.hmtx.aWidth[glyphIndex],\n                xMin: typrGlyph.xMin,\n                yMin: typrGlyph.yMin,\n                xMax: typrGlyph.xMax,\n                yMax: typrGlyph.yMax,\n                pathCommandCount: cmds.length,\n                forEachPathCommand: function forEachPathCommand(callback) {\n                  var argsIndex = 0;\n                  var argsArray = [];\n                  for (var i = 0, len = cmds.length; i < len; i++) {\n                    var numArgs = cmdArgLengths[cmds[i]];\n                    argsArray.length = 1 + numArgs;\n                    argsArray[0] = cmds[i];\n                    for (var j = 1; j <= numArgs; j++) {\n                      argsArray[j] = crds[argsIndex++];\n                    }\n                    callback.apply(null, argsArray);\n                  }\n                }\n              };\n            }\n\n            callback.call(null, glyphObj, glyphX, charIndex);\n\n            if (glyphObj.advanceWidth) {\n              glyphX += glyphObj.advanceWidth * fontScale;\n            }\n            if (letterSpacing) {\n              glyphX += letterSpacing * fontSize;\n            }\n          }\n          charIndex += (text.codePointAt(charIndex) > 0xffff ? 2 : 1);\n        });\n        return glyphX\n      }\n    };\n\n    return fontObj\n  }\n\n  return function parse(buffer) {\n    // Look to see if we have a WOFF file and convert it if so:\n    var peek = new Uint8Array(buffer, 0, 4);\n    var tag = Typr._bin.readASCII(peek, 0, 4);\n    if (tag === 'wOFF') {\n      buffer = woff2otf(buffer);\n    } else if (tag === 'wOF2') {\n      throw new Error('woff2 fonts not supported')\n    }\n    return wrapFontObj(Typr.parse(buffer))\n  }\n}\n\n\nvar workerModule = defineWorkerModule({\n  dependencies: [typrFactory, woff2otfFactory, parserFactory],\n  init: function init(typrFactory, woff2otfFactory, parserFactory) {\n    var Typr = typrFactory();\n    var woff2otf = woff2otfFactory();\n    return parserFactory(Typr, woff2otf)\n  }\n});\n\n//import fontParser from './FontParser_OpenType.js'\n\n\nvar CONFIG = {\n  defaultFontURL: 'https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff', //Roboto Regular\n  sdfGlyphSize: 64,\n  textureWidth: 2048\n};\nvar linkEl = document.createElement('a'); //for resolving relative URLs to absolute\n\n/**\n * Customizes the text builder configuration. This must be called prior to the first font processing\n * request, and applies to all fonts.\n *\n * @param {String} config.defaultFontURL - The URL of the default font to use for text processing\n *                 requests, in case none is specified or the specifiede font fails to load or parse.\n *                 Defaults to \"Roboto Regular\" from Google Fonts.\n * @param {Number} config.sdfGlyphSize - The size of each glyph's SDF (signed distance field) texture\n *                 that is used for rendering. Must be a power-of-two number, and applies to all fonts.\n *                 Larger sizes can improve the quality of glyph rendering by increasing the sharpness\n *                 of corners and preventing loss of very thin lines, at the expense of memory. Defaults\n *                 to 64 which is generally a good balance of size and quality.\n * @param {Number} config.textureWidth - The width of the SDF texture; must be a power of 2. Defaults to\n *                 2048 which is a safe maximum texture dimension according to the stats at\n *                 https://webglstats.com/webgl/parameter/MAX_TEXTURE_SIZE and should allow for a\n *                 reasonably large number of glyphs (default glyph size of 64 and safe texture size of\n *                 2048^2 allows for 1024 glyphs.) This can be increased if you need to increase the\n *                 glyph size and/or have an extraordinary number of glyphs.\n */\nfunction configureTextBuilder(config) {\n  {\n    assign(CONFIG, config);\n  }\n}\n\n\n/**\n * The radial distance from glyph edges over which the SDF alpha will be calculated; if the alpha\n * at distance:0 is 0.5, then the alpha at this distance will be zero. This is defined as a percentage\n * of each glyph's maximum dimension in font space units so that it maps to the same minimum number of\n * SDF texels regardless of the glyph's size. A larger value provides greater alpha gradient resolution\n * and improves readability/antialiasing quality at small display sizes, but also decreases the number\n * of texels available for encoding path details.\n */\nvar SDF_DISTANCE_PERCENT = 1 / 8;\n\n\n/**\n * Repository for all font SDF atlas textures\n *\n *   {\n *     [font]: {\n *       sdfTexture: DataTexture\n *     }\n *   }\n */\nvar atlases = Object.create(null);\n\n/**\n * @typedef {object} TroikaTextRenderInfo - Format of the result from `getTextRenderInfo`.\n * @property {DataTexture} sdfTexture\n * @property {number} sdfGlyphSize\n * @property {number} sdfMinDistancePercent\n * @property {Float32Array} glyphBounds\n * @property {Float32Array} glyphAtlasIndices\n * @property {Float32Array} [caretPositions]\n * @property {number} [caretHeight]\n * @property {Array<number>} totalBounds\n * @property {Array<number>} totalBlockSize\n * @frozen\n */\n\n/**\n * @callback getTextRenderInfo~callback\n * @param {TroikaTextRenderInfo} textRenderInfo\n */\n\n/**\n * Main entry point for requesting the data needed to render a text string with given font parameters.\n * This is an asynchronous call, performing most of the logic in a web worker thread.\n * @param {object} args\n * @param {getTextRenderInfo~callback} callback\n */\nfunction getTextRenderInfo(args, callback) {\n  args = assign({}, args);\n\n  // Apply default font here to avoid a 'null' atlas, and convert relative\n  // URLs to absolute so they can be resolved in the worker\n  linkEl.href = args.font || CONFIG.defaultFontURL;\n  args.font = linkEl.href;\n\n  // Normalize text to a string\n  args.text = '' + args.text;\n\n  // Init the atlas for this font if needed\n  var sdfGlyphSize = CONFIG.sdfGlyphSize;\n  var textureWidth = CONFIG.textureWidth;\n  var atlas = atlases[args.font];\n  if (!atlas) {\n    atlas = atlases[args.font] = {\n      sdfTexture: new DataTexture(\n        new Uint8Array(sdfGlyphSize * textureWidth),\n        textureWidth,\n        sdfGlyphSize,\n        LuminanceFormat,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        LinearFilter,\n        LinearFilter\n      )\n    };\n    atlas.sdfTexture.font = args.font;\n  }\n\n  // Issue request to the FontProcessor in the worker\n  processInWorker(args).then(function (result) {\n    // If the response has newGlyphs, copy them into the atlas texture at the specified indices\n    if (result.newGlyphSDFs) {\n      result.newGlyphSDFs.forEach(function (ref) {\n        var textureData = ref.textureData;\n        var atlasIndex = ref.atlasIndex;\n\n        var texImg = atlas.sdfTexture.image;\n\n        // Grow the texture by power of 2 if needed\n        while (texImg.data.length < (atlasIndex + 1) * sdfGlyphSize * sdfGlyphSize) {\n          var biggerArray = new Uint8Array(texImg.data.length * 2);\n          biggerArray.set(texImg.data);\n          texImg.data = biggerArray;\n          texImg.height *= 2;\n        }\n\n        // Insert the new glyph's data into the full texture image at the correct offsets\n        var cols = texImg.width / sdfGlyphSize;\n        for (var y = 0; y < sdfGlyphSize; y++) {\n          var srcStartIndex = y * sdfGlyphSize;\n          var tgtStartIndex = texImg.width * sdfGlyphSize * Math.floor(atlasIndex / cols) //full rows\n            + (atlasIndex % cols) * sdfGlyphSize //partial row\n            + (y * texImg.width); //row within glyph\n          for (var x = 0; x < sdfGlyphSize; x++) {\n            texImg.data[tgtStartIndex + x] = textureData[srcStartIndex + x];\n          }\n        }\n      });\n      atlas.sdfTexture.needsUpdate = true;\n    }\n\n    // Invoke callback with the text layout arrays and updated texture\n    callback(Object.freeze({\n      sdfTexture: atlas.sdfTexture,\n      sdfGlyphSize: sdfGlyphSize,\n      sdfMinDistancePercent: SDF_DISTANCE_PERCENT,\n      glyphBounds: result.glyphBounds,\n      glyphAtlasIndices: result.glyphAtlasIndices,\n      caretPositions: result.caretPositions,\n      caretHeight: result.caretHeight,\n      totalBounds: result.totalBounds,\n      totalBlockSize: result.totalBlockSize\n    }));\n  });\n}\n\n// Local assign impl so we don't have to import troika-core\nfunction assign(toObj, fromObj) {\n  for (var key in fromObj) {\n    if (fromObj.hasOwnProperty(key)) {\n      toObj[key] = fromObj[key];\n    }\n  }\n  return toObj\n}\n\n\nvar fontProcessorWorkerModule = defineWorkerModule({\n  dependencies: [\n    CONFIG,\n    SDF_DISTANCE_PERCENT,\n    workerModule,\n    createSDFGenerator,\n    createFontProcessor\n  ],\n  init: function init(config, sdfDistancePercent, fontParser, createSDFGenerator, createFontProcessor) {\n    var sdfGenerator = createSDFGenerator({\n      sdfTextureSize: config.sdfGlyphSize,\n      sdfDistancePercent: sdfDistancePercent\n    });\n    return createFontProcessor(fontParser, sdfGenerator, {\n      defaultFontUrl: config.defaultFontURL\n    })\n  }\n});\n\nvar processInWorker = defineWorkerModule({\n  dependencies: [fontProcessorWorkerModule, ThenableWorkerModule],\n  init: function init(fontProcessor, Thenable) {\n    return function(args) {\n      var thenable = new Thenable();\n      fontProcessor.process(args, thenable.resolve);\n      return thenable\n    }\n  },\n  getTransferables: function getTransferables(result) {\n    // Mark array buffers as transferable to avoid cloning during postMessage\n    var transferables = [\n      result.glyphBounds.buffer,\n      result.glyphAtlasIndices.buffer\n    ];\n    if (result.caretPositions) {\n      transferables.push(result.caretPositions.buffer);\n    }\n    if (result.newGlyphSDFs) {\n      result.newGlyphSDFs.forEach(function (d) {\n        transferables.push(d.textureData.buffer);\n      });\n    }\n    return transferables\n  }\n});\n\n/*\nwindow._dumpSDFs = function() {\n  Object.values(atlases).forEach(atlas => {\n    const imgData = atlas.sdfTexture.image.data\n    const canvas = document.createElement('canvas')\n    const {width, height} = atlas.sdfTexture.image\n    canvas.width = width\n    canvas.height = height\n    const ctx = canvas.getContext('2d')\n    ctx.fillStyle = '#fff'\n    ctx.fillRect(0, 0, width, height)\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        ctx.fillStyle = `rgba(0,0,0,${imgData[y * width + x]/255})`\n        ctx.fillRect(x, y, 1, 1)\n      }\n    }\n    const img = new Image()\n    img.src = canvas.toDataURL()\n    document.body.appendChild(img)\n    console.log(img)\n  })\n}\n*/\n\nvar templateGeometry = new PlaneBufferGeometry(1, 1).translate(0.5, 0.5, 0);\nvar tempVec3 = new Vector3();\n\nvar glyphBoundsAttrName = 'aTroikaGlyphBounds';\nvar glyphIndexAttrName = 'aTroikaGlyphIndex';\n\n\n\n/**\n@class GlyphsGeometry\n\nA specialized Geometry for rendering a set of text glyphs. Uses InstancedBufferGeometry to\nrender the glyphs using GPU instancing of a single quad, rather than constructing a whole\ngeometry with vertices, for much smaller attribute arraybuffers according to this math:\n\n  Where N = number of glyphs...\n\n  Instanced:\n  - position: 4 * 3\n  - index: 2 * 3\n  - normal: 4 * 3\n  - uv: 4 * 2\n  - glyph x/y bounds: N * 4\n  - glyph indices: N * 1\n  = 5N + 38\n\n  Non-instanced:\n  - position: N * 4 * 3\n  - index: N * 2 * 3\n  - normal: N * 4 * 3\n  - uv: N * 4 * 2\n  - glyph indices: N * 1\n  = 39N\n\nA downside of this is the rare-but-possible lack of the instanced arrays extension,\nwhich we could potentially work around with a fallback non-instanced implementation.\n\n*/\nvar GlyphsGeometry = /*@__PURE__*/(function (InstancedBufferGeometry) {\n  function GlyphsGeometry() {\n    InstancedBufferGeometry.call(this);\n\n    // Base per-instance attributes\n    this.copy(templateGeometry);\n\n    // Preallocate zero-radius bounding sphere\n    this.boundingSphere = new Sphere();\n  }\n\n  if ( InstancedBufferGeometry ) GlyphsGeometry.__proto__ = InstancedBufferGeometry;\n  GlyphsGeometry.prototype = Object.create( InstancedBufferGeometry && InstancedBufferGeometry.prototype );\n  GlyphsGeometry.prototype.constructor = GlyphsGeometry;\n\n  GlyphsGeometry.prototype.computeBoundingSphere = function computeBoundingSphere () {\n    // No-op; we'll sync the boundingSphere proactively in `updateGlyphs`.\n  };\n\n  /**\n   * Update the geometry for a new set of glyphs.\n   * @param {Float32Array} glyphBounds - An array holding the planar bounds for all glyphs\n   *        to be rendered, 4 entries for each glyph: x1,x2,y1,y1\n   * @param {Float32Array} glyphAtlasIndices - An array holding the index of each glyph within\n   *        the SDF atlas texture.\n   * @param {Array} totalBounds - An array holding the [minX, minY, maxX, maxY] across all glyphs\n   */\n  GlyphsGeometry.prototype.updateGlyphs = function updateGlyphs (glyphBounds, glyphAtlasIndices, totalBounds) {\n    // Update the instance attributes\n    updateBufferAttr(this, glyphBoundsAttrName, glyphBounds, 4);\n    updateBufferAttr(this, glyphIndexAttrName, glyphAtlasIndices, 1);\n    this.maxInstancedCount = glyphAtlasIndices.length;\n\n    // Update the boundingSphere based on the total bounds\n    var sphere = this.boundingSphere;\n    sphere.center.set(\n      (totalBounds[0] + totalBounds[2]) / 2,\n      (totalBounds[1] + totalBounds[3]) / 2,\n      0\n    );\n    sphere.radius = sphere.center.distanceTo(tempVec3.set(totalBounds[0], totalBounds[1], 0));\n  };\n\n  return GlyphsGeometry;\n}(InstancedBufferGeometry));\n\n// Compat for pre r109:\nif (!GlyphsGeometry.prototype.setAttribute) {\n  GlyphsGeometry.prototype.setAttribute = function(name, attribute) {\n    this.attributes[ name ] = attribute;\n    return this\n  };\n}\n\n\nfunction updateBufferAttr(geom, attrName, newArray, itemSize) {\n  var attr = geom.getAttribute(attrName);\n  // If length isn't changing, just update the attribute's array data\n  if (attr && attr.array.length === newArray.length) {\n    attr.array.set(newArray);\n    attr.needsUpdate = true;\n  } else {\n    geom.setAttribute(attrName, new InstancedBufferAttribute(newArray, itemSize));\n  }\n}\n\n// language=GLSL\nvar VERTEX_DEFS = \"\\nuniform vec2 uTroikaSDFTextureSize;\\nuniform float uTroikaSDFGlyphSize;\\nuniform vec4 uTroikaTotalBounds;\\nattribute vec4 aTroikaGlyphBounds;\\nattribute float aTroikaGlyphIndex;\\nvarying vec2 vTroikaSDFTextureUV;\\nvarying vec2 vTroikaGlyphUV;\\nvarying vec3 vTroikaLocalPos;\\n\";\n\n// language=GLSL prefix=\"void main() {\" suffix=\"}\"\nvar VERTEX_TRANSFORM = \"\\nvTroikaGlyphUV = vec2(position);\\n\\nvec2 colsAndRows = uTroikaSDFTextureSize / uTroikaSDFGlyphSize;\\nvTroikaSDFTextureUV = vec2(\\n  mod(aTroikaGlyphIndex, colsAndRows.x) + position.x,\\n  floor(aTroikaGlyphIndex / colsAndRows.x) + position.y\\n) * uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\\n\\nposition = vec3(\\n  mix(aTroikaGlyphBounds.x, aTroikaGlyphBounds.z, position.x),\\n  mix(aTroikaGlyphBounds.y, aTroikaGlyphBounds.w, position.y),\\n  position.z\\n);\\nvTroikaLocalPos = vec3(position);\\n\\nuv = vec2(\\n  (position.x - uTroikaTotalBounds.x) / (uTroikaTotalBounds.z - uTroikaTotalBounds.x),\\n  (position.y - uTroikaTotalBounds.y) / (uTroikaTotalBounds.w - uTroikaTotalBounds.y)\\n);\\n\";\n\n// language=GLSL\nvar FRAGMENT_DEFS = \"\\nuniform sampler2D uTroikaSDFTexture;\\nuniform float uTroikaSDFMinDistancePct;\\nuniform bool uTroikaSDFDebug;\\nuniform vec4 uTroikaClipRect;\\nvarying vec2 vTroikaSDFTextureUV;\\nvarying vec2 vTroikaGlyphUV;\\nvarying vec3 vTroikaLocalPos;\\n\\nfloat troikaGetClipAlpha() {\\n  vec4 clip = uTroikaClipRect;\\n  vec3 pos = vTroikaLocalPos;\\n  float dClip = min(\\n    min(pos.x - min(clip.x, clip.z), max(clip.x, clip.z) - pos.x),\\n    min(pos.y - min(clip.y, clip.w), max(clip.y, clip.w) - pos.y)\\n  );\\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\\n  float aa = length(fwidth(pos)) * 0.5;\\n  return smoothstep(-aa, aa, dClip);\\n  #else\\n  return step(0.0, dClip);\\n  #endif\\n}\\n\\nfloat troikaGetTextAlpha() {\\n  float troikaSDFValue = texture2D(uTroikaSDFTexture, vTroikaSDFTextureUV).r;\\n  \\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\\n  float alpha = step(0.5, troikaSDFValue);\\n  #else\\n  \" + ('') + \"\\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\\n  float aaDist = min(\\n    0.5,\\n    0.5 * min(\\n      fwidth(vTroikaGlyphUV.x),\\n      fwidth(vTroikaGlyphUV.y)\\n    )\\n  ) / uTroikaSDFMinDistancePct;\\n  #else\\n  float aaDist = 0.01;\\n  #endif\\n  \\n  float alpha = uTroikaSDFDebug ? troikaSDFValue : smoothstep(\\n    0.5 - aaDist,\\n    0.5 + aaDist,\\n    troikaSDFValue\\n  );\\n  #endif\\n  \\n  return min(alpha, troikaGetClipAlpha());\\n}\\n\";\n\n// language=GLSL prefix=\"void main() {\" suffix=\"}\"\nvar FRAGMENT_TRANSFORM = \"\\nfloat troikaAlphaMult = troikaGetTextAlpha();\\nif (troikaAlphaMult == 0.0) {\\n  discard;\\n} else {\\n  gl_FragColor.a *= troikaAlphaMult;\\n}\\n\";\n\n\n/**\n * Create a material for rendering text, derived from a baseMaterial\n */\nfunction createTextDerivedMaterial(baseMaterial) {\n  var textMaterial = createDerivedMaterial(baseMaterial, {\n    extensions: {derivatives: true},\n    uniforms: {\n      uTroikaSDFTexture: {value: null},\n      uTroikaSDFTextureSize: {value: new Vector2()},\n      uTroikaSDFGlyphSize: {value: 0},\n      uTroikaSDFMinDistancePct: {value: 0},\n      uTroikaTotalBounds: {value: new Vector4()},\n      uTroikaClipRect: {value: new Vector4()},\n      uTroikaSDFDebug: {value: false}\n    },\n    vertexDefs: VERTEX_DEFS,\n    vertexTransform: VERTEX_TRANSFORM,\n    fragmentDefs: FRAGMENT_DEFS,\n    fragmentColorTransform: FRAGMENT_TRANSFORM\n  });\n\n  // Force transparency - TODO is this reasonable?\n  textMaterial.transparent = true;\n\n  // WebGLShadowMap reverses the side of the shadow material by default, which fails\n  // for planes, so here we force the `shadowSide` to always match the main side.\n  Object.defineProperty(textMaterial, 'shadowSide', {\n    get: function get() {\n      return this.side\n    }\n  });\n\n  return textMaterial\n}\n\nvar defaultMaterial = new MeshBasicMaterial({\n  color: 0xffffff,\n  side: DoubleSide,\n  transparent: true\n});\n\nvar tempMat4 = new Matrix4();\n\nvar raycastMesh = new Mesh(\n  new PlaneBufferGeometry(1, 1).translate(0.5, 0.5, 0),\n  defaultMaterial\n);\n\n\n\n/**\n * @class TextMesh\n *\n * A ThreeJS Mesh that renders a string of text on a plane in 3D space using signed distance\n * fields (SDF).\n */\nvar TextMesh = /*@__PURE__*/(function (Mesh) {\n  function TextMesh(material) {\n    var geometry = new GlyphsGeometry();\n    Mesh.call(this, geometry, null);\n\n    // === Text layout properties: === //\n\n    /**\n     * @member {string} text\n     * The string of text to be rendered.\n     */\n    this.text = '';\n\n    /**\n     * @member {Array<number>} anchor\n     * Defines where in the text block should correspond to the mesh's local position, as a set\n     * of horizontal and vertical percentages from 0 to 1. A value of `[0, 0]` (the default)\n     * anchors at the top-left, `[1, 1]` at the bottom-right, and `[0.5, 0.5]` centers the\n     * block at the mesh's position.\n     */\n    this.anchor = null;\n\n    /**\n     * @member {string} font\n     * URL of a custom font to be used. Font files can be any of the formats supported by\n     * OpenType (see https://github.com/opentypejs/opentype.js).\n     * Defaults to the Roboto font loaded from Google Fonts.\n     */\n    this.font = null; //will use default from TextBuilder\n\n    /**\n     * @member {number} fontSize\n     * The size at which to render the font in local units; corresponds to the em-box height\n     * of the chosen `font`.\n     */\n    this.fontSize = 0.1;\n\n    /**\n     * @member {number} letterSpacing\n     * Sets a uniform adjustment to spacing between letters after kerning is applied. Positive\n     * numbers increase spacing and negative numbers decrease it.\n     */\n    this.letterSpacing = 0;\n\n    /**\n     * @member {number|string} lineHeight\n     * Sets the height of each line of text, as a multiple of the `fontSize`. Defaults to 'normal'\n     * which chooses a reasonable height based on the chosen font's ascender/descender metrics.\n     */\n    this.lineHeight = 'normal';\n\n    /**\n     * @member {number} maxWidth\n     * The maximum width of the text block, above which text may start wrapping according to the\n     * `whiteSpace` and `overflowWrap` properties.\n     */\n    this.maxWidth = Infinity;\n\n    /**\n     * @member {string} overflowWrap\n     * Defines how text wraps if the `whiteSpace` property is `normal`. Can be either `'normal'`\n     * to break at whitespace characters, or `'break-word'` to allow breaking within words.\n     * Defaults to `'normal'`.\n     */\n    this.overflowWrap = 'normal';\n\n    /**\n     * @member {string} textAlign\n     * The horizontal alignment of each line of text within the overall text bounding box.\n     */\n    this.textAlign = 'left';\n\n    /**\n     * @member {string} whiteSpace\n     * Defines whether text should wrap when a line reaches the `maxWidth`. Can\n     * be either `'normal'` (the default), to allow wrapping according to the `overflowWrap` property,\n     * or `'nowrap'` to prevent wrapping. Note that `'normal'` here honors newline characters to\n     * manually break lines, making it behave more like `'pre-wrap'` does in CSS.\n     */\n    this.whiteSpace = 'normal';\n\n\n    // === Presentation properties: === //\n\n    /**\n     * @member {THREE.Material} material\n     * Defines a _base_ material to be used when rendering the text. This material will be\n     * automatically replaced with a material derived from it, that adds shader code to\n     * decrease the alpha for each fragment (pixel) outside the text glyphs, with antialiasing.\n     * By default it will derive from a simple white MeshBasicMaterial, but you can use any\n     * of the other mesh materials to gain other features like lighting, texture maps, etc.\n     *\n     * Also see the `color` shortcut property.\n     */\n    this.material = null;\n\n    /**\n     * @member {string|number|THREE.Color} color\n     * This is a shortcut for setting the `color` of the text's material. You can use this\n     * if you don't want to specify a whole custom `material`.\n     */\n    this.color = null;\n\n    /**\n     * @member {number} depthOffset\n     * This is a shortcut for setting the material's `polygonOffset` and related properties,\n     * which can be useful in preventing z-fighting when this text is laid on top of another\n     * plane in the scene. Positive numbers are further from the camera, negatives closer.\n     */\n    this.depthOffset = 0;\n\n    /**\n     * @member {Array<number>} clipRect\n     * If specified, defines a `[minX, minY, maxX, maxY]` of a rectangle outside of which all\n     * pixels will be discarded. This can be used for example to clip overflowing text when\n     * `whiteSpace='nowrap'`.\n     */\n    this.clipRect = null;\n\n    this.debugSDF = false;\n  }\n\n  if ( Mesh ) TextMesh.__proto__ = Mesh;\n  TextMesh.prototype = Object.create( Mesh && Mesh.prototype );\n  TextMesh.prototype.constructor = TextMesh;\n\n  var prototypeAccessors = { textRenderInfo: { configurable: true },material: { configurable: true },customDepthMaterial: { configurable: true },customDistanceMaterial: { configurable: true } };\n\n  /**\n   * Updates the text rendering according to the current text-related configuration properties.\n   * This is an async process, so you can pass in a callback function to be executed when it\n   * finishes.\n   * @param {function} [callback]\n   */\n  TextMesh.prototype.sync = function sync (callback) {\n    var this$1 = this;\n\n    if (this._needsSync) {\n      this._needsSync = false;\n\n      // If there's another sync still in progress, queue\n      if (this._isSyncing) {\n        (this._queuedSyncs || (this._queuedSyncs = [])).push(callback);\n      } else {\n        this._isSyncing = true;\n\n        getTextRenderInfo({\n          text: this.text,\n          font: this.font,\n          fontSize: this.fontSize,\n          letterSpacing: this.letterSpacing,\n          lineHeight: this.lineHeight,\n          maxWidth: this.maxWidth,\n          textAlign: this.textAlign,\n          whiteSpace: this.whiteSpace,\n          overflowWrap: this.overflowWrap,\n          anchor: this.anchor,\n          includeCaretPositions: true //TODO parameterize\n        }, function (textRenderInfo) {\n          this$1._isSyncing = false;\n\n          // Save result for later use in onBeforeRender\n          this$1._textRenderInfo = textRenderInfo;\n\n          // Update the geometry attributes\n          this$1.geometry.updateGlyphs(textRenderInfo.glyphBounds, textRenderInfo.glyphAtlasIndices, textRenderInfo.totalBounds);\n\n          // If we had extra sync requests queued up, kick it off\n          var queued = this$1._queuedSyncs;\n          if (queued) {\n            this$1._queuedSyncs = null;\n            this$1._needsSync = true;\n            this$1.sync(function () {\n              queued.forEach(function (fn) { return fn && fn(); });\n            });\n          }\n\n          if (callback) {\n            callback();\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * Initiate a sync if needed - note it won't complete until next frame at the\n   * earliest so if possible it's a good idea to call sync() manually as soon as\n   * all the properties have been set.\n   * @override\n   */\n  TextMesh.prototype.onBeforeRender = function onBeforeRender () {\n    this.sync();\n    this._prepareMaterial();\n  };\n\n  /**\n   * Shortcut to dispose the geometry specific to this instance.\n   * Note: we don't also dispose the derived material here because if anything else is\n   * sharing the same base material it will result in a pause next frame as the program\n   * is recompiled. Instead users can dispose the base material manually, like normal,\n   * and we'll also dispose the derived material at that time.\n   */\n  TextMesh.prototype.dispose = function dispose () {\n    this.geometry.dispose();\n  };\n\n  /**\n   * @property {TroikaTextRenderInfo|null} textRenderInfo\n   * @readonly\n   * The current processed rendering data for this TextMesh, returned by the TextBuilder after\n   * a `sync()` call. This will be `null` initially, and may be stale for a short period until\n   * the asynchrous `sync()` process completes.\n   */\n  prototypeAccessors.textRenderInfo.get = function () {\n    return this._textRenderInfo || null\n  };\n\n  // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n  // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n  prototypeAccessors.material.get = function () {\n    var derivedMaterial = this._derivedMaterial;\n    var baseMaterial = this._baseMaterial || defaultMaterial;\n    if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n      if (derivedMaterial) {\n        derivedMaterial.dispose();\n      }\n      derivedMaterial = this._derivedMaterial = createTextDerivedMaterial(baseMaterial);\n      // dispose the derived material when its base material is disposed:\n      baseMaterial.addEventListener('dispose', function onDispose() {\n        baseMaterial.removeEventListener('dispose', onDispose);\n        derivedMaterial.dispose();\n      });\n    }\n    return derivedMaterial\n  };\n  prototypeAccessors.material.set = function (baseMaterial) {\n    this._baseMaterial = baseMaterial;\n  };\n\n  // Create and update material for shadows upon request:\n  prototypeAccessors.customDepthMaterial.get = function () {\n    return this._updateLayoutUniforms(this.material.getDepthMaterial())\n  };\n  prototypeAccessors.customDistanceMaterial.get = function () {\n    return this._updateLayoutUniforms(this.material.getDistanceMaterial())\n  };\n\n  TextMesh.prototype._prepareMaterial = function _prepareMaterial () {\n    var material = this._derivedMaterial;\n    this._updateLayoutUniforms(material);\n\n    // presentation uniforms:\n    var uniforms = material.uniforms;\n    uniforms.uTroikaSDFDebug.value = !!this.debugSDF;\n    material.polygonOffset = !!this.depthOffset;\n    material.polygonOffsetFactor = material.polygonOffsetUnits = this.depthOffset || 0;\n\n    // shortcut for setting material color via facade prop:\n    var color = this.color;\n    if (color != null && material.color && material.color.isColor && color !== material._troikaColor) {\n      material.color.set(material._troikaColor = color);\n    }\n  };\n\n  TextMesh.prototype._updateLayoutUniforms = function _updateLayoutUniforms (material) {\n    var textInfo = this.textRenderInfo;\n    var uniforms = material.uniforms;\n    if (textInfo) {\n      var sdfTexture = textInfo.sdfTexture;\n      var totalBounds = textInfo.totalBounds;\n      uniforms.uTroikaSDFTexture.value = sdfTexture;\n      uniforms.uTroikaSDFTextureSize.value.set(sdfTexture.image.width, sdfTexture.image.height);\n      uniforms.uTroikaSDFGlyphSize.value = textInfo.sdfGlyphSize;\n      uniforms.uTroikaSDFMinDistancePct.value = textInfo.sdfMinDistancePercent;\n      uniforms.uTroikaTotalBounds.value.fromArray(totalBounds);\n\n      var clipRect = this.clipRect;\n      if (!(clipRect && Array.isArray(clipRect) && clipRect.length === 4)) {\n        uniforms.uTroikaClipRect.value.fromArray(totalBounds);\n      } else {\n        uniforms.uTroikaClipRect.value.set(\n          Math.max(totalBounds[0], clipRect[0]),\n          Math.max(totalBounds[1], clipRect[1]),\n          Math.min(totalBounds[2], clipRect[2]),\n          Math.min(totalBounds[3], clipRect[3])\n        );\n      }\n    }\n    return material\n  };\n\n  /**\n   * @override Custom raycasting to test against the whole text block's max rectangular bounds\n   * TODO is there any reason to make this more granular, like within individual line or glyph rects?\n   */\n  TextMesh.prototype.raycast = function raycast (raycaster, intersects) {\n    var textInfo = this.textRenderInfo;\n    if (textInfo) {\n      var bounds = textInfo.totalBounds;\n      raycastMesh.matrixWorld.multiplyMatrices(\n        this.matrixWorld,\n        tempMat4.set(\n          bounds[2] - bounds[0], 0, 0, bounds[0],\n          0, bounds[3] - bounds[1], 0, bounds[1],\n          0, 0, 1, 0,\n          0, 0, 0, 1\n        )\n      );\n      raycastMesh.raycast(raycaster, intersects);\n    }\n  };\n\n  Object.defineProperties( TextMesh.prototype, prototypeAccessors );\n\n  return TextMesh;\n}(Mesh));\n\n\n// Create setters for properties that affect text layout:\nvar SYNCABLE_PROPS = [\n  'font',\n  'fontSize',\n  'letterSpacing',\n  'lineHeight',\n  'maxWidth',\n  'overflowWrap',\n  'text',\n  'textAlign',\n  'whiteSpace',\n  'anchor'\n];\nSYNCABLE_PROPS.forEach(function (prop) {\n  var privateKey = '_private_' + prop;\n  Object.defineProperty(TextMesh.prototype, prop, {\n    get: function() {\n      return this[privateKey]\n    },\n    set: prop === 'anchor'\n      ? function(value) {\n        if (JSON.stringify(value) !== JSON.stringify(this[privateKey])) {\n          this[privateKey] = value;\n          this._needsSync = true;\n        }\n      }\n      : function(value) {\n        if (value !== this[privateKey]) {\n          this[privateKey] = value;\n          this._needsSync = true;\n        }\n      }\n  });\n});\n\nexport { GlyphsGeometry, TextMesh, configureTextBuilder, fontProcessorWorkerModule };\n","import aframe from 'aframe'\n\n// Use the standalone TextMesh build file to avoid a large tree of Troika framework dependencies\nimport {TextMesh} from 'troika-3d-text/dist/textmesh-standalone.esm.js'\n\n\nexport var COMPONENT_NAME = 'troika-text'\n\n\naframe.registerComponent(COMPONENT_NAME, {\n  schema: {\n    align: {type: 'string', default: 'left', oneOf: ['left', 'right', 'center']},\n    anchor: {default: 'center', oneOf: ['left', 'right', 'center', 'align']},\n    baseline: {default: 'center', oneOf: ['top', 'center', 'bottom']},\n    color: {type: 'color', default: '#FFF'},\n    font: {type: 'string'},\n    fontSize: {type: 'number', default: 0.2},\n    letterSpacing: {type: 'number', default: 0},\n    lineHeight: {type: 'number'},\n    maxWidth: {type: 'number', default: Infinity},\n    overflowWrap: {type: 'string', default: 'normal', oneOf: ['normal', 'break-word']},\n    value: {type: 'string'},\n    whiteSpace: {default: 'normal', oneOf: ['normal', 'nowrap']}\n\n    // attrs that can be configured via troika-text-material:\n    // opacity: {type: 'number', default: 1.0},\n    // transparent: {default: true},\n    // side: {default: 'front', oneOf: ['front', 'back', 'double']},\n  },\n\n  /**\n   * Called once when component is attached. Generally for initial setup.\n   */\n  init: function () {\n    // If we're being applied as a component attached to a generic a-entity, create an\n    // anonymous sub-entity that we can use to isolate the text mesh and the material\n    // component that should apply to it. If we're a primitive, no isolation is needed.\n    var textEntity\n    var isPrimitive = this.el.tagName.toLowerCase() === 'a-troika-text'\n    if (isPrimitive) {\n      textEntity = this.el\n    } else {\n      textEntity = document.createElement('a-entity')\n      this.el.appendChild(textEntity)\n    }\n    this.troikaTextEntity = textEntity\n\n    // Create TextMesh and add it to the entity as the 'mesh' object\n    var textMesh = this.troikaTextMesh = new TextMesh()\n    textMesh.anchor = [0, 0]\n    textEntity.setObject3D('mesh', textMesh)\n  },\n\n  /**\n   * Called when component is attached and when component data changes.\n   * Generally modifies the entity based on the data.\n   */\n  update: function () {\n    var data = this.data\n    var mesh = this.troikaTextMesh\n    var entity = this.troikaTextEntity\n\n    // Update the text mesh\n    mesh.text = data.value\n    mesh.textAlign = data.align\n    mesh.anchor[0] = anchorMapping[data.anchor]\n    mesh.anchor[1] = baselineMapping[data.baseline]\n    mesh.color = data.color\n    mesh.depthOffset = data.depthOffset || 0\n    mesh.font = data.font //TODO allow aframe stock font names\n    mesh.fontSize = data.fontSize\n    mesh.letterSpacing = data.letterSpacing || 0\n    mesh.lineHeight = data.lineHeight || null\n    mesh.overflowWrap = data.overflowWrap\n    mesh.whiteSpace = data.whiteSpace\n    mesh.maxWidth = data.maxWidth\n    mesh.sync()\n\n    // Pass material config down to child entity\n    if (entity !== this.el) {\n      var materialAttr = this.el.getAttribute('troika-text-material')\n      if (materialAttr) {\n        entity.setAttribute('material', materialAttr)\n      } else {\n        entity.removeAttribute('material')\n      }\n    }\n  },\n\n  /**\n   * Called when a component is removed (e.g., via removeAttribute).\n   * Generally undoes all modifications to the entity.\n   */\n  remove: function () {\n    // Free memory\n    this.troikaTextMesh.dispose()\n\n    // If using sub-entity, remove it\n    if (this.troikaTextEntity !== this.el) {\n      this.el.removeChild(this.troikaTextEntity)\n    }\n  }\n\n})\n\n\nvar anchorMapping = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1\n}\nvar baselineMapping = {\n  'top': 0,\n  'center': 0.5,\n  'bottom': 1\n}\n\n","import aframe from 'aframe'\nimport {COMPONENT_NAME} from './aframe-troika-text-component.js'\n\n\nvar mappings = {}\n\n// From aframe's primitives.js utilities...\nvar schema = aframe.components[COMPONENT_NAME].schema\nObject.keys(schema).map(function (prop) {\n  // Hyphenate where there is camelCase.\n  var attrName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  mappings[attrName] = COMPONENT_NAME + '.' + prop;\n});\n\n\naframe.registerPrimitive('a-troika-text', {\n  defaultComponents: {\n    'troika-text': {}\n  },\n  mappings: mappings\n})\n\n"],"names":["Thenable","Promise","resolve","reject","promise","res","rej","then","bind","BespokeThenable","value","state","queue","scheduled","completeCalled","oneTime","val","complete","reason","st","ignoreThrow","thenableObj","recursiveError","valThen","getThenableThen","call","v","scheduleQueueFlush","e","setTimeout","flushQueue","q","forEach","callIt","fn","isFn","called","args","len","arguments","length","apply","this","TypeError","onResolve","onReject","nextThenable","push","cb","result","resultThen","err","_workerModuleId","_messageId","workers","Object","create","openRequests","defineWorkerModule","options","init","Error","dependencies","getTransferables","workerId","id","registrationThenable","moduleFunc","callWorker","workerModuleData","ref","isCallable","map","dep","Function","stringifyFunction","isWorkerModule","str","toString","test","getWorker","worker","bootstrap","modules","self","addEventListener","data","messageId","action","registerModule","callback","depResult","noLog","console","error","postMessage","success","message","ref$1","handleResult","tx","Array","isArray","undefined","callModule","transferables","stack","Worker","URL","createObjectURL","Blob","type","onmessage","response","msgId","count","thenable","_count","warn","ThenableWorkerModule","voidMainRegExp","expandShaderIncludes","source","replace","match","include","chunk","ShaderChunk","assign","arguments$1","target","i","prop","hasOwnProperty","idCtr","epoch","Date","now","CACHE","WeakMap","createDerivedMaterial","baseMaterial","optionsHash","JSON","stringify","optionsJsonReplacer","getOptionsHash","cached","get","set","clone","distanceMaterialTpl","depthMaterialTpl","privateDerivedShadersProp","privateBeforeCompileProp","onBeforeCompile","shaderInfo","vertex","fragment","vertexShader","fragmentShader","upgraded","vertexDefs","vertexMainIntro","vertexTransform","fragmentDefs","fragmentMainIntro","fragmentColorTransform","timeUniform","code","match1","index","fullStr","substr","upgradeShaders","uniforms","DerivedMaterial","constructor","_listeners","prototype","isDerivedMaterial","copy","isShaderMaterial","extensions","defines","UniformsUtils","getDepthMaterial","depthMaterial","_depthMaterial","MeshDepthMaterial","depthPacking","RGBADepthPacking","IS_DEPTH_MATERIAL","getDistanceMaterial","distanceMaterial","_distanceMaterial","MeshDistanceMaterial","IS_DISTANCE_MATERIAL","dispose","material","TROIKA_DERIVED_MATERIAL","key","ShaderFloatArray","name","textureUniform","textureSizeUniform","multiplierUniform","dataSizeUniform","readFunction","_raw","Float32Array","_texture","DataTexture","Uint8Array","_length","_multiplier","prototypeAccessors","configurable","encodeFloatToFourInts","array","startIndex","enc0","enc1","enc2","enc3","Math","round","size","pow","ceil","log2","raw","subarray","setArray","_needsRepack","image","_needsMultCheck","getShaderUniforms","obj","me","_sync","width","getShaderHeaderCode","tex","needsRepack","height","maxVal","reduce","a","b","max","mult","needsUpdate","mult$1","defineProperties","MeshStandardMaterial","color","side","DoubleSide","workerModule","window","Typr","parse","buff","bin","_bin","readASCII","offset","readUshort","numF","readUint","fnts","foff","_readFont","ooff","readFixed","numTables","tags","_data","_offset","tabs","tag","toffset","t","trim","_tabOffset","tab","o","readF2dot14","readShort","readInt","p","uint8","int32","readInt8","int8","int16","readUshorts","arr","uint32","readUint64","l","s","String","fromCharCode","readUnicode","c","_tdec","readUTF8","tdec","readBytes","readASCIIArray","ArrayBuffer","Int8Array","Int16Array","uint16","Uint16Array","Int32Array","Uint32Array","_lctf","font","subt","offset0","offScriptList","offFeatureList","offLookupList","scriptList","readScriptList","featureList","readFeatureList","lookupList","readLookupList","noff","lut","readLookupTable","ltype","flag","cnt","numOfOnes","n","num","readClassDef","format","startGlyph","glyphCount","getInterval","start","end","readCoverage","cvg","fmt","coverageIndex","indexOf","ind","readFeatureTable","lookupCount","indices","readScriptTable","defLangSysOff","default","readLangSysTable","langSysCount","langSysOff","reqFeature","featureCount","features","CFF","buffer","ninds","readIndex","names","tdinds","topDicts","readDict","topdict","sinds","strings","readSubrs","CharStrings","cstr","ROS","FDArray","fdind","dict","_readFDict","FDSelect","rns","Encoding","readEncoding","charset","readCharset","ss","Private","Subrs","gsubinds","bias","nSubrs","Bias","tableSE","glyphByUnicode","cff","glyphBySE","charcode","nCodes","first","nLeft","inds","offsize","getCharString","b0","b1","vs","op","readCharString","carr","nibs","nib0","nib1","chars","parseFloat","cmap","offs","tables","platformID","encodingID","noffset","tind","parse0","parse4","parse6","parse12","log","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCount","startCount","idDelta","idRangeOffset","glyphIdArray","firstCode","entryCount","nGroups","groups","off","startCharCode","endCharCode","startGlyphID","glyf","g","maxp","numGlyphs","_parseGlyf","loca","gl","noc","xMin","yMin","xMax","yMax","endPts","instructionLength","instructions","crdnum","flags","rep","j","xs","i8","same","ys","x","y","parts","part","m","d","ty","p1","p2","glyphIndex","arg1","arg2","numInstr","instr","GPOS","covOff","coverage","valFmt1","ones1","pos","readValueRecord","valFmt2","ones2","pairsets","psc","psoff","pvc","gid2","value1","value2","val1","val2","classDef1","classDef2","class1Count","class2Count","matrix","row","valFmt","GSUB","delta","newg","vals","loff","readLigatureSet","cDefOffset","cDef","scset","subClassSetCount","scsOff","readSubClassSet","cvgs","backCvg","inptCvg","ahedCvg","lookupRec","readSubstLookupRecords","rUs","lset","readSubClassRule","rule","gcount","scount","input","substLookupRecords","out","readChainSubClassSet","readChainSubClassRule","pps","pi","subst","lcnt","readLigature","lig","chain","nglyph","ccnt","k","head","fontRevision","unitsPerEm","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfHMetrics","hmtx","aWidth","lsBearing","aw","lsb","kern","version","parseV1","nTables","glyph1","rval","readFormat0","pleft","nPairs","left","right","glyph2","ver","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","tname","languageID","nameID","slen","cname","soff","tid","_lang","postScriptName","version0","version1","version2","version5","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefault","usBreak","usMaxContext","usLowerOpticalPointSize","usUpperOpticalPointSize","post","italicAngle","underlinePosition","underlineThickness","SVG","entries","svgDocIndexOffset","numEntries","endGlyphID","svgDocOffset","svgDocLength","sbuf","svg","f","toPath","pth","cmds","crds","DOMParser","firstChild","tagName","nextSibling","vb","getAttribute","split","_toPath","children","nds","fill","ni","nd","tn","cfl","toks","_tokens","_toksToPath","ts","rn","cn","cc","charCodeAt","ch","charAt","isNum","ox","oy","pc","M","L","H","V","S","C","cmd","cmu","toUpperCase","ps","reps","_reps","xi","yi","x1","y1","x2","y2","x3","y3","co","U","codeToGlyph","p0e4","p3e1","p1e0","p0e3","sind","grp","glyphToPath","gid","path","nStems","haveWidth","defaultWidthX","open","pdct","gi","_drawCFF","_drawGlyf","_simpleGlyph","_compoGlyph","i0","il","pr","nx","onCurve","prOnCurve","nxOnCurve","P","moveTo","lineTo","qcurveTo","closePath","prt","_getGlyphClass","cd","intr","getPairAdjustment","g1","g2","gpos","llist","flist","tused","fl","ti","ltab","adj","c1","c2","ind1","ind2","stringToGlyphs","gls","codePointAt","gsub","cligs","fi","ci","feat","_getWPfeature","_applySubs","wsep","R","slft","srgt","rlim","rl","good","em1","cind","cls","scs","sc","inp","cind2","lrs","_glsCovered","lr","tab2","glyphsToPath","clr","tpath","pathToSVG","prec","lmap","Q","toFixed","join","pathToContext","ctx","bezierCurveTo","quadraticCurveTo","beginPath","fillStyle","curveTo","c1x","c1y","c2x","c2y","c3x","c3y","c4x","c4y","jpx","jpy","shift","nominalWidthX","pop","isX","sval","abs","adx","ady","bchar","achar","aind","subr","count1","alternate","tinyInflate","module","Tree","table","trans","Data","dest","sourceIndex","bitcount","destLen","ltree","dtree","sltree","sdtree","length_bits","length_base","dist_bits","dist_base","clcidx","code_tree","lengths","tinf_build_bits_base","bits","base","sum","tinf_build_tree","tinf_getbit","bit","tinf_read_bits","tinf_decode_symbol","cur","tinf_decode_trees","lt","dt","hlit","hdist","hclen","clen","sym","prev","tinf_inflate_block_data","dist","tinf_inflate_uncompressed_block","tinf_build_fixed_trees","exports","bfinal","slice","bufferIn","dataViewIn","DataView","offsetIn","read2","getUint16","read4","getUint32","write2","dataViewOut","setUint16","offsetOut","write4","setUint32","WOFFHeader","signature","flavor","reserved","totalSfntSize","majorVersion","minorVersion","metaOffset","metaLength","metaOrigLength","privOffset","privLength","TableDirectoryEntries","compLength","origLength","origChecksum","arrayOut","acc","entry","bufferOut","TableDirectoryEntry","outOffset","compressedData","uncompressedData","padding","convert_streams","woff2otf","cmdArgLengths","Z","typrFont","glyphMap","fontObj","peek","forEachGlyph","text","fontSize","letterSpacing","glyphX","fontScale","glyphIndices","charIndex","glyphObj","typrGlyph","advanceWidth","pathCommandCount","forEachPathCommand","argsIndex","argsArray","numArgs","typrFactory","woff2otfFactory","parserFactory","CONFIG","defaultFontURL","sdfGlyphSize","textureWidth","linkEl","document","createElement","atlases","fontProcessorWorkerModule","config","sdfTextureSize","sdfDistancePercent","pointOnQuadraticBezier","x0","y0","t2","pointOnCubicBezier","square","absDistanceToLineSegment","lineX0","lineY0","lineX1","lineY1","ldx","ldy","lengthSq","min","sqrt","GlyphSegmentsQuadtree","dx","dy","cx","cy","r","floor","LOG2E","_root","0","1","2","3","minX","Infinity","minY","maxX","maxY","addLineSegment","segment","next","_insertSegment","node","leafSegment","subIndex","walkTree","walkBranch","root","findNearestSignedDistance","maxSearchRadius","closestDist","isPointInPoly","inside","textureData","glyphW","glyphH","fontUnitsMaxDist","fontUnitsPerXTexel","fontUnitsPerYTexel","textureMinFontX","textureMinFontY","textureMaxFontX","textureMaxFontY","firstX","firstY","prevX","prevY","lineSegmentsIndex","prevPoint","nextPoint","prevPoint$1","i$1","nextPoint$1","sdfX","sdfY","signedDist","alpha","isFinite","renderingBounds","fontParser","sdfGenerator","defaultFontUrl","fonts","loadFont","fontUrl","atlas","onload","loadingAtlas","url","tryLoad","onError","request","XMLHttpRequest","responseType","status","statusText","onerror","send","doLoadFont","glyphs","process","metricsOnly","lineHeight","maxWidth","textAlign","whiteSpace","overflowWrap","anchor","includeCaretPositions","getSdfAtlas","hasMaxWidth","newGlyphs","glyphBounds","glyphAtlasIndices","caretPositions","totalBounds","maxLineWidth","canWrap","fontSizeMult","halfLeading","caretHeight","caretBottomOffset","lineXOffset","currentLine","lines","nextLineGlyphs","char","glyphWidth","isWhitespace","curLineGlyphs","adjustX","splice","isSoftWrapped","isEmpty","atlasInfo","line","lineGlyphs","lastChar","renderableGlyphs","lineYOffset","prevCharIndex","lineWidth","whitespaceCount","glyphInfo","adjust","glyphAtlasInfo","glyphSDFData","atlasIndex","anchorXOffset","anchorYOffset","totalBlockSize","newGlyphSDFs","measure","createSDFGenerator","createFontProcessor","processInWorker","fontProcessor","templateGeometry","PlaneBufferGeometry","translate","tempVec3","Vector3","GlyphsGeometry","InstancedBufferGeometry","boundingSphere","Sphere","__proto__","computeBoundingSphere","updateGlyphs","updateBufferAttr","maxInstancedCount","sphere","center","radius","distanceTo","geom","attrName","newArray","itemSize","attr","setAttribute","InstancedBufferAttribute","attribute","attributes","defaultMaterial","MeshBasicMaterial","transparent","tempMat4","Matrix4","raycastMesh","Mesh","TextMesh","geometry","depthOffset","clipRect","debugSDF","textRenderInfo","customDepthMaterial","customDistanceMaterial","sync","this$1","_needsSync","_isSyncing","_queuedSyncs","toObj","fromObj","href","sdfTexture","LuminanceFormat","LinearFilter","texImg","biggerArray","cols","srcStartIndex","tgtStartIndex","freeze","sdfMinDistancePercent","getTextRenderInfo","_textRenderInfo","queued","onBeforeRender","_prepareMaterial","derivedMaterial","_derivedMaterial","_baseMaterial","textMaterial","derivatives","uTroikaSDFTexture","uTroikaSDFTextureSize","Vector2","uTroikaSDFGlyphSize","uTroikaSDFMinDistancePct","uTroikaTotalBounds","Vector4","uTroikaClipRect","uTroikaSDFDebug","defineProperty","createTextDerivedMaterial","onDispose","removeEventListener","_updateLayoutUniforms","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","isColor","_troikaColor","textInfo","fromArray","raycast","raycaster","intersects","bounds","matrixWorld","multiplyMatrices","privateKey","aframe","registerComponent","schema","align","oneOf","baseline","textEntity","el","toLowerCase","appendChild","troikaTextEntity","textMesh","troikaTextMesh","setObject3D","update","mesh","entity","anchorMapping","baselineMapping","materialAttr","removeAttribute","remove","removeChild","top","bottom","mappings","components","keys","COMPONENT_NAME","registerPrimitive","defaultComponents","troika-text"],"mappings":"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"}